/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI
 */

@interface CNVisualIdentityAvatarViewController : UIViewController <CNContactChangesObserver, CNVisualIdentityAvatarContainerViewDelegate> {
    CAShapeLayer * _avatarClippingLayer;
    CNUIAvatarLayoutLayerItem * _avatarLayerItem;
    CNVisualIdentityAvatarLayoutManager * _avatarLayoutManager;
    CNVisualIdentityContactAvatarProvider * _avatarProvider;
    UIImageView * _badgeImageView;
    CNBadgingAvatarBadgeStyleSettings * _badgeStyleSettings;
    UITapGestureRecognizer * _badgeTapGestureRecognizer;
    <CNScheduler> * _callbackQueue;
    UIView * _contentView;
    CNAvatarAccessoryView * _mediaContextBadge;
    UIImageView * _mediaContextBadgeView;
    struct CGSize { 
        double width; 
        double height; 
    }  _previousSize;
    <CNVisualIdentityPrimaryAvatarProvider> * _primaryAvatarProvider;
    <CNScheduler> * _renderingQueue;
    bool  _usingDropAppearance;
    CNVisualIdentity * _visualIdentity;
}

@property (nonatomic, retain) CAShapeLayer *avatarClippingLayer;
@property (nonatomic, retain) CNUIAvatarLayoutLayerItem *avatarLayerItem;
@property (nonatomic, retain) CNVisualIdentityAvatarLayoutManager *avatarLayoutManager;
@property (nonatomic, retain) CNVisualIdentityContactAvatarProvider *avatarProvider;
@property (nonatomic, retain) UIImage *badgeImage;
@property (nonatomic, retain) UIImageView *badgeImageView;
@property (nonatomic, retain) CNBadgingAvatarBadgeStyleSettings *badgeStyleSettings;
@property (nonatomic, retain) UITapGestureRecognizer *badgeTapGestureRecognizer;
@property (nonatomic, readonly) <CNScheduler> *callbackQueue;
@property (nonatomic, retain) UIView *contentView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) CNAvatarAccessoryView *mediaContextBadge;
@property (nonatomic, retain) UIImageView *mediaContextBadgeView;
@property (nonatomic) struct CGSize { double x1; double x2; } previousSize;
@property (nonatomic, retain) <CNVisualIdentityPrimaryAvatarProvider> *primaryAvatarProvider;
@property (nonatomic, readonly) <CNScheduler> *renderingQueue;
@property (readonly) Class superclass;
@property (nonatomic) bool usingDropAppearance;
@property (nonatomic, retain) CNVisualIdentity *visualIdentity;

// Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI

+ (id)descriptorForRequiredKeys;
+ (id)log;
+ (unsigned long long)maxContactAvatars;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (id)avatarClippingLayer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })avatarFrameForFocusedAvatarInView:(id)arg1;
- (id)avatarLayerItem;
- (id)avatarLayoutManager;
- (id)avatarProvider;
- (id)badgeImage;
- (id)badgeImageView;
- (id)badgeStyleSettings;
- (id)badgeTapGestureRecognizer;
- (void)beginDropAppearance;
- (id)callbackQueue;
- (void)contactDidChange:(id)arg1;
- (id)containingCellView;
- (id)contentView;
- (void)createPrimaryAvatarLayerIfNeeded;
- (void)dealloc;
- (void)endDropAppearance;
- (struct CGSize { double x1; double x2; })estimatedSizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)initWithVisualIdentity:(id)arg1;
- (id)initWithVisualIdentity:(id)arg1 primaryAvatarProvider:(id)arg2;
- (id)initWithVisualIdentity:(id)arg1 primaryAvatarProvider:(id)arg2 avatarImageRendererSettings:(id)arg3;
- (long long)itemCount;
- (id)layerForPrimaryAvatar;
- (void)layoutAvatars;
- (void)layoutPrimaryAvatar;
- (void)loadView;
- (void)logSublayersContent;
- (id)mediaContextBadge;
- (id)mediaContextBadgeView;
- (struct CGSize { double x1; double x2; })previousSize;
- (id)primaryAvatarProvider;
- (void)removeAllSublayers;
- (void)removeBadgeTapGestureRecognizer;
- (id)renderingQueue;
- (void)setAvatarClippingLayer:(id)arg1;
- (void)setAvatarLayerItem:(id)arg1;
- (void)setAvatarLayoutManager:(id)arg1;
- (void)setAvatarProvider:(id)arg1;
- (void)setBadgeImage:(id)arg1;
- (void)setBadgeImageView:(id)arg1;
- (void)setBadgeStyleSettings:(id)arg1;
- (void)setBadgeTapGestureRecognizer:(id)arg1;
- (void)setBadgeTarget:(id)arg1 action:(SEL)arg2;
- (void)setBadgeViewImage:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setMediaContextBadge:(id)arg1;
- (void)setMediaContextBadgeView:(id)arg1;
- (void)setPreviousSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPrimaryAvatarProvider:(id)arg1;
- (void)setUsingDropAppearance:(bool)arg1;
- (void)setVisualIdentity:(id)arg1;
- (bool)shouldDisplayPrimaryAvatarImage;
- (void)updateAvatarSublayersAndAddToView;
- (void)updateBadgeCropStyle;
- (void)updateBadgeImageViewBackgroundColor;
- (void)updateBadgeImageViewContentMode;
- (void)updateBadgeImageViewPosition;
- (void)updateBadgeStyling;
- (void)updateBadgeTintColor;
- (void)updateBadgeViewFrame;
- (void)updateContactChangesNotifierRegistration;
- (void)updateImageForLayerItem:(id)arg1 atIndex:(long long)arg2 includePlaceholder:(bool)arg3;
- (void)updateImageForLayerItem:(id)arg1 atIndex:(long long)arg2 includePlaceholder:(bool)arg3 animated:(bool)arg4;
- (void)updateImageForPrimaryAvatar;
- (void)updateMediaContextBadgeFrame;
- (void)updateMediaContextBadgeImage;
- (void)updatePrimaryAvatar;
- (bool)usingDropAppearance;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (id)visualIdentity;
- (void)visualIdentityDidUpdate:(id)arg1;

// Image: /System/Library/AccessibilityBundles/ContactsUI.axbundle/ContactsUI

+ (Class)safeCategoryBaseClass;

- (id)accessibilityCustomContent;
- (id)accessibilityLabel;
- (unsigned long long)accessibilityTraits;
- (id)axAvatarContacts;
- (id)axContactNameForCNContact:(id)arg1;
- (id)axContacts;

@end
