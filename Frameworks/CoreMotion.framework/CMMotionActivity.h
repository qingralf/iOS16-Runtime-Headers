/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

@interface CMMotionActivity : CMLogItem {
    struct CLMotionActivity { 
        int type; 
        int confidence; 
        int source; 
        int mountedState; 
        int mountedConfidence; 
        bool isStanding; 
        float tilt; 
        double timestamp; 
        bool isVehicleConnected; 
        int exitState; 
        double estExitTime; 
        double startTime; 
        int rawType; 
        int rawConfidence; 
        struct { 
            unsigned int motionHint : 1; 
            unsigned int gpsHint : 1; 
            unsigned int basebandHint : 1; 
            unsigned int wifiHint : 1; 
            unsigned int btHint : 1; 
        } vehicularFlags; 
        int vehicularConfidence; 
        float drivingStowedLikelihoodSum; 
        float drivingArmLikelihoodSum; 
        float ssLikelihoodSum; 
        int workoutDetectionType; 
        double workoutDetectionTime; 
        unsigned long long workoutEscalationTime; 
        int typeYouth; 
    }  fState;
}

@property (nonatomic, readonly) bool automotive;
@property (nonatomic, readonly) long long confidence;
@property (nonatomic, readonly) bool cycling;
@property (nonatomic, readonly) bool running;
@property (nonatomic, readonly) NSDate *startDate;
@property (nonatomic, readonly) bool stationary;
@property (nonatomic, readonly) bool unknown;
@property (getter=isVehicleBTHint, nonatomic, readonly) bool vehicleBTHint;
@property (getter=isVehicleBasebandHint, nonatomic, readonly) bool vehicleBasebandHint;
@property (getter=isVehicleConnected, nonatomic, readonly) bool vehicleConnected;
@property (getter=isVehicleGpsHint, nonatomic, readonly) bool vehicleGpsHint;
@property (getter=isVehicleMotionHint, nonatomic, readonly) bool vehicleMotionHint;
@property (getter=isVehicleWifiHint, nonatomic, readonly) bool vehicleWifiHint;
@property (nonatomic, readonly) bool walking;

+ (bool)supportsSecureCoding;

- (bool)automotive;
- (long long)confidence;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)cycling;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithMotionActivity:(struct CLMotionActivity { int x1; int x2; int x3; int x4; int x5; bool x6; float x7; double x8; bool x9; int x10; double x11; double x12; int x13; int x14; struct { unsigned int x_15_1_1 : 1; unsigned int x_15_1_2 : 1; unsigned int x_15_1_3 : 1; unsigned int x_15_1_4 : 1; unsigned int x_15_1_5 : 1; } x15; int x16; float x17; float x18; float x19; int x20; double x21; unsigned long long x22; int x23; })arg1;
- (bool)isVehicleBTHint;
- (bool)isVehicleBasebandHint;
- (bool)isVehicleConnected;
- (bool)isVehicleGpsHint;
- (bool)isVehicleMotionHint;
- (bool)isVehicleWifiHint;
- (struct CLMotionActivity { int x1; int x2; int x3; int x4; int x5; bool x6; float x7; double x8; bool x9; int x10; double x11; double x12; int x13; int x14; struct { unsigned int x_15_1_1 : 1; unsigned int x_15_1_2 : 1; unsigned int x_15_1_3 : 1; unsigned int x_15_1_4 : 1; unsigned int x_15_1_5 : 1; } x15; int x16; float x17; float x18; float x19; int x20; double x21; unsigned long long x22; int x23; }*)motionActivity;
- (bool)running;
- (id)startDate;
- (bool)stationary;
- (bool)unknown;
- (bool)walking;

@end
