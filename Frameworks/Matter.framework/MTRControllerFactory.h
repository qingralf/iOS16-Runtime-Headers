/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Matter.framework/Matter
 */

@interface MTRControllerFactory : NSObject {
    struct MTRAttestationTrustStoreBridge { int (**x1)(); id x2; } * _attestationTrustStoreBridge;
    NSObject<OS_dispatch_queue> * _chipWorkQueue;
    struct DeviceControllerFactory { unsigned short x1; struct DeviceControllerSystemState {} *x2; struct PersistentStorageDelegate {} *x3; struct OperationalKeystore {} *x4; struct OperationalCertificateStore {} *x5; bool x6; } * _controllerFactory;
    NSMutableArray * _controllers;
    struct DeviceAttestationVerifier { int (**x1)(); } * _deviceAttestationVerifier;
    void * _groupDataProvider;
    void * _groupStorageDelegate;
    bool  _isRunning;
    struct PersistentStorageOperationalKeystore { int (**x1)(); struct PersistentStorageDelegate {} *x2; unsigned char x3; struct P256Keypair {} *x4; bool x5; bool x6; } * _keystore;
    void * _opCertStore;
    struct MTRPersistentStorageDelegateBridge { int (**x1)(); id x2; id x3; } * _persistentStorageDelegateBridge;
}

@property (readonly) struct MTRAttestationTrustStoreBridge { int (**x1)(); id x2; }*attestationTrustStoreBridge;
@property (readonly) NSObject<OS_dispatch_queue> *chipWorkQueue;
@property (readonly) struct DeviceControllerFactory { unsigned short x1; struct DeviceControllerSystemState {} *x2; struct PersistentStorageDelegate {} *x3; struct OperationalKeystore {} *x4; struct OperationalCertificateStore {} *x5; bool x6; }*controllerFactory;
@property (readonly) NSMutableArray *controllers;
@property struct DeviceAttestationVerifier { int (**x1)(); }*deviceAttestationVerifier;
@property (readonly) struct DeviceAttestationVerifier { int (**x1)(); }*deviceAttestationVerifier;
@property (readonly) struct GroupDataProvider { int (**x1)(); unsigned short x2; unsigned short x3; struct GroupListener {} *x4; }*groupData;
@property (readonly) void*groupDataProvider;
@property (readonly) void*groupStorageDelegate;
@property (nonatomic, readonly) bool isRunning;
@property (readonly) struct PersistentStorageOperationalKeystore { int (**x1)(); struct PersistentStorageDelegate {} *x2; unsigned char x3; struct P256Keypair {} *x4; bool x5; bool x6; }*keystore;
@property (readonly) void*opCertStore;
@property (readonly) struct MTRPersistentStorageDelegateBridge { int (**x1)(); id x2; id x3; }*persistentStorageDelegateBridge;
@property (readonly) struct MTRPersistentStorageDelegateBridge { int (**x1)(); id x2; id x3; }*storageDelegateBridge;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (struct MTRAttestationTrustStoreBridge { int (**x1)(); id x2; }*)attestationTrustStoreBridge;
- (bool)checkForInitError:(bool)arg1 logMsg:(id)arg2;
- (id)chipWorkQueue;
- (void)cleanupInitObjects;
- (void)cleanupStartupObjects;
- (struct DeviceControllerFactory { unsigned short x1; struct DeviceControllerSystemState {} *x2; struct PersistentStorageDelegate {} *x3; struct OperationalKeystore {} *x4; struct OperationalCertificateStore {} *x5; bool x6; }*)controllerFactory;
- (void)controllerShuttingDown:(id)arg1;
- (id)controllers;
- (id)createController;
- (void)dealloc;
- (struct DeviceAttestationVerifier { int (**x1)(); }*)deviceAttestationVerifier;
- (bool)findMatchingFabric:(void*)arg1 params:(id)arg2 fabric:(const struct FabricInfo {}**)arg3;
- (struct GroupDataProvider { int (**x1)(); unsigned short x2; unsigned short x3; struct GroupListener {} *x4; }*)groupData;
- (void*)groupDataProvider;
- (void*)groupStorageDelegate;
- (id)init;
- (bool)isRunning;
- (struct PersistentStorageOperationalKeystore { int (**x1)(); struct PersistentStorageDelegate {} *x2; unsigned char x3; struct P256Keypair {} *x4; bool x5; bool x6; }*)keystore;
- (void*)opCertStore;
- (struct MTRPersistentStorageDelegateBridge { int (**x1)(); id x2; id x3; }*)persistentStorageDelegateBridge;
- (void)setDeviceAttestationVerifier:(struct DeviceAttestationVerifier { int (**x1)(); }*)arg1;
- (void)shutdown;
- (id)startControllerOnExistingFabric:(id)arg1;
- (id)startControllerOnNewFabric:(id)arg1;
- (bool)startup:(id)arg1;
- (struct MTRPersistentStorageDelegateBridge { int (**x1)(); id x2; id x3; }*)storageDelegateBridge;

@end
