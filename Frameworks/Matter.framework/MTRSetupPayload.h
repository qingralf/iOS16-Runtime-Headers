/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Matter.framework/Matter
 */

@interface MTRSetupPayload : NSObject <NSSecureCoding> {
    struct SetupPayload { 
        unsigned char version; 
        unsigned short vendorID; 
        unsigned short productID; 
        unsigned char commissioningFlow; 
        struct BitFlags<chip::RendezvousInformationFlag, unsigned char> { 
            unsigned char mValue; 
        } rendezvousInformation; 
        unsigned short discriminator; 
        unsigned int setUpPINCode; 
        bool isShortDiscriminator; 
        struct map<unsigned char, chip::OptionalQRCodeInfo, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfo>>> { 
            struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>, true>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>>> { 
                void *__begin_node_; 
                struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, void *>>> { 
                    struct __tree_end_node<std::__tree_node_base<void *> *> { 
                        void *__left_; 
                    } __value_; 
                } __pair1_; 
                struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>, true>> { 
                    unsigned long long __value_; 
                } __pair3_; 
            } __tree_; 
        } optionalVendorData; 
        struct map<unsigned char, chip::OptionalQRCodeInfoExtension, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfoExtension>>> { 
            struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>, true>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>>> { 
                void *__begin_node_; 
                struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, void *>>> { 
                    struct __tree_end_node<std::__tree_node_base<void *> *> { 
                        void *__left_; 
                    } __value_; 
                } __pair1_; 
                struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>, true>> { 
                    unsigned long long __value_; 
                } __pair3_; 
            } __tree_; 
        } optionalExtensionData; 
    }  _chipSetupPayload;
    unsigned long long  _commissioningFlow;
    NSNumber * _discriminator;
    NSNumber * _productID;
    unsigned long long  _rendezvousInformation;
    NSString * _serialNumber;
    NSNumber * _setUpPINCode;
    NSNumber * _vendorID;
    NSNumber * _version;
}

@property (nonatomic) unsigned long long commissioningFlow;
@property (nonatomic, retain) NSNumber *discriminator;
@property (nonatomic, retain) NSNumber *productID;
@property (nonatomic) unsigned long long rendezvousInformation;
@property (nonatomic, retain) NSString *serialNumber;
@property (nonatomic, retain) NSNumber *setUpPINCode;
@property (nonatomic, retain) NSNumber *vendorID;
@property (nonatomic, retain) NSNumber *version;

+ (bool)supportsSecureCoding;

- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)commissioningFlow;
- (unsigned long long)convertCommissioningFlow:(unsigned char)arg1;
- (unsigned long long)convertRendezvousFlags:(struct BitFlags<chip::RendezvousInformationFlag, unsigned char> { unsigned char x1; })arg1;
- (id)discriminator;
- (void)encodeWithCoder:(id)arg1;
- (id)getAllOptionalVendorData:(id*)arg1;
- (void)getSerialNumber:(struct SetupPayload { unsigned char x1; unsigned short x2; unsigned short x3; unsigned char x4; struct BitFlags<chip::RendezvousInformationFlag, unsigned char> { unsigned char x_5_1_1; } x5; unsigned short x6; unsigned int x7; bool x8; struct map<unsigned char, chip::OptionalQRCodeInfo, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfo>>> { struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>, true>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>>> { void *x_1_2_1; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>, true>> { unsigned long long x_3_3_1; } x_1_2_3; } x_9_1_1; } x9; })arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithSetupPayload:(struct SetupPayload { unsigned char x1; unsigned short x2; unsigned short x3; unsigned char x4; struct BitFlags<chip::RendezvousInformationFlag, unsigned char> { unsigned char x_5_1_1; } x5; unsigned short x6; unsigned int x7; bool x8; struct map<unsigned char, chip::OptionalQRCodeInfo, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfo>>> { struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>, true>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>>> { void *x_1_2_1; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>, true>> { unsigned long long x_3_3_1; } x_1_2_3; } x_9_1_1; } x9; })arg1;
- (id)productID;
- (unsigned long long)rendezvousInformation;
- (id)serialNumber;
- (void)setCommissioningFlow:(unsigned long long)arg1;
- (void)setDiscriminator:(id)arg1;
- (void)setProductID:(id)arg1;
- (void)setRendezvousInformation:(unsigned long long)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setSetUpPINCode:(id)arg1;
- (id)setUpPINCode;
- (void)setVendorID:(id)arg1;
- (void)setVersion:(id)arg1;
- (id)vendorID;
- (id)version;

@end
