/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/HomeKit.framework/HomeKit
 */

@interface HMMediaGroup : NSObject <HFAccessoryLikeObjectRootHomeKitObjectProvider, HFAccessoryLikeObjectVendor, HFAccessoryRepresentable, HFHomeKitObject, HFIncludedContextProtocol, HFMediaProfileContainer, HFServiceNameComponentsProviding, HMEProtoBufferCoding, HMFLogging, HMFObject, HRERecommendableObjectProtocol, NSCopying, NSMutableCopying, NSSecureCoding> {
    NSUUID * _associatedGroupIdentifier;
    bool  _defaultName;
    NSArray * _destinationUniqueIdentifiersInternal;
    NSUUID * _identifier;
    NSString * _name;
    NSUUID * _parentIdentifier;
}

@property (nonatomic, readonly) NSSet *accessories;
@property (copy) NSUUID *associatedGroupIdentifier;
@property (nonatomic, readonly, copy) NSArray *attributeDescriptions;
@property (readonly, copy) NSString *debugDescription;
@property (getter=isDefaultName) bool defaultName;
@property <HMMediaObjectDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSArray *destinationIdentifiers;
@property (readonly, copy) NSArray *destinationUniqueIdentifiers;
@property (copy) NSArray *destinationUniqueIdentifiersInternal;
@property (nonatomic, readonly) bool hasValidSettings;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HFAccessoryLikeObject *hf_accessoryLikeObject;
@property (nonatomic, readonly) HFAccessoryType *hf_accessoryType;
@property (nonatomic, readonly) NSSet *hf_associatedAccessories;
@property (nonatomic, readonly) HMAccessory *hf_backingAccessory;
@property (nonatomic, readonly, copy) NSString *hf_categoryCapitalizedLocalizedDescription;
@property (nonatomic, readonly, copy) NSString *hf_categoryLowercaseLocalizedDescription;
@property (nonatomic, readonly) NSSet *hf_containedCharacteristics;
@property (nonatomic, readonly) NSSet *hf_containedProfiles;
@property (nonatomic, readonly) NSSet *hf_containedServices;
@property (nonatomic, readonly, copy) NSDate *hf_dateAdded;
@property (nonatomic, readonly) NSSet *hf_dependentHomeKitObjectsForDownstreamItems;
@property (nonatomic, readonly, copy) NSSet *hf_deviceIdentifiers;
@property (nonatomic, readonly, copy) NSString *hf_displayName;
@property (nonatomic, readonly) bool hf_effectiveIsFavorite;
@property (nonatomic, readonly) bool hf_effectiveShowInHomeDashboard;
@property (nonatomic, readonly) NSSet *hf_fakeDebugSymptoms;
@property (nonatomic, readonly) bool hf_hasSetFavorite;
@property (nonatomic, readonly) bool hf_hasSetShowInHomeDashboard;
@property (nonatomic, readonly) bool hf_hasSetVisibleInHomeStatus;
@property (nonatomic, readonly) HMHome *hf_home;
@property (nonatomic, readonly) <HFHomeKitObject> *hf_homeKitObject;
@property (nonatomic, readonly) bool hf_homePodIsCapableOfShowingSplitAccountError;
@property (nonatomic, readonly) bool hf_homePodSupportsMultiUser;
@property (nonatomic, readonly) bool hf_isAccessorySettingsReachable;
@property (nonatomic, readonly) bool hf_isAppleMusicReachable;
@property (nonatomic, readonly) bool hf_isCurrentAccessory;
@property (nonatomic, readonly) bool hf_isFavorite;
@property (nonatomic, readonly) bool hf_isForcedVisibleInHomeStatus;
@property (nonatomic, readonly) bool hf_isReachable;
@property (nonatomic, readonly) bool hf_isSpeakerGrouped;
@property (nonatomic, readonly) bool hf_isVisibleInHomeStatus;
@property (nonatomic, readonly) Class hf_itemClass;
@property (nonatomic, readonly, copy) NSString *hf_mediaRouteIdentifier;
@property (nonatomic, readonly) <HFMediaValueSource> *hf_mediaValueSource;
@property (nonatomic, readonly) HMRoom *hf_parentRoom;
@property (nonatomic, readonly) NSString *hf_prettyDescription;
@property (nonatomic, readonly) <HFAccessoryLikeObjectRootHomeKitObjectProvider><HFAccessoryRepresentable><HFFavoritable><HFShowInHomeDashboard><HFIncludedContextProtocol> *hf_rootAccessoryLikeHomeKitObject;
@property (nonatomic, readonly) HMRoom *hf_safeRoom;
@property (nonatomic, readonly) HFServiceNameComponents *hf_serviceNameComponents;
@property (nonatomic, readonly) HFHomeKitSettingsAdapterManager *hf_settingsAdapterManager;
@property (nonatomic, readonly) HFHomeKitSettingsValueManager *hf_settingsValueManager;
@property (nonatomic, readonly) bool hf_shouldShowInFavorites;
@property (nonatomic, readonly) bool hf_showInHomeDashboard;
@property (nonatomic, readonly) bool hf_showsAudioSettings;
@property (nonatomic, readonly) bool hf_supportsHomeStatus;
@property (nonatomic, readonly) bool hf_supportsHomeTheater;
@property (nonatomic, readonly) bool hf_supportsMediaActions;
@property (nonatomic, readonly) bool hf_supportsMultiUser;
@property (nonatomic, readonly) bool hf_supportsMusicAlarm;
@property (nonatomic, readonly) bool hf_supportsPreferredMediaUser;
@property (nonatomic, readonly) bool hf_supportsSoftwareUpdate;
@property (nonatomic, readonly) bool hf_supportsSpeakerGrouping;
@property (nonatomic, readonly) bool hf_supportsStereoPairing;
@property (nonatomic, readonly) NSString *hf_tileSize;
@property (nonatomic, readonly) <HFHomeKitObject> *homeKitObject;
@property (nonatomic, readonly) NSSet *homekitObjectIdentifiers;
@property (nonatomic, readonly) NSSet *hre_actionTypes;
@property (nonatomic, readonly) NSSet *hre_characteristics;
@property (nonatomic, readonly) HMHome *hre_home;
@property (nonatomic, readonly) bool hre_isActionable;
@property (nonatomic, readonly) bool hre_isMediaObject;
@property (nonatomic, readonly) bool hre_isVisible;
@property (nonatomic, readonly) NSSet *hre_matchingTypes;
@property (nonatomic, readonly) HMRoom *hre_parentRoom;
@property (nonatomic, readonly) NSString *hre_primaryType;
@property (copy) NSUUID *identifier;
@property (nonatomic, readonly) bool isContainedWithinItemGroup;
@property (nonatomic, readonly) bool isItemGroup;
@property (nonatomic, readonly) NSSet *mediaProfiles;
@property (nonatomic, readonly, copy) HMMediaSession *mediaSession;
@property (copy) NSString *name;
@property (nonatomic, readonly) unsigned long long numberOfItemsContainedWithinGroup;
@property (readonly, copy) NSUUID *parentIdentifier;
@property (readonly, copy) NSString *privateDescription;
@property (readonly, copy) NSString *propertyDescription;
@property (readonly) HMAccessorySettings *settings;
@property (readonly, copy) NSString *shortDescription;
@property (readonly) Class superclass;
@property (readonly, copy) NSSet *symptoms;
@property (nonatomic, readonly) HMSymptomsHandler *symptomsHandler;
@property (nonatomic, readonly, copy) NSUUID *uniqueIdentifier;
@property (readonly, copy) NSString *urlString;

// Image: /System/Library/Frameworks/HomeKit.framework/HomeKit

+ (id)groupsWithProtoBufferData:(id)arg1;
+ (id)logCategory;
+ (id)protoBufferDataWithGroups:(id)arg1;
+ (id)shortDescription;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)associatedGroupIdentifier;
- (id)attributeDescriptions;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)destinationIdentifiers;
- (id)destinationUniqueIdentifiers;
- (id)destinationUniqueIdentifiersInternal;
- (id)encodeToProtoBufferData;
- (void)encodeToProtoBufferDataWithEvent:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)identifier;
- (id)initClassWithProtoBufferData:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 parentIdentifier:(id)arg2 name:(id)arg3 defaultName:(bool)arg4 destinationIdentifiers:(id)arg5 associatedGroupIdentifier:(id)arg6;
- (id)initWithProtoBufferData:(id)arg1;
- (bool)isDefaultName;
- (bool)isEqual:(id)arg1;
- (id)logIdentifier;
- (id)mediaSystemData;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)name;
- (id)parentIdentifier;
- (id)privateDescription;
- (void)setAssociatedGroupIdentifier:(id)arg1;
- (void)setDefaultName:(bool)arg1;
- (void)setDestinationUniqueIdentifiersInternal:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setName:(id)arg1;
- (id)shortDescription;

// Image: /System/Library/PrivateFrameworks/Home.framework/Home

- (id)accessories;
- (bool)hasValidSettings;
- (id)hf_accessoryLikeObject;
- (id)hf_accessoryType;
- (id)hf_appleMusicCurrentLoggedInAccount;
- (id)hf_appleMusicCurrentLoggedInAccountDSID;
- (id)hf_associatedAccessories;
- (id)hf_backingAccessory;
- (id)hf_categoryCapitalizedLocalizedDescription;
- (id)hf_categoryLowercaseLocalizedDescription;
- (id)hf_containedCharacteristics;
- (id)hf_containedProfiles;
- (id)hf_containedServices;
- (id)hf_dateAdded;
- (id)hf_dependentHomeKitObjectsForDownstreamItems;
- (id)hf_destination;
- (id)hf_deviceIdentifiers;
- (id)hf_displayName;
- (bool)hf_effectiveIsFavorite;
- (bool)hf_effectiveShowInHomeDashboard;
- (id)hf_fetchLog:(id)arg1 timeout:(double)arg2;
- (id)hf_fetchLogListWithTimeout:(double)arg1;
- (bool)hf_hasSetFavorite;
- (bool)hf_hasSetForContextType:(unsigned long long)arg1;
- (bool)hf_hasSetShowInHomeDashboard;
- (bool)hf_hasSetVisibleInHomeStatus;
- (id)hf_home;
- (id)hf_homeKitObject;
- (bool)hf_homePodIsCapableOfShowingSplitAccountError;
- (id)hf_homePodMediaAccountIsMismatchedWithHomeMediaAccount;
- (bool)hf_homePodSupportsMultiUser;
- (id)hf_homePodSupportsMultiUserLanguage;
- (id)hf_idsDeviceIdentifierWithError:(id*)arg1;
- (bool)hf_isAccessorySettingsReachable;
- (bool)hf_isAppleMusicReachable;
- (bool)hf_isCurrentAccessory;
- (id)hf_isEitherHomePodMediaAccountOrHomeMediaAccountPresent;
- (bool)hf_isFavorite;
- (bool)hf_isForcedVisibleInHomeStatus;
- (bool)hf_isInRoom:(id)arg1;
- (bool)hf_isOnForContextType:(unsigned long long)arg1;
- (bool)hf_isReachable;
- (bool)hf_isSpeakerGrouped;
- (bool)hf_isVisibleInHomeStatus;
- (Class)hf_itemClass;
- (id)hf_mediaRouteIdentifier;
- (id)hf_mediaValueSource;
- (id)hf_moveToRoom:(id)arg1;
- (id)hf_parentRoom;
- (id)hf_preferredMediaUser;
- (unsigned long long)hf_preferredUserSelectionType;
- (id)hf_rooms;
- (id)hf_rootAccessoryLikeHomeKitObject;
- (id)hf_safeRoom;
- (id)hf_serviceNameComponents;
- (id)hf_setTileSize:(id)arg1;
- (id)hf_settingsAdapterManager;
- (id)hf_settingsValueManager;
- (bool)hf_shouldBeOnForContextType:(unsigned long long)arg1;
- (bool)hf_shouldHideForContextType:(unsigned long long)arg1;
- (bool)hf_shouldShowInFavorites;
- (bool)hf_showInHomeDashboard;
- (bool)hf_showsAudioSettings;
- (id)hf_stateDumpBuilderWithContext:(id)arg1;
- (bool)hf_supportsHomeStatus;
- (bool)hf_supportsHomeTheater;
- (bool)hf_supportsMediaActions;
- (bool)hf_supportsMultiUser;
- (bool)hf_supportsMusicAlarm;
- (bool)hf_supportsPreferredMediaUser;
- (bool)hf_supportsSoftwareUpdate;
- (bool)hf_supportsSpeakerGrouping;
- (bool)hf_supportsStereoPairing;
- (id)hf_tileSize;
- (id)hf_updateDateAdded:(id)arg1;
- (id)hf_updateIsFavorite:(bool)arg1;
- (id)hf_updateIsVisibleInHomeStatus:(bool)arg1;
- (id)hf_updateShowInHomeDashboard:(bool)arg1;
- (id)hf_updateValue:(bool)arg1 forContextType:(unsigned long long)arg2;
- (id)homeKitObject;
- (id)homekitObjectIdentifiers;
- (bool)isContainedWithinItemGroup;
- (bool)isItemGroup;
- (id)mediaProfiles;
- (id)mediaSession;
- (unsigned long long)numberOfItemsContainedWithinGroup;
- (id)settings;
- (id)symptoms;
- (id)symptomsHandler;
- (id)uniqueIdentifier;

// Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon

- (id)assistantObjectWithHome:(id)arg1;
- (id)urlString;

// Image: /System/Library/PrivateFrameworks/HomeKitDaemonLegacy.framework/HomeKitDaemonLegacy

- (id)assistantObjectWithHome:(id)arg1;
- (id)urlString;

// Image: /System/Library/PrivateFrameworks/HomeRecommendationEngine.framework/HomeRecommendationEngine

- (id)hre_actionTypes;
- (id)hre_characteristics;
- (id)hre_home;
- (bool)hre_isActionable;
- (bool)hre_isMediaObject;
- (bool)hre_isVisible;
- (id)hre_matchingTypes;
- (id)hre_parentRoom;
- (id)hre_primaryType;

@end
