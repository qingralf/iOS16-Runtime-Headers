/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/GameController.framework/GameController
 */

@interface GCControllerView : UIView {
    GCControllerButtonInputView * _buttonA;
    GCControllerButtonInputView * _buttonB;
    GCControllerButtonInputView * _buttonX;
    GCControllerButtonInputView * _buttonY;
    GCController * _controller;
    GCControllerDpadInputView * _dpad;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _edgeInsets;
    GCControllerButtonInputView * _leftShoulder;
    UIView * _leftSide;
    GCControllerThumbstickInputView * _leftThumbstick;
    GCControllerButtonInputView * _leftTrigger;
    GCControllerButtonInputView * _rightShoulder;
    UIView * _rightSide;
    GCControllerThumbstickInputView * _rightThumbstick;
    GCControllerButtonInputView * _rightTrigger;
}

@property (nonatomic, retain) GCControllerButtonInputView *buttonA;
@property (nonatomic, retain) GCControllerButtonInputView *buttonB;
@property (nonatomic, retain) GCControllerButtonInputView *buttonX;
@property (nonatomic, retain) GCControllerButtonInputView *buttonY;
@property (nonatomic, retain) GCController *controller;
@property (nonatomic, retain) GCControllerDpadInputView *dpad;
@property (nonatomic, retain) GCControllerButtonInputView *leftShoulder;
@property (nonatomic, retain) GCControllerThumbstickInputView *leftThumbstick;
@property (nonatomic, retain) GCControllerButtonInputView *leftTrigger;
@property (nonatomic, retain) GCControllerButtonInputView *rightShoulder;
@property (nonatomic, retain) GCControllerThumbstickInputView *rightThumbstick;
@property (nonatomic, retain) GCControllerButtonInputView *rightTrigger;

- (void).cxx_destruct;
- (void)_commonInit;
- (void)applyPadOrientation;
- (void)applyPhoneOrientation:(long long)arg1;
- (void)assignInputElements;
- (id)buttonA;
- (id)buttonB;
- (id)buttonX;
- (id)buttonY;
- (id)controller;
- (void)dealloc;
- (void)didMoveToSuperview;
- (id)dpad;
- (void)encodeWithCoder:(id)arg1;
- (void)ensureController;
- (id)getConfigurationForElement:(id)arg1;
- (id)getUIControlForName:(id)arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 configuration:(id)arg2;
- (id)leftShoulder;
- (id)leftThumbstick;
- (id)leftTrigger;
- (void)orientationChanged;
- (void)publish;
- (id)rightShoulder;
- (id)rightThumbstick;
- (id)rightTrigger;
- (void)setButtonA:(id)arg1;
- (void)setButtonB:(id)arg1;
- (void)setButtonX:(id)arg1;
- (void)setButtonY:(id)arg1;
- (void)setConfigurationForElement:(id)arg1 configuration:(id)arg2;
- (void)setController:(id)arg1;
- (void)setDpad:(id)arg1;
- (void)setLeftShoulder:(id)arg1;
- (void)setLeftThumbstick:(id)arg1;
- (void)setLeftTrigger:(id)arg1;
- (void)setRightShoulder:(id)arg1;
- (void)setRightThumbstick:(id)arg1;
- (void)setRightTrigger:(id)arg1;
- (void)setupPositions;
- (void)setupSide:(id)arg1 thumbstick:(id)arg2 buttons:(id)arg3;
- (void)unpublish;

@end
