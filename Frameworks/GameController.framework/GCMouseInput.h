/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/GameController.framework/GameController
 */

@interface GCMouseInput : GCPhysicalInputProfile {
    NSMutableArray * _auxiliaryButtons;
    long long  _buttons;
    GCController * _controller;
    bool  _isActive;
    GCControllerButtonInput * _leftButton;
    GCControllerButtonInput * _middleButton;
    id /* block */  _mouseButtonPressedPrivate;
    id /* block */  _mouseMovedHandler;
    id /* block */  _mouseMovedHandlerPrivate;
    GCControllerButtonInput * _rightButton;
    GCDeviceCursor * _scroll;
    bool  _wasInitialized;
    UIWindow * _window;
}

@property (nonatomic, readonly) NSArray *auxiliaryButtons;
@property (nonatomic, readonly) GCControllerButtonInput *leftButton;
@property (nonatomic, readonly) GCControllerButtonInput *middleButton;
@property (nonatomic, copy) id /* block */ mouseMovedHandler;
@property (nonatomic, readonly) GCControllerButtonInput *rightButton;
@property (nonatomic, readonly) GCDeviceCursor *scroll;

- (void).cxx_destruct;
- (void)_fireMouseMovedWithQueue:(id)arg1 deltaX:(float)arg2 deltaY:(float)arg3;
- (void)_handleButtonEvent:(long long)arg1;
- (void)_handleDigitizerEvent:(struct CGPoint { double x1; double x2; })arg1;
- (void)_handleEventImpl:(struct __IOHIDEvent { }*)arg1;
- (bool)_handleEventRec:(struct __IOHIDEvent { }*)arg1;
- (void)_handlePointerEvent:(struct CGPoint { double x1; double x2; })arg1;
- (void)_handleScrollEvent:(struct CGPoint { double x1; double x2; })arg1;
- (long long)_mouseButtons;
- (void)appDidBecomeActive;
- (void)appWillResignActive;
- (id)auxiliaryButtons;
- (id)controller;
- (void)handleEvent:(struct __IOHIDEvent { }*)arg1;
- (id)handlerQueue;
- (id)initWithController:(id)arg1;
- (id)leftButton;
- (id)middleButton;
- (id /* block */)mouseButtonPressedPrivate;
- (id /* block */)mouseMovedHandler;
- (id /* block */)mouseMovedHandlerPrivate;
- (id)name;
- (id)productCategory;
- (id)rightButton;
- (id)scroll;
- (void)setController:(id)arg1;
- (void)setMouseButtonPressedPrivate:(id /* block */)arg1;
- (void)setMouseMovedHandler:(id /* block */)arg1;
- (void)setMouseMovedHandlerPrivate:(id /* block */)arg1;
- (bool)shouldAcceptMouseEvents;

@end
