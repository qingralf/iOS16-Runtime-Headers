/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Photos.framework/Photos
 */

@interface PHSuggestionWallpaperUtilities : NSObject

+ (id /* block */)_assetSortComparatorForPortraitWallpaper;
+ (id)_blockedImportedByBundleIdentifiers;
+ (id)_facePredicateForPortraitWallpaperCandidatesWithPersonLocalIdentifiers:(id)arg1 deviceAspectRatio:(double)arg2;
+ (id)_fetchMeContactIdentifier;
+ (id)_fetchSuggestedMePersonLocalIdentifierInPhotoLibrary:(id)arg1;
+ (id)_mostRecentAssetDateInPhotoLibrary:(id)arg1;
+ (id)_personFetchOptionsWithPhotoLibrary:(id)arg1;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bestWallpaperCropForAsset:(id)arg1 classification:(unsigned long long)arg2 outputCropScore:(double*)arg3 outputLayoutAcceptable:(bool*)arg4;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bestWallpaperCropForAsset:(id)arg1 classification:(unsigned long long)arg2 outputCropScore:(double*)arg3 outputLayoutAcceptable:(bool*)arg4 layoutConfiguration:(id)arg5;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bestWallpaperCropForSuggestion:(id)arg1 outputCropScore:(double*)arg2 outputLayoutAcceptable:(bool*)arg3;
+ (id)fallbackPortraitWallpaperGallerySortedFeaturedPhotosInPhotoLibrary:(id)arg1;
+ (id)fallbackPortraitWallpaperGallerySortedFeaturedPhotosInPhotoLibrary:(id)arg1 passingFilterBlock:(id /* block */)arg2 maximumNumberOfTries:(long long)arg3;
+ (id)fetchKnownPersonLocalIdentifiersInPhotoLibrary:(id)arg1 fetchLimit:(unsigned long long)arg2;
+ (id)fetchPersonLocalIdentifiersForSuggestionSubtype:(unsigned short)arg1 photoLibrary:(id)arg2;
+ (id)fetchPortraitAssetsWithOptions:(id)arg1;
+ (id)fetchWallpaperGallerySuggestionsInPhotoLibrary:(id)arg1;
+ (bool)hasAnyKnownPersonLocalIdentifierInPhotoLibrary:(id)arg1;
+ (id)knownPersonLocalIdentifiersInPhotoLibrary:(id)arg1;
+ (unsigned long long)mediaAnalysisTypeForParallaxClassification:(unsigned long long)arg1;
+ (unsigned long long)parallaxClassificationForMedia:(id)arg1 descriptorType:(long long)arg2;
+ (unsigned long long)parallaxClassificationForSuggestionMedia:(id)arg1;
+ (unsigned long long)parallaxClassificationForSuggestionSubtype:(unsigned short)arg1;
+ (id)predicateForPortraitWallpaperCandidatesWithPersonLocalIdentifiers:(id)arg1;
+ (id)predicateForPortraitWallpaperCandidatesWithPersonLocalIdentifiers:(id)arg1 deviceAspectRatio:(double)arg2;
+ (id)randomNumberGeneratorForWallpaperDonation;
+ (void)rejectWallpaperSuggestions:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)rejectWallpaperSuggestionsUsingAsset:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)rejectWallpaperSuggestionsUsingAssetOfSuggestion:(id)arg1 completionHandler:(id /* block */)arg2;
+ (id)wallpaperGalleryFeaturedPhotoSortedSuggestionsFromSuggestions:(id)arg1;
+ (id)wallpaperGallerySmartAlbumSuggestionsFromSuggestions:(id)arg1;

@end
