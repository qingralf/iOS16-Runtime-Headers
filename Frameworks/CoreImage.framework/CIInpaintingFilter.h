/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreImage.framework/CoreImage
 */

@interface CIInpaintingFilter : CIFilter {
    InpaintingExecutionContext * _executionContext;
    NSArray * inputFaceBoundingBoxes;
    CIImage * inputImage;
    NSNumber * inputInpaintingBlendingRadius;
    NSNumber * inputInpaintingMode;
    NSArray * inputInpaintingProcessingResolutions;
    CIVector * inputMaskBoundingBox;
    CIImage * inputMaskImage;
}

@property (readonly) InpaintingExecutionContext *executionContext;
@property (nonatomic, retain) NSArray *inputFaceBoundingBoxes;
@property (nonatomic, retain) CIImage *inputImage;
@property (nonatomic, retain) NSNumber *inputInpaintingBlendingRadius;
@property (nonatomic, retain) NSNumber *inputInpaintingMode;
@property (nonatomic, retain) NSArray *inputInpaintingProcessingResolutions;
@property (nonatomic, retain) CIVector *inputMaskBoundingBox;
@property (nonatomic, retain) CIImage *inputMaskImage;
@property (getter=getLastExecutionTime, readonly) double lastExecutionTime;
@property (getter=getLastProcessingResolution, readonly) int lastProcessingResolution;

+ (id)customAttributes;
+ (id)getEspressoResources;

- (void)dealloc;
- (id)executionContext;
- (double)getLastExecutionTime;
- (int)getLastProcessingResolution;
- (id)getSelectedFacesInpaintingModelDescriptor;
- (id)getSelectedGeneralInpaintingModelDescriptor;
- (id)init;
- (id)inputFaceBoundingBoxes;
- (id)inputImage;
- (id)inputInpaintingBlendingRadius;
- (id)inputInpaintingMode;
- (id)inputInpaintingProcessingResolutions;
- (id)inputMaskBoundingBox;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })inputMaskBoundingBoxAsValidCGRect;
- (id)inputMaskImage;
- (id)outputImage;
- (id)performFullPipelineInpaintingWithParameters:(id)arg1;
- (id)performMultiresolutionInpaintingWithParameters:(id)arg1;
- (id)performSinglePassInpaintingWithParameters:(id)arg1;
- (id)performTilingPipelineInpaintingWithParameters:(id)arg1;
- (void)setInputFaceBoundingBoxes:(id)arg1;
- (void)setInputImage:(id)arg1;
- (void)setInputInpaintingBlendingRadius:(id)arg1;
- (void)setInputInpaintingMode:(id)arg1;
- (void)setInputInpaintingProcessingResolutions:(id)arg1;
- (void)setInputMaskBoundingBox:(id)arg1;
- (void)setInputMaskImage:(id)arg1;
- (bool)shouldFaceSpecificModelBeUsed;

@end
