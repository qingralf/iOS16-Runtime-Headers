/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreImage.framework/CoreImage
 */

@interface InpaintingEspressoExecutionResources : NSObject {
    NSString * _configurationName;
    void * _context;
    int  _filterUsageCount;
    NSArray * _inputBlobNames;
    bool  _membraneModel;
    int  _modelInputPixelFormat;
    int  _modelOutputPixelFormat;
    NSString * _modelResourceDescriptor;
    NSString * _modelResourceFileName;
    struct { 
        void *plan; 
        int network_index; 
    }  _network;
    NSArray * _outputBlobNames;
    void * _plan;
}

@property (readonly) void*context;
@property (readonly) int filterUsageCount;
@property (readonly) NSArray *inputBlobNames;
@property (readonly) bool membraneModel;
@property (retain) NSString *modelConfigurationName;
@property (readonly) int modelInputPixelFormat;
@property (readonly) int modelOutputPixelFormat;
@property (readonly) NSString *modelResourceDescriptor;
@property (readonly) NSString *modelResourceFileName;
@property (readonly) struct { void *x1; int x2; } network;
@property (readonly) NSArray *outputBlobNames;
@property (readonly) void*plan;

+ (void)tearDownEspressoContext:(void**)arg1 andPlan:(void**)arg2;

- (id)CIImageProcessorDigestObject;
- (void*)context;
- (void)dealloc;
- (void)deregisterFilterUsage;
- (id)description;
- (bool)descriptorIsAMembraneModel:(id)arg1 error:(id*)arg2;
- (int)filterUsageCount;
- (void)freeEspressoResources;
- (id)init;
- (bool)initializeInpaintingModelForResourceDescriptor:(id)arg1 error:(id*)arg2;
- (bool)initializeModelForResourceDescriptor:(id)arg1 resourceFileName:(id)arg2 inputBlobNames:(id)arg3 outputBlobNames:(id)arg4 cpuOnlyModel:(bool)arg5 membraneModel:(bool)arg6 modelInputPixelFormat:(int)arg7 modelOutputPixelFormat:(int)arg8 error:(id*)arg9;
- (id)inputBlobNames;
- (bool)isModelInitialized;
- (bool)membraneModel;
- (id)modelConfigurationName;
- (int)modelInputPixelFormat;
- (int)modelOutputPixelFormat;
- (id)modelResourceDescriptor;
- (id)modelResourceFileName;
- (struct { void *x1; int x2; })network;
- (id)outputBlobNames;
- (bool)parseModelResourceDescriptor:(id)arg1 extractMembraneInfo:(bool*)arg2 inputPixelFormat:(int*)arg3 outputPixelFormat:(int*)arg4 andResourceFileName:(id*)arg5 error:(id*)arg6;
- (void*)plan;
- (void)registerFilterUsage;
- (void)releaseModelIfNoLongerNeeded;
- (void)setModelConfigurationName:(id)arg1;
- (void)updateWithModelResourceDescriptor:(id)arg1 modelResourceFileName:(id)arg2 network:(struct { void *x1; int x2; })arg3 plan:(void*)arg4 context:(void*)arg5 inputBlobNames:(id)arg6 outputBlobNames:(id)arg7 membraneModel:(bool)arg8 modelInputPixelFormat:(int)arg9 modelOutputPixelFormat:(int)arg10;

@end
