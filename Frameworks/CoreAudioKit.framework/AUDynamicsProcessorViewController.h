/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreAudioKit.framework/CoreAudioKit
 */

@interface AUDynamicsProcessorViewController : AURealtimeDrawingBaseViewController <CoreAudioKit.AUCompressionParameterDataSource, CoreAudioKit.CAAUViewParameterDataSource> {
    struct AudioUnitFrequencyResponseBin { double x1; double x2; } * _frequencyData;
    _TtC12CoreAudioKit13AUKnobControl * attackKnob;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  curveFrame;
    UIView * edgeControlSection;
    _TtC12CoreAudioKit13AUKnobControl * gainKnob;
    _TtC12CoreAudioKit17CACompressionView * graphView;
    _TtC12CoreAudioKit21CAAdjustingHeaderView * headerView;
    UILabel * inputLabel;
    _TtC12CoreAudioKit18AULabeledMeterView * meter;
    UILabel * meterLabel;
    UILabel * outputLabel;
    struct CGSize { 
        double width; 
        double height; 
    }  previousSize;
    _TtC12CoreAudioKit13AUKnobControl * releaseKnob;
    NSLayoutConstraint * rightWidthConstraint;
    UIView * viewContainer;
}

@property struct AudioUnitFrequencyResponseBin { double x1; double x2; }*frequencyData;

- (void).cxx_destruct;
- (id)add:(id)arg1 to:(id)arg2;
- (void)addConstraints;
- (void)auParameterValueChanged:(id)arg1;
- (void)cleanup;
- (id)colorWithParameter:(unsigned int)arg1;
- (void)dealloc;
- (void)doRealtimeDrawing;
- (struct AudioUnitFrequencyResponseBin { double x1; double x2; }*)frequencyData;
- (void)graphControlTouched:(id)arg1;
- (void)knobReleased:(id)arg1;
- (void)knobTouched:(id)arg1;
- (void)knobValueChanged:(id)arg1;
- (id)multiply:(id)arg1 multiplier:(double)arg2;
- (id)nameFor:(unsigned int)arg1;
- (void)prepareData;
- (struct AudioUnitFrequencyResponseBin { double x1; double x2; }*)prepareDataForDrawing:(struct AudioUnitFrequencyResponseBin { double x1; double x2; }*)arg1;
- (void)priv_eventListener:(void*)arg1 event:(const struct AudioUnitEvent { unsigned int x1; union { struct AudioUnitParameter { struct OpaqueAudioComponentInstance {} *x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; } x_2_1_1; struct AudioUnitProperty { struct OpaqueAudioComponentInstance {} *x_2_2_1; unsigned int x_2_2_2; unsigned int x_2_2_3; unsigned int x_2_2_4; } x_2_1_2; } x2; }*)arg2 value:(float)arg3;
- (void)registerParameters;
- (void)setFrequencyData:(struct AudioUnitFrequencyResponseBin { double x1; double x2; }*)arg1;
- (void)setWithParameter:(unsigned int)arg1 value:(float)arg2;
- (id)shortNameFor:(unsigned int)arg1;
- (id)unitLabelFor:(unsigned int)arg1;
- (void)updateCurve:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;

@end
