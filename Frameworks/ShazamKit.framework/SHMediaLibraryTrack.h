/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ShazamKit.framework/ShazamKit
 */

@interface SHMediaLibraryTrack : NSObject <SHMediaLibraryItem> {
    NSURL * _artworkURL;
    NSString * _associatedGroupIdentifier;
    NSDate * _creationDate;
    NSString * _identifier;
    NSMutableSet * _labelSet;
    CLLocation * _location;
    SHMediaLibraryItemMetadata * _metadata;
    NSString * _providerIdentifier;
    NSString * _providerName;
    NSString * _recognitionIdentifier;
    SHShazamKey * _shazamKey;
    NSURL * _shazamURL;
    NSString * _subtitle;
    NSString * _title;
}

@property (nonatomic, retain) NSURL *artworkURL;
@property (nonatomic, copy) NSString *associatedGroupIdentifier;
@property (nonatomic, retain) NSDate *creationDate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, retain) NSMutableSet *labelSet;
@property (nonatomic, readonly) NSSet *labels;
@property (nonatomic, retain) CLLocation *location;
@property (nonatomic, readonly) SHMediaLibraryItemMetadata *metadata;
@property (nonatomic, copy) NSString *providerIdentifier;
@property (nonatomic, copy) NSString *providerName;
@property (nonatomic, copy) NSString *recognitionIdentifier;
@property (nonatomic, retain) SHShazamKey *shazamKey;
@property (nonatomic, retain) NSURL *shazamURL;
@property (nonatomic, readonly) bool shouldUpdate;
@property (nonatomic, copy) NSString *subtitle;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *title;

+ (id)libraryTrackFromMediaItem:(id)arg1;
+ (bool)supportsSecureCoding;
+ (void)updateLibraryTrack:(id)arg1 withMediaItem:(id)arg2;

- (void).cxx_destruct;
- (id)_initWithIdentifier:(id)arg1 metadata:(id)arg2 labels:(id)arg3;
- (void)addLabel:(id)arg1;
- (void)addPlatformLabel;
- (id)artworkURL;
- (id)associatedGroupIdentifier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 builder:(id /* block */)arg2;
- (id)initWithIdentifier:(id)arg1 metadata:(id)arg2 builder:(id /* block */)arg3;
- (bool)isEqual:(id)arg1;
- (bool)isEqualTrack:(id)arg1;
- (id)labelSet;
- (id)labels;
- (id)location;
- (id)metadata;
- (id)platformLabel;
- (id)providerIdentifier;
- (id)providerName;
- (id)recognitionIdentifier;
- (void)setArtworkURL:(id)arg1;
- (void)setAssociatedGroupIdentifier:(id)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setLabelSet:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setProviderIdentifier:(id)arg1;
- (void)setProviderName:(id)arg1;
- (void)setRecognitionIdentifier:(id)arg1;
- (void)setShazamKey:(id)arg1;
- (void)setShazamURL:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)shazamKey;
- (id)shazamURL;
- (bool)shouldUpdate;
- (id)subtitle;
- (id)title;
- (void)updateWithBuilderBlock:(id /* block */)arg1;

@end
