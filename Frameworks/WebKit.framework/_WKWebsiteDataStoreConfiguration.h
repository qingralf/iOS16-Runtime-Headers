/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/WebKit
 */

@interface _WKWebsiteDataStoreConfiguration : NSObject <WKObject> {
    struct ObjectStorage<WebKit::WebsiteDataStoreConfiguration> { 
        struct type { 
            unsigned char __lx[408]; 
        } data; 
    }  _configuration;
}

@property (readonly) struct Object { int (**x1)(); id x2; }*_apiObject;
@property (setter=_setCacheStorageDirectory:, nonatomic, copy) NSURL *_cacheStorageDirectory;
@property (setter=_setCookieStorageFile:, nonatomic, copy) NSURL *_cookieStorageFile;
@property (setter=_setIndexedDBDatabaseDirectory:, nonatomic, copy) NSURL *_indexedDBDatabaseDirectory;
@property (setter=_setResourceLoadStatisticsDirectory:, nonatomic, copy) NSURL *_resourceLoadStatisticsDirectory;
@property (setter=_setServiceWorkerRegistrationDirectory:, nonatomic, copy) NSURL *_serviceWorkerRegistrationDirectory;
@property (setter=_setShouldAcceptInsecureCertificatesForWebSockets:, nonatomic) bool _shouldAcceptInsecureCertificatesForWebSockets;
@property (setter=_setWebSQLDatabaseDirectory:, nonatomic, copy) NSURL *_webSQLDatabaseDirectory;
@property (setter=_setWebStorageDirectory:, nonatomic, copy) NSURL *_webStorageDirectory;
@property (nonatomic) bool allLoadsBlockedByDeviceManagementRestrictionsForTesting;
@property (nonatomic) bool allowsCellularAccess;
@property (nonatomic) bool allowsHSTSWithUntrustedRootCertificate;
@property (nonatomic) bool allowsServerPreconnect;
@property (nonatomic, copy) NSURL *alternativeServicesStorageDirectory;
@property (nonatomic, copy) NSURL *applicationCacheDirectory;
@property (nonatomic, copy) NSString *applicationCacheFlatFileSubdirectoryName;
@property (nonatomic, copy) NSString *boundInterfaceIdentifier;
@property (nonatomic, copy) NSString *dataConnectionServiceType;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSURL *deviceIdHashSaltsStorageDirectory;
@property (nonatomic) bool deviceManagementRestrictionsEnabled;
@property (nonatomic) bool enableInAppBrowserPrivacyForTesting;
@property (nonatomic) bool fastServerTrustEvaluationEnabled;
@property (nonatomic, copy) NSURL *generalStorageDirectory;
@property (readonly) unsigned long long hash;
@property (setter=setHSTSStorageDirectory:, nonatomic, copy) NSURL *hstsStorageDirectory;
@property (setter=setHTTPProxy:, nonatomic, copy) NSURL *httpProxy;
@property (setter=setHTTPSProxy:, nonatomic, copy) NSURL *httpsProxy;
@property (nonatomic) bool legacyTLSEnabled;
@property (nonatomic, copy) NSURL *mediaCacheDirectory;
@property (nonatomic, copy) NSURL *mediaKeysStorageDirectory;
@property (nonatomic, copy) NSURL *networkCacheDirectory;
@property (nonatomic) bool networkCacheSpeculativeValidationEnabled;
@property (nonatomic) unsigned long long overrideServiceWorkerRegistrationCountTestingValue;
@property (setter=setPCMMachServiceName:, nonatomic, copy) NSString *pcmMachServiceName;
@property (nonatomic) unsigned long long perOriginStorageQuota;
@property (getter=isPersistent, nonatomic, readonly) bool persistent;
@property (nonatomic) bool preventsSystemHTTPProxyAuthentication;
@property (nonatomic, copy) NSURL *privateClickMeasurementStorageDirectory;
@property (nonatomic, copy) NSDictionary *proxyConfiguration;
@property (nonatomic) bool requiresSecureHTTPSProxyConnection;
@property (nonatomic) bool serviceWorkerProcessTerminationDelayEnabled;
@property (nonatomic) bool shouldRunServiceWorkersOnMainThreadForTesting;
@property (nonatomic) bool shouldUseCustomStoragePaths;
@property (nonatomic, copy) NSString *sourceApplicationBundleIdentifier;
@property (nonatomic, copy) NSString *sourceApplicationSecondaryIdentifier;
@property (nonatomic, copy) NSURL *standaloneApplicationURL;
@property (readonly) Class superclass;
@property (nonatomic) bool suppressesConnectionTerminationOnSystemChange;
@property (nonatomic) unsigned long long testSpeedMultiplier;
@property (nonatomic) bool webPushDaemonUsesMockBundlesForTesting;
@property (setter=setWebPushMachServiceName:, nonatomic, copy) NSString *webPushMachServiceName;

- (struct Object { int (**x1)(); id x2; }*)_apiObject;
- (id)_cacheStorageDirectory;
- (id)_cookieStorageFile;
- (id)_indexedDBDatabaseDirectory;
- (id)_resourceLoadStatisticsDirectory;
- (id)_serviceWorkerRegistrationDirectory;
- (void)_setCacheStorageDirectory:(id)arg1;
- (void)_setCookieStorageFile:(id)arg1;
- (void)_setIndexedDBDatabaseDirectory:(id)arg1;
- (void)_setResourceLoadStatisticsDirectory:(id)arg1;
- (void)_setServiceWorkerRegistrationDirectory:(id)arg1;
- (void)_setShouldAcceptInsecureCertificatesForWebSockets:(bool)arg1;
- (void)_setWebSQLDatabaseDirectory:(id)arg1;
- (void)_setWebStorageDirectory:(id)arg1;
- (bool)_shouldAcceptInsecureCertificatesForWebSockets;
- (id)_webSQLDatabaseDirectory;
- (id)_webStorageDirectory;
- (bool)allLoadsBlockedByDeviceManagementRestrictionsForTesting;
- (bool)allowsCellularAccess;
- (bool)allowsHSTSWithUntrustedRootCertificate;
- (bool)allowsServerPreconnect;
- (id)alternativeServicesStorageDirectory;
- (id)applicationCacheDirectory;
- (id)applicationCacheFlatFileSubdirectoryName;
- (id)boundInterfaceIdentifier;
- (id)dataConnectionServiceType;
- (void)dealloc;
- (id)deviceIdHashSaltsStorageDirectory;
- (bool)deviceManagementRestrictionsEnabled;
- (bool)enableInAppBrowserPrivacyForTesting;
- (bool)fastServerTrustEvaluationEnabled;
- (id)generalStorageDirectory;
- (id)hstsStorageDirectory;
- (id)httpProxy;
- (id)httpsProxy;
- (id)init;
- (id)initNonPersistentConfiguration;
- (bool)isPersistent;
- (bool)legacyTLSEnabled;
- (id)mediaCacheDirectory;
- (id)mediaKeysStorageDirectory;
- (id)networkCacheDirectory;
- (bool)networkCacheSpeculativeValidationEnabled;
- (unsigned long long)overrideServiceWorkerRegistrationCountTestingValue;
- (id)pcmMachServiceName;
- (unsigned long long)perOriginStorageQuota;
- (bool)preventsSystemHTTPProxyAuthentication;
- (id)privateClickMeasurementStorageDirectory;
- (id)proxyConfiguration;
- (bool)requiresSecureHTTPSProxyConnection;
- (bool)serviceWorkerProcessTerminationDelayEnabled;
- (void)setAllLoadsBlockedByDeviceManagementRestrictionsForTesting:(bool)arg1;
- (void)setAllowsCellularAccess:(bool)arg1;
- (void)setAllowsHSTSWithUntrustedRootCertificate:(bool)arg1;
- (void)setAllowsServerPreconnect:(bool)arg1;
- (void)setAlternativeServicesStorageDirectory:(id)arg1;
- (void)setApplicationCacheDirectory:(id)arg1;
- (void)setApplicationCacheFlatFileSubdirectoryName:(id)arg1;
- (void)setBoundInterfaceIdentifier:(id)arg1;
- (void)setDataConnectionServiceType:(id)arg1;
- (void)setDeviceIdHashSaltsStorageDirectory:(id)arg1;
- (void)setDeviceManagementRestrictionsEnabled:(bool)arg1;
- (void)setEnableInAppBrowserPrivacyForTesting:(bool)arg1;
- (void)setFastServerTrustEvaluationEnabled:(bool)arg1;
- (void)setGeneralStorageDirectory:(id)arg1;
- (void)setHSTSStorageDirectory:(id)arg1;
- (void)setHTTPProxy:(id)arg1;
- (void)setHTTPSProxy:(id)arg1;
- (void)setLegacyTLSEnabled:(bool)arg1;
- (void)setMediaCacheDirectory:(id)arg1;
- (void)setMediaKeysStorageDirectory:(id)arg1;
- (void)setNetworkCacheDirectory:(id)arg1;
- (void)setNetworkCacheSpeculativeValidationEnabled:(bool)arg1;
- (void)setOverrideServiceWorkerRegistrationCountTestingValue:(unsigned long long)arg1;
- (void)setPCMMachServiceName:(id)arg1;
- (void)setPerOriginStorageQuota:(unsigned long long)arg1;
- (void)setPreventsSystemHTTPProxyAuthentication:(bool)arg1;
- (void)setPrivateClickMeasurementStorageDirectory:(id)arg1;
- (void)setProxyConfiguration:(id)arg1;
- (void)setRequiresSecureHTTPSProxyConnection:(bool)arg1;
- (void)setServiceWorkerProcessTerminationDelayEnabled:(bool)arg1;
- (void)setShouldRunServiceWorkersOnMainThreadForTesting:(bool)arg1;
- (void)setShouldUseCustomStoragePaths:(bool)arg1;
- (void)setSourceApplicationBundleIdentifier:(id)arg1;
- (void)setSourceApplicationSecondaryIdentifier:(id)arg1;
- (void)setStandaloneApplicationURL:(id)arg1;
- (void)setSuppressesConnectionTerminationOnSystemChange:(bool)arg1;
- (void)setTestSpeedMultiplier:(unsigned long long)arg1;
- (void)setWebPushDaemonUsesMockBundlesForTesting:(bool)arg1;
- (void)setWebPushMachServiceName:(id)arg1;
- (bool)shouldRunServiceWorkersOnMainThreadForTesting;
- (bool)shouldUseCustomStoragePaths;
- (id)sourceApplicationBundleIdentifier;
- (id)sourceApplicationSecondaryIdentifier;
- (id)standaloneApplicationURL;
- (bool)suppressesConnectionTerminationOnSystemChange;
- (unsigned long long)testSpeedMultiplier;
- (bool)webPushDaemonUsesMockBundlesForTesting;
- (id)webPushMachServiceName;

@end
