/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount
 */

@interface VSUserAccountRegistry : NSObject <VSUserAccountServiceProtocol, VSUserAccountUpdateManagerDelegate> {
    VSUserAccountPersistentContainer * _container;
    bool  _currentUpdateSessionIsForced;
    NSDate * _lastUpdateTime;
    VSPrivacyFacade * _privacyFacade;
    NSOperationQueue * _privateQueue;
    VSRemoteNotifier * _remoteNotifier;
    NSObject<OS_dispatch_source> * _timer;
    VSUserAccountUpdateManager * _updateManager;
}

@property (nonatomic, retain) VSUserAccountPersistentContainer *container;
@property (nonatomic) bool currentUpdateSessionIsForced;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSDate *lastUpdateTime;
@property (nonatomic, retain) VSPrivacyFacade *privacyFacade;
@property (nonatomic, retain) NSOperationQueue *privateQueue;
@property (nonatomic, retain) VSRemoteNotifier *remoteNotifier;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *timer;
@property (nonatomic, retain) VSUserAccountUpdateManager *updateManager;

- (void).cxx_destruct;
- (void)_deleteUserAccount:(id)arg1 completion:(id /* block */)arg2;
- (long long)_deviceCategoryFromDeviceType:(unsigned long long)arg1;
- (void)_insertUserAccount:(id)arg1 completion:(id /* block */)arg2;
- (bool)_isValidForUpdateQueryForCurrentTask;
- (bool)_isValidForUpdateQueryForCurrentTask:(id)arg1;
- (id)_legacySubscriptionForUserAccount:(id)arg1;
- (id)_legacySubscriptionInfoForUserAccount:(id)arg1;
- (void)_populatePersistentUserAccount:(id)arg1 withUserAccount:(id)arg2;
- (id)_predicateForQueryRequestWithOptions:(long long)arg1;
- (void)_queryPersistentUserAccountsWithOptions:(long long)arg1 predicate:(id)arg2 context:(id)arg3 completion:(id /* block */)arg4;
- (void)_queryUserAccountsWithOptions:(long long)arg1 predicate:(id)arg2 completion:(id /* block */)arg3;
- (id)_securityTaskForCurrentConnection;
- (void)_update;
- (id)_userAccountForLegacySubscription:(id)arg1;
- (id)_userAccountForPersistentUserAccount:(id)arg1;
- (id)container;
- (bool)currentUpdateSessionIsForced;
- (void)deleteUserAccount:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchActiveSubscriptionsWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)forceUpdateUserAccountsWithCompletion:(id /* block */)arg1;
- (id)init;
- (void)insertLegacySubscription:(id)arg1 completion:(id /* block */)arg2;
- (id)lastUpdateTime;
- (id)privacyFacade;
- (id)privateQueue;
- (void)queryUserAccountsWithOptions:(long long)arg1 completion:(id /* block */)arg2;
- (void)registerSubscription:(id)arg1;
- (id)remoteNotifier;
- (void)removeSubscriptions:(id)arg1;
- (void)resetTimer;
- (void)setContainer:(id)arg1;
- (void)setCurrentUpdateSessionIsForced:(bool)arg1;
- (void)setLastUpdateTime:(id)arg1;
- (void)setPrivacyFacade:(id)arg1;
- (void)setPrivateQueue:(id)arg1;
- (void)setRemoteNotifier:(id)arg1;
- (void)setTimer:(id)arg1;
- (void)setUpdateManager:(id)arg1;
- (id)timer;
- (id)updateManager;
- (void)updateManager:(id)arg1 updateRequestDidFinish:(id)arg2;
- (void)updateManagerDidFinish:(id)arg1;
- (void)updateUserAccount:(id)arg1 completion:(id /* block */)arg2;

@end
