/* Generated by RuntimeBrowser.
 */

@protocol CKChatInputControllerDelegate <NSObject>

@required

- (void)chatInputController:(void *)arg1 presentShelfModal:(void *)arg2 animated:(void *)arg3 completion:(void *)arg4; // needs 4 arg types, found 8: CKChatInputController *, UIViewController *, bool, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, void*
- (void)chatInputControllerBrowserPluginChangingFromPlugin:(IMBalloonPlugin *)arg1 toPlugin:(IMBalloonPlugin *)arg2;
- (bool)chatInputControllerCanSend:(CKChatInputController *)arg1;
- (void)chatInputControllerCancelSelectFunCamera:(CKChatInputController *)arg1;
- (void)chatInputControllerDidDismissCompactBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerDidDismissModalBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerDidPresentModalBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerDidSelectFunCamera:(CKChatInputController *)arg1;
- (void)chatInputControllerDidShowHandwriting:(CKChatInputController *)arg1;
- (void)chatInputControllerDidTransitionCollapsed:(CKChatInputController *)arg1;
- (void)chatInputControllerDidTransitionExpanded:(CKChatInputController *)arg1;
- (void)chatInputControllerRequestInputViewFocusFromFullscreen:(CKChatInputController *)arg1;
- (bool)chatInputControllerShouldShowHandwriting:(CKChatInputController *)arg1;
- (void)chatInputControllerWillDismissCompactBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerWillDismissModalBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerWillHideHandwriting:(CKChatInputController *)arg1;
- (void)chatInputControllerWillPresentModalBrowserViewController:(CKChatInputController *)arg1;
- (void)chatInputControllerWillSelectFunCamera:(CKChatInputController *)arg1;
- (void)chatInputControllerWillTransitionCollapsed:(CKChatInputController *)arg1;
- (void)chatInputControllerWillTransitionExpanded:(CKChatInputController *)arg1;
- (void)chatInputDidChangeSize;
- (void)chatInputDidSelectEffectPicker;
- (void)chatInputDidSelectPhotoPicker;
- (void)chatInputDidUpdateInputViewShowingBrowser:(bool)arg1 entryFieldCollapsed:(bool)arg2 animated:(bool)arg3;
- (void)chatInputDidUpdateWithNewInputViewController:(UIInputViewController *)arg1;
- (void)chatInputSentComposition:(CKComposition *)arg1;
- (NSString *)chatInputTranscriptIdentifier;
- (void)chatInputWillChangeHeightForCompactPresentation:(double)arg1;
- (void)chatInputWillUpdateInputViewShowingBrowser;
- (<CKBrowserDragControllerTranscriptDelegate> *)dragControllerTranscriptDelegate;
- (bool)keyboardIsVisibleForChatInputController:(CKChatInputController *)arg1;
- (unsigned long long)recipientsCount;
- (long long)sceneInterfaceOrientation;
- (void)sendCurrentLocation;
- (void)sendSticker:(IMSticker *)arg1 withDragTarget:(CKBrowserDragControllerTarget *)arg2;
- (void)setLocalUserIsComposing:(bool)arg1 withPluginBundleID:(NSString *)arg2 typingIndicatorData:(NSData *)arg3;
- (void)showContactForHandle:(NSString *)arg1;
- (void)stopForcingOrientation;
- (void)updateSupportedInterfaceOrientations:(unsigned long long)arg1;
- (UIViewController *)viewControllerForChatInputModalPresentation;
- (UIView *)viewForDragAndChatInputDropTarget;

@optional

- (void)chatInputDidSelectEmojiPicker;

@end
