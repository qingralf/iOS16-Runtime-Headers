/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PosterKit.framework/PosterKit
 */

@interface PREditorRootViewController : UIViewController <BSInvalidatable, PRDateObserving, UIScrollViewDelegate> {
    PREditingTitledButton * _acceptButton;
    NSLayoutConstraint * _acceptButtonXConstraint;
    NSLayoutConstraint * _acceptButtonYConstraint;
    UIMenu * _actionsMenu;
    UIButton * _actionsMenuButton;
    NSLayoutConstraint * _actionsMenuButtonXConstraint;
    bool  _allUserInteractionDisabledExceptForCancelButton;
    UIView * _backgroundContainerView;
    NSLayoutConstraint * _bottomControlsYConstraint;
    PREditingBottomLegibilityView * _bottomLegibilityView;
    PREditingCancelButton * _cancelButton;
    NSLayoutConstraint * _cancelButtonXConstraint;
    NSLayoutConstraint * _cancelButtonYConstraint;
    PRComplicationSceneHostViewController * _complicationHostViewController;
    UIView * _complicationsContainerView;
    bool  _complicationsRowConfigured;
    UIView * _contentOverlayView;
    bool  _controlsHidden;
    <PRDateProviding> * _dateProvider;
    bool  _depthEffectDisabled;
    bool  _disconnected;
    PREditor * _editor;
    BSUIVibrancyEffectView * _emptyVibrancyView;
    UIView * _floatingContainerView;
    long long  _focusedComplicationElement;
    UIView * _foregroundContainerView;
    BSUIVibrancyEffectView * _graphicComplicationsEmptyView;
    PREditingReticleView * _graphicComplicationsReticleView;
    bool  _ignoresScrolling;
    PREditingReticleView * _inlineComplicationReticleView;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _leadingTopButtonFrame;
    PREditingStandaloneLabelView * _lookNameLabel;
    PREditorLookTransition * _lookTransition;
    NSArray * _looks;
    bool  _needsReticleUpdate;
    UIPageControl * _pageControl;
    UIView * _presentationDismissalGestureView;
    bool  _presentingModalViewController;
    UIAction * _primaryAction;
    UIButton * _primaryActionButton;
    NSLayoutConstraint * _primaryActionButtonXConstraint;
    BSUIVibrancyEffectView * _reticleVibrancyView;
    UIScrollView * _scrollView;
    bool  _subtitleHidden;
    CSProminentDisplayViewController * _subtitleViewController;
    UIView * _timeContainerView;
    UIView * _timeGestureView;
    bool  _timeReticleActive;
    PREditingReticleView * _timeReticleView;
    NSMutableDictionary * _timeViewControllersForLook;
    bool  _topButtonsHidden;
    UIView * _touchBlockingView;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _trailingTopButtonFrame;
    bool  _usesEditingLayout;
}

@property (nonatomic, retain) PREditingTitledButton *acceptButton;
@property (nonatomic, retain) NSLayoutConstraint *acceptButtonXConstraint;
@property (nonatomic, retain) NSLayoutConstraint *acceptButtonYConstraint;
@property (nonatomic, copy) UIMenu *actionsMenu;
@property (nonatomic, retain) UIButton *actionsMenuButton;
@property (nonatomic, retain) NSLayoutConstraint *actionsMenuButtonXConstraint;
@property (getter=isAllUserInteractionDisabledExceptForCancelButton, nonatomic) bool allUserInteractionDisabledExceptForCancelButton;
@property (nonatomic, retain) UIView *backgroundContainerView;
@property (nonatomic, retain) NSLayoutConstraint *bottomControlsYConstraint;
@property (nonatomic, retain) PREditingBottomLegibilityView *bottomLegibilityView;
@property (nonatomic, retain) PREditingCancelButton *cancelButton;
@property (nonatomic, retain) NSLayoutConstraint *cancelButtonXConstraint;
@property (nonatomic, retain) NSLayoutConstraint *cancelButtonYConstraint;
@property (nonatomic, retain) PRComplicationSceneHostViewController *complicationHostViewController;
@property (nonatomic, retain) UIView *complicationsContainerView;
@property (getter=isComplicationsRowConfigured, nonatomic) bool complicationsRowConfigured;
@property (nonatomic, retain) UIView *contentOverlayView;
@property (getter=areControlsHidden, nonatomic) bool controlsHidden;
@property (nonatomic, retain) <PRDateProviding> *dateProvider;
@property (readonly, copy) NSString *debugDescription;
@property (getter=isDepthEffectDisabled, nonatomic) bool depthEffectDisabled;
@property (readonly, copy) NSString *description;
@property (getter=isDisconnected, nonatomic) bool disconnected;
@property (nonatomic) PREditor *editor;
@property (nonatomic, retain) BSUIVibrancyEffectView *emptyVibrancyView;
@property (nonatomic, retain) UIView *floatingContainerView;
@property (nonatomic) long long focusedComplicationElement;
@property (nonatomic, retain) UIView *foregroundContainerView;
@property (nonatomic, retain) BSUIVibrancyEffectView *graphicComplicationsEmptyView;
@property (nonatomic, retain) PREditingReticleView *graphicComplicationsReticleView;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool ignoresScrolling;
@property (nonatomic, retain) PREditingReticleView *inlineComplicationReticleView;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } leadingTopButtonFrame;
@property (nonatomic, retain) PREditingStandaloneLabelView *lookNameLabel;
@property (nonatomic, retain) PREditorLookTransition *lookTransition;
@property (nonatomic, copy) NSArray *looks;
@property (nonatomic) bool needsReticleUpdate;
@property (nonatomic, retain) UIPageControl *pageControl;
@property (nonatomic, retain) UIView *presentationDismissalGestureView;
@property (getter=isPresentingModalViewController, nonatomic) bool presentingModalViewController;
@property (nonatomic, copy) UIAction *primaryAction;
@property (nonatomic, retain) UIButton *primaryActionButton;
@property (nonatomic, retain) NSLayoutConstraint *primaryActionButtonXConstraint;
@property (nonatomic, retain) BSUIVibrancyEffectView *reticleVibrancyView;
@property (nonatomic, retain) UIScrollView *scrollView;
@property (getter=isSubtitleHidden, nonatomic) bool subtitleHidden;
@property (nonatomic, retain) CSProminentDisplayViewController *subtitleViewController;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIView *timeContainerView;
@property (nonatomic, retain) UIView *timeGestureView;
@property (getter=isTimeReticleActive, nonatomic) bool timeReticleActive;
@property (nonatomic, retain) PREditingReticleView *timeReticleView;
@property (getter=areTopButtonsHidden, nonatomic) bool topButtonsHidden;
@property (nonatomic, retain) UIView *touchBlockingView;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } trailingTopButtonFrame;
@property (nonatomic) bool usesEditingLayout;

// Image: /System/Library/PrivateFrameworks/PosterKit.framework/PosterKit

- (void).cxx_destruct;
- (void)_setVibrancyConfiguration:(id)arg1;
- (void)_updateComplicationsRowEmptyViewVisibility;
- (void)_updateComplicationsVibrancyFromCurrentLook;
- (id)acceptButton;
- (id)acceptButtonXConstraint;
- (id)acceptButtonYConstraint;
- (id)actionsMenu;
- (id)actionsMenuButton;
- (id)actionsMenuButtonXConstraint;
- (void)addLookContentScrollViewSubview:(id)arg1 atLayer:(long long)arg2;
- (void)appendDescriptionToFormatter:(id)arg1;
- (bool)areControlsHidden;
- (bool)areTopButtonsHidden;
- (id)backgroundContainerView;
- (unsigned long long)backgroundTypeForLook:(id)arg1;
- (id)beginTransitionToLook:(id)arg1 method:(long long)arg2;
- (id)bottomControlsYConstraint;
- (id)bottomLegibilityView;
- (id)cancelButton;
- (id)cancelButtonXConstraint;
- (id)cancelButtonYConstraint;
- (id)complicationHostViewController;
- (id)complicationsContainerView;
- (id)configuredProperties;
- (id)contentOverlayView;
- (id)currentLook;
- (void)currentLookDidChange;
- (id)dateProvider;
- (void)dateProvider:(id)arg1 didUpdateDate:(id)arg2;
- (id)defaultTitleStyleConfigurationForLook:(id)arg1;
- (void)depthEffectEnablementDidChange;
- (id)description;
- (void)didFinishTransitionToLook:(id)arg1;
- (void)didTransitionToLook:(id)arg1 method:(long long)arg2 progress:(double)arg3;
- (void)disconnect;
- (id)editor;
- (id)effectiveTitleStyleConfigurationForLook:(id)arg1;
- (id)emptyVibrancyView;
- (void)enumerateTimeViewControllersUsingBlock:(id /* block */)arg1;
- (id)extensionBundleURL;
- (id)floatingContainerView;
- (long long)focusedComplicationElement;
- (void)forciblyFinishLookTransition;
- (id)foregroundContainerView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForPageAtLookIndex:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForPageAtViewIndex:(unsigned long long)arg1;
- (id)graphicComplicationsEmptyView;
- (id)graphicComplicationsReticleView;
- (bool)ignoresScrolling;
- (id)inlineComplicationReticleView;
- (void)invalidate;
- (bool)isAllUserInteractionDisabledExceptForCancelButton;
- (bool)isComplicationsRowConfigured;
- (bool)isDepthEffectDisabled;
- (bool)isDisconnected;
- (bool)isPresentingModalViewController;
- (bool)isSubtitleHidden;
- (bool)isTimeReticleActive;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })leadingTopButtonFrame;
- (void)loadView;
- (id)lookAtScrollContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (id)lookAtScrollContentOffset:(struct CGPoint { double x1; double x2; })arg1 fractionOfDistanceThroughLook:(double*)arg2;
- (void)lookBackgroundTypesDidChange;
- (unsigned long long)lookIndexForViewIndex:(unsigned long long)arg1;
- (id)lookNameLabel;
- (void)lookPropertiesDidChange;
- (id)lookTransition;
- (id)looks;
- (void)looksDidChange;
- (void)looksWillChange;
- (id)makeComplicationHostingSceneWithSpecification:(id)arg1;
- (id)makeComplicationsHostingScene;
- (void)modalPresentationDismissGestureDidFire:(id)arg1;
- (bool)needsReticleUpdate;
- (id)pageControl;
- (void)pageControlCurrentPageDidChange:(id)arg1;
- (id)presentationDismissalGestureView;
- (id)primaryAction;
- (id)primaryActionButton;
- (id)primaryActionButtonXConstraint;
- (void)reconnect;
- (void)requireGestureRecognizerToFailForLooksScroll:(id)arg1;
- (id)reticleVibrancyView;
- (struct CGPoint { double x1; double x2; })scrollContentOffsetForLook:(id)arg1;
- (struct CGPoint { double x1; double x2; })scrollContentOffsetForLookAtIndex:(unsigned long long)arg1;
- (void)scrollToLook:(id)arg1 animated:(bool)arg2;
- (void)scrollToLookAtIndex:(unsigned long long)arg1 animated:(bool)arg2;
- (id)scrollView;
- (void)scrollViewDidEndScrolling:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1 withContext:(struct { long long x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; })arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (void)setAcceptButton:(id)arg1;
- (void)setAcceptButtonXConstraint:(id)arg1;
- (void)setAcceptButtonYConstraint:(id)arg1;
- (void)setActionsMenu:(id)arg1;
- (void)setActionsMenuButton:(id)arg1;
- (void)setActionsMenuButtonXConstraint:(id)arg1;
- (void)setAllUserInteractionDisabledExceptForCancelButton:(bool)arg1;
- (void)setBackgroundContainerView:(id)arg1;
- (void)setBottomControlsYConstraint:(id)arg1;
- (void)setBottomLegibilityView:(id)arg1;
- (void)setCancelButton:(id)arg1;
- (void)setCancelButtonXConstraint:(id)arg1;
- (void)setCancelButtonYConstraint:(id)arg1;
- (void)setComplicationHostViewController:(id)arg1;
- (void)setComplicationsContainerView:(id)arg1;
- (void)setContentOverlayView:(id)arg1;
- (void)setControlsHidden:(bool)arg1;
- (void)setDateProvider:(id)arg1;
- (void)setDepthEffectDisabled:(bool)arg1;
- (void)setDisconnected:(bool)arg1;
- (void)setEditor:(id)arg1;
- (void)setEmptyVibrancyView:(id)arg1;
- (void)setFloatingContainerView:(id)arg1;
- (void)setFocusedComplicationElement:(long long)arg1;
- (void)setForegroundContainerView:(id)arg1;
- (void)setGraphicComplicationsEmptyView:(id)arg1;
- (void)setGraphicComplicationsReticleView:(id)arg1;
- (void)setIgnoresScrolling:(bool)arg1;
- (void)setInlineComplicationReticleView:(id)arg1;
- (void)setLeadingTopButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setLeadingTopButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 trailingTopButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)setLookNameLabel:(id)arg1;
- (void)setLookTransition:(id)arg1;
- (void)setLooks:(id)arg1;
- (void)setLooks:(id)arg1 forUpdatingProperties:(bool)arg2;
- (void)setNeedsReticleUpdate;
- (void)setNeedsReticleUpdate:(bool)arg1;
- (void)setPageControl:(id)arg1;
- (void)setPresentationDismissalGestureView:(id)arg1;
- (void)setPresentingModalViewController:(bool)arg1;
- (void)setPrimaryAction:(id)arg1;
- (void)setPrimaryActionButton:(id)arg1;
- (void)setPrimaryActionButtonXConstraint:(id)arg1;
- (void)setReticleVibrancyView:(id)arg1;
- (void)setScrollView:(id)arg1;
- (void)setSubtitleHidden:(bool)arg1;
- (void)setSubtitleViewController:(id)arg1;
- (void)setTimeContainerView:(id)arg1;
- (void)setTimeGestureView:(id)arg1;
- (void)setTimeReticleActive:(bool)arg1;
- (void)setTimeReticleView:(id)arg1;
- (void)setTopButtonsHidden:(bool)arg1;
- (void)setTouchBlockingView:(id)arg1;
- (void)setTrailingTopButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setUsesEditingLayout:(bool)arg1;
- (bool)shouldFixTimeBetweenTransitionFromTitleStyleConfiguration:(id)arg1 toTitleStyleConfiguration:(id)arg2 extensionBundleURL:(id)arg3;
- (id)subtitleViewController;
- (id)timeContainerView;
- (id)timeGestureView;
- (id)timeReticleView;
- (id)timeViewControllerForLook:(id)arg1;
- (void)timeViewTapped:(id)arg1;
- (id)touchBlockingView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })trailingTopButtonFrame;
- (void)updateReticlesIfNeeded;
- (void)updateTimeControllersForLookMap;
- (void)updateTopButtonAlpha;
- (bool)usesEditingLayout;
- (void)viewDidLayoutSubviews;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (unsigned long long)viewIndexForLookIndex:(unsigned long long)arg1;

// Image: /System/Library/AccessibilityBundles/PosterKit.axbundle/PosterKit

+ (Class)safeCategoryBaseClass;

- (void)_accessibilityLoadAccessibilityInformation;
- (void)_axSetAccessibilityElements;
- (void)_axSetPageControlValue;
- (void)setComplicationsRowConfigured:(bool)arg1;
- (void)updatePageControlCurrentPage;
- (void)viewDidAppear:(bool)arg1;

@end
