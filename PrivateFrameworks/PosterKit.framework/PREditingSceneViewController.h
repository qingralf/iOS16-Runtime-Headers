/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PosterKit.framework/PosterKit
 */

@interface PREditingSceneViewController : PRSceneViewController <PRComplicationContainerViewControllerDelegate, PRComplicationGalleryViewControllerDelegate, PRInlineComplicationGalleryViewControllerDelegate, UIGestureRecognizerDelegate, UISheetPresentationControllerDelegate, WFWidgetConfigurationViewControllerDelegate> {
    long long  _acceptButtonType;
    bool  _allowsTransparentContent;
    bool  _alternateDateEnabled;
    <BSInvalidatable> * _backgroundTaskIdleTimerAssertion;
    bool  _clientHasBackgroundTasks;
    bool  _clientPresentingModalViewController;
    NSMutableArray * _complicationContainerViewControllers;
    UIView * _complicationsAddGestureView;
    bool  _contentHidden;
    bool  _controlsHidden;
    <PREditingSceneViewControllerDelegate> * _delegate;
    bool  _didFinalize;
    bool  _dismissing;
    bool  _draggingComplication;
    long long  _focusedElement;
    NSArray * _graphicComplicationSuggestionSets;
    bool  _hero;
    UIView * _inlineComplicationGestureView;
    ATXComplicationSet * _inlineComplicationSuggestionSet;
    struct PREditingSceneViewControllerTopButtonLayout { 
        struct CGRect { 
            struct CGPoint { 
                double x; 
                double y; 
            } origin; 
            struct CGSize { 
                double width; 
                double height; 
            } size; 
        } leadingTopButtonFrame; 
        struct CGRect { 
            struct CGPoint { 
                double x; 
                double y; 
            } origin; 
            struct CGSize { 
                double width; 
                double height; 
            } size; 
        } trailingTopButtonFrame; 
    }  _lastValidDelegateTopButtonLayout;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _leadingTopButtonFrame;
    NSHashTable * _observers;
    NSArray * _presentationDismissalGestureViews;
    UINavigationController * _presentedComplicationsGallery;
    UINavigationController * _presentedInlineComplicationsGallery;
    WFWidgetConfigurationViewController * _presentedWidgetConfigurationViewController;
    PREditingSceneClientSettingsDiffInspector * _sceneClientSettingsDiffInspector;
    NSArray * _selectedGraphicComplications;
    PRComplicationDescriptor * _selectedInlineComplication;
    bool  _showsContentWhenReady;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _trailingTopButtonFrame;
    bool  _usesEditingLayout;
    long long  _variant;
    BSUIVibrancyConfiguration * _vibrancyConfiguration;
    PRComplicationDescriptor * _widgetBeingConfigured;
}

@property (nonatomic) long long acceptButtonType;
@property (nonatomic) bool allowsTransparentContent;
@property (getter=isAlternateDateEnabled, nonatomic) bool alternateDateEnabled;
@property (nonatomic, retain) <BSInvalidatable> *backgroundTaskIdleTimerAssertion;
@property (nonatomic) bool clientHasBackgroundTasks;
@property (getter=isClientPresentingModalViewController, nonatomic) bool clientPresentingModalViewController;
@property (nonatomic, retain) NSMutableArray *complicationContainerViewControllers;
@property (nonatomic, retain) UIView *complicationsAddGestureView;
@property (getter=isContentHidden, nonatomic) bool contentHidden;
@property (getter=areControlsHidden, nonatomic) bool controlsHidden;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PREditingSceneViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isDismissing, nonatomic) bool dismissing;
@property (getter=isDraggingComplication, nonatomic) bool draggingComplication;
@property (nonatomic) long long focusedElement;
@property (nonatomic, retain) NSArray *graphicComplicationSuggestionSets;
@property (readonly) unsigned long long hash;
@property (getter=isHero, nonatomic) bool hero;
@property (nonatomic, retain) UIView *inlineComplicationGestureView;
@property (nonatomic, retain) ATXComplicationSet *inlineComplicationSuggestionSet;
@property (nonatomic) struct PREditingSceneViewControllerTopButtonLayout { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; } lastValidDelegateTopButtonLayout;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } leadingTopButtonFrame;
@property (nonatomic, copy) NSArray *presentationDismissalGestureViews;
@property (nonatomic, retain) UINavigationController *presentedComplicationsGallery;
@property (nonatomic, retain) UINavigationController *presentedInlineComplicationsGallery;
@property (nonatomic, retain) WFWidgetConfigurationViewController *presentedWidgetConfigurationViewController;
@property (nonatomic, retain) PREditingSceneClientSettingsDiffInspector *sceneClientSettingsDiffInspector;
@property (nonatomic, retain) NSArray *selectedGraphicComplications;
@property (nonatomic, retain) PRComplicationDescriptor *selectedInlineComplication;
@property (nonatomic) bool showsContentWhenReady;
@property (readonly) Class superclass;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } trailingTopButtonFrame;
@property (nonatomic) bool usesEditingLayout;
@property (nonatomic) long long variant;
@property (nonatomic, retain) BSUIVibrancyConfiguration *vibrancyConfiguration;
@property (nonatomic, retain) PRComplicationDescriptor *widgetBeingConfigured;

// Image: /System/Library/PrivateFrameworks/PosterKit.framework/PosterKit

+ (id)role;

- (void).cxx_destruct;
- (bool)_areComplicationsDisallowed;
- (bool)_canAddComplicationDescriptor:(id)arg1;
- (void)_complicationsSceneCreated:(id)arg1;
- (void)_configureInitialSceneSettings:(id)arg1;
- (id)_configureNavigationControllerForGalleryViewController:(id)arg1;
- (void)_configureUsingPath:(id)arg1;
- (void)_dismissWithAction:(long long)arg1;
- (void)_finalize;
- (bool)_hasGraphicComplications;
- (id)_initWithProvider:(id)arg1 contents:(id)arg2 configurableOptions:(id)arg3 configuredProperties:(id)arg4 previewing:(bool)arg5;
- (void)_insertGraphicComplication:(id)arg1 atIndex:(long long)arg2 animated:(bool)arg3;
- (bool)_isPosterCoveredByModalPresentation;
- (void)_prefetchComplicationSuggestions;
- (void)_presentFullAlertForComplication:(id)arg1;
- (void)_presentIntentConfigurationForComplicationDescriptor:(id)arg1;
- (bool)_presentIntentConfigurationForComplicationDescriptorIfPossible:(id)arg1;
- (id)_presentationBackgroundColor;
- (void)_sceneContentReadinessDidChange;
- (bool)_shouldAllowAddComplicationsTapGesture;
- (bool)_shouldAllowInlineComplicationTapGesture;
- (bool)_shouldDepthEffectBeDisallowed;
- (void)_teardown;
- (struct PREditingSceneViewControllerTopButtonLayout { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; })_topButtonLayout;
- (void)_unregisterComplicationContainerViewControllerDelegates;
- (void)_updateAddComplicationsTapGestureAllowed;
- (void)_updateComplicationsVibrancyConfiguration;
- (void)_updatePresentationDismissalGestureView;
- (void)_updateSceneSettings:(id)arg1 transitionContext:(id)arg2;
- (void)_updateSceneSettingsForDepthEffectDisallowed;
- (void)_updateSceneSettingsForPosterCoveredByModalPresentation;
- (long long)acceptButtonType;
- (id)addComplicationGestureViewForElement:(unsigned long long)arg1 tapAction:(SEL)arg2 initiallyAllowed:(bool)arg3;
- (void)addComplicationTapped:(id)arg1;
- (void)addObserver:(id)arg1;
- (bool)allowsTransparentContent;
- (bool)areControlsHidden;
- (id)backgroundTaskIdleTimerAssertion;
- (bool)clientHasBackgroundTasks;
- (bool)complicationContainerViewController:(id)arg1 canAddGraphicComplication:(id)arg2;
- (void)complicationContainerViewController:(id)arg1 didCancelDropOperationForComplication:(id)arg2;
- (void)complicationContainerViewController:(id)arg1 didDropComplication:(id)arg2 atIndex:(long long)arg3;
- (void)complicationContainerViewController:(id)arg1 didEditComplication:(id)arg2;
- (void)complicationContainerViewController:(id)arg1 didRemoveComplication:(id)arg2;
- (void)complicationContainerViewControllerDidTapAdd:(id)arg1;
- (void)complicationContainerViewControllerDidTapInlineGallery:(id)arg1;
- (id)complicationContainerViewControllers;
- (void)complicationGalleryViewController:(id)arg1 didAddComplication:(id)arg2;
- (void)complicationGalleryViewController:(id)arg1 didBeginDraggingComplication:(id)arg2;
- (void)complicationGalleryViewController:(id)arg1 didEndDraggingComplication:(id)arg2 withOperation:(unsigned long long)arg3;
- (void)complicationGalleryViewControllerDidFinish:(id)arg1;
- (id)complicationsAddGestureView;
- (void)dealloc;
- (id)delegate;
- (void)dismissAnyPresentedComplicationGalleryAnimated:(bool)arg1;
- (void)dismissWithAction:(long long)arg1;
- (long long)focusedElement;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)graphicComplicationSuggestionSets;
- (void)inlineComplicationGalleryViewController:(id)arg1 didSelectComplication:(id)arg2;
- (void)inlineComplicationGalleryViewController:(id)arg1 didToggleAlternateDate:(bool)arg2;
- (void)inlineComplicationGalleryViewControllerDidFinish:(id)arg1;
- (id)inlineComplicationGestureView;
- (void)inlineComplicationGestureViewTapped:(id)arg1;
- (id)inlineComplicationSuggestionSet;
- (bool)isAlternateDateEnabled;
- (bool)isClientPresentingModalViewController;
- (bool)isContentHidden;
- (bool)isDismissing;
- (bool)isDraggingComplication;
- (bool)isHero;
- (struct PREditingSceneViewControllerTopButtonLayout { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; })lastValidDelegateTopButtonLayout;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })leadingTopButtonFrame;
- (void)modalPresentationDismissGestureDidFire:(id)arg1;
- (bool)prefersStatusBarHidden;
- (void)presentationControllerDidDismiss:(id)arg1;
- (id)presentationDismissalGestureViews;
- (id)presentedComplicationsGallery;
- (id)presentedInlineComplicationsGallery;
- (void)presentedViewControllerDismissalDidEnd:(id)arg1;
- (void)presentedViewControllerDismissalWillBegin:(id)arg1;
- (id)presentedWidgetConfigurationViewController;
- (void)removeObserver:(id)arg1;
- (void)scene:(id)arg1 didReceiveActions:(id)arg2;
- (void)scene:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;
- (id)sceneClientSettingsDiffInspector;
- (id)selectedGraphicComplications;
- (id)selectedInlineComplication;
- (void)setAcceptButtonType:(long long)arg1;
- (void)setAllowsTransparentContent:(bool)arg1;
- (void)setAlternateDateEnabled:(bool)arg1;
- (void)setBackgroundTaskIdleTimerAssertion:(id)arg1;
- (void)setClientHasBackgroundTasks:(bool)arg1;
- (void)setClientPresentingModalViewController:(bool)arg1;
- (void)setComplicationContainerViewControllers:(id)arg1;
- (void)setComplicationsAddGestureView:(id)arg1;
- (void)setContentHidden:(bool)arg1;
- (void)setContentHidden:(bool)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)setContentHidden:(bool)arg1 animationSettings:(id)arg2 completion:(id /* block */)arg3;
- (void)setControlsHidden:(bool)arg1;
- (void)setControlsHidden:(bool)arg1 animated:(bool)arg2;
- (void)setControlsHidden:(bool)arg1 animationSettings:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setDismissing:(bool)arg1;
- (void)setDraggingComplication:(bool)arg1;
- (void)setFocusedElement:(long long)arg1;
- (void)setGraphicComplicationSuggestionSets:(id)arg1;
- (void)setHero:(bool)arg1;
- (void)setInlineComplicationGestureView:(id)arg1;
- (void)setInlineComplicationSuggestionSet:(id)arg1;
- (void)setLastValidDelegateTopButtonLayout:(struct PREditingSceneViewControllerTopButtonLayout { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; })arg1;
- (void)setLeadingTopButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPresentationDismissalGestureViews:(id)arg1;
- (void)setPresentedComplicationsGallery:(id)arg1;
- (void)setPresentedInlineComplicationsGallery:(id)arg1;
- (void)setPresentedWidgetConfigurationViewController:(id)arg1;
- (void)setSceneClientSettingsDiffInspector:(id)arg1;
- (void)setSelectedGraphicComplications:(id)arg1;
- (void)setSelectedGraphicComplications:(id)arg1 animated:(bool)arg2;
- (void)setSelectedInlineComplication:(id)arg1;
- (void)setShowsContentWhenReady:(bool)arg1;
- (void)setTrailingTopButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setUsesEditingLayout:(bool)arg1;
- (void)setUsesEditingLayout:(bool)arg1 animated:(bool)arg2;
- (void)setUsesEditingLayout:(bool)arg1 animationSettings:(id)arg2;
- (void)setVariant:(long long)arg1;
- (void)setVibrancyConfiguration:(id)arg1;
- (void)setWidgetBeingConfigured:(id)arg1;
- (bool)showsContentWhenReady;
- (unsigned long long)supportedInterfaceOrientations;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })trailingTopButtonFrame;
- (void)traitCollectionDidChange:(id)arg1;
- (bool)usesEditingLayout;
- (long long)variant;
- (id)vibrancyConfiguration;
- (void)viewDidLoad;
- (id)widgetBeingConfigured;
- (void)widgetConfigurationViewController:(id)arg1 didFinishWithIntent:(id)arg2;

// Image: /System/Library/AccessibilityBundles/PosterKit.axbundle/PosterKit

+ (Class)safeCategoryBaseClass;

- (void)_presentComplicationGallery;
- (void)_presentInlineComplicationGallery;

@end
