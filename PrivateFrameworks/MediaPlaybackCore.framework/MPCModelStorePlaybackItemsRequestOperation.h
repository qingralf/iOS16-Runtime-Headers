/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
 */

@interface MPCModelStorePlaybackItemsRequestOperation : MPAsyncOperation {
    NSObject<OS_dispatch_queue> * _accessQueue;
    NSProgress * _activeProgress;
    NSMutableArray * _errors;
    bool  _hasCalledResponseHandler;
    bool  _hasReceivedFinalResponse;
    NSOperationQueue * _operationQueue;
    MPCModelStorePlaybackItemsResponse * _previousModelResponse;
    MPCModelStorePlaybackItemsRequest * _request;
    id /* block */  _responseHandler;
}

@property (nonatomic, readonly, copy) MPCModelStorePlaybackItemsRequest *request;
@property (nonatomic, readonly, copy) id /* block */ responseHandler;

- (void).cxx_destruct;
- (void)_executeWithUserIdentity:(id)arg1 useMediaAPILookup:(bool)arg2;
- (void)_handleItemMetadataBactchRequestCompletedWithAccumulator:(id)arg1 previousResponse:(id)arg2 userIdentity:(id)arg3 error:(id)arg4 isFinalResponse:(bool)arg5;
- (void)_importMediaAPICollectionItemMetadataResponse:(id)arg1 withError:(id)arg2 usingAccumulator:(id)arg3 userIdentity:(id)arg4 trustID:(id)arg5 previousResponse:(id)arg6 shouldBatchResultsWithPlaceholderObjects:(bool)arg7;
- (id)_localStoreAdamIDToEquivalencySourceStoreAdamIDMap:(id)arg1;
- (void)_runMediaAPIRequestToLoadMetadataWithAccumulator:(id)arg1 userIdentity:(id)arg2 previousResponse:(id)arg3 shouldBatchResultsWithPlaceholderObjects:(bool)arg4;
- (void)_runPersonalizationWithSectionCollection:(id)arg1 localEquivalencyMapping:(id)arg2 expirationDate:(id)arg3 userIdentity:(id)arg4 error:(id)arg5 isFinalResponse:(bool)arg6 isInvalidForPersonalization:(bool)arg7 networkingTime:(double)arg8;
- (void)_runStorePlatformRequestToLoadMetadataWithAccumulator:(id)arg1 userIdentity:(id)arg2 previousResponse:(id)arg3 shouldBatchResultsWithPlaceholderObjects:(bool)arg4;
- (void)_runSubscriptionStatusWithRequestContext:(id)arg1 completion:(id /* block */)arg2;
- (void)_validateUserIdentityForRequestWithCompletion:(id /* block */)arg1;
- (void)cancel;
- (void)execute;
- (id)initWithRequest:(id)arg1 responseHandler:(id /* block */)arg2;
- (id)request;
- (id /* block */)responseHandler;

@end
