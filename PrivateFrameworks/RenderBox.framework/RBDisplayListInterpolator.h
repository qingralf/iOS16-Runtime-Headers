/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/RenderBox.framework/RenderBox
 */

@interface RBDisplayListInterpolator : NSObject {
    struct objc_ptr<id<RBDisplayListContents>> { 
        <RBDisplayListContents> *_p; 
    }  _from;
    struct DisplayListInterpolator { 
        struct Transition { 
            unsigned char method; 
            bool replaceable; 
            unsigned char _add_remove_duration; 
            unsigned int max_changes; 
            struct vector<RB::Transition::EffectOrArg, 4UL, unsigned int> { 
                unsigned char _p[16]; 
                union { /* Warning: Unrecognized filer type: 'E' using 'void*' */ void*x_0_3_1; float x_0_3_2; float x_0_3_3; void*x_0_3_4; BOOL x_0_3_5; void*x_0_3_6; bycopy const _Atomic const void*x_0_3_7; } *_p; 
                unsigned int _size; 
                unsigned int _capacity; 
            } effects_and_args; 
        } default_transition; 
        struct vector<RB::DisplayListInterpolator::Op, 4UL, unsigned int> { 
            unsigned char _p[192]; 
            struct Op {} *_p; 
            unsigned int _size; 
            unsigned int _capacity; 
        } ops; 
        unsigned char ops_types; 
        struct vector<RB::Rect, 2UL, unsigned int> { 
            unsigned char _p[32]; 
            struct Rect {} *_p; 
            unsigned int _size; 
            unsigned int _capacity; 
        } rects; 
        bool valid; 
        bool has_identity; 
        bool non_fade_effects; 
    }  _interp;
    struct objc_ptr<NSDictionary *> { 
        NSDictionary *_p; 
    }  _options;
    struct objc_ptr<id<RBDisplayListContents>> { 
        <RBDisplayListContents> *_p; 
    }  _to;
}

@property (nonatomic, readonly) <RBDisplayListContents> *from;
@property (getter=isIdentity, nonatomic, readonly) bool identity;
@property (nonatomic, readonly) bool onlyFades;
@property (nonatomic, readonly, copy) NSDictionary *options;
@property (nonatomic, readonly) <RBDisplayListContents> *to;

+ (id)interpolatorWithFrom:(id)arg1 to:(id)arg2 options:(id)arg3;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingRectWithProgress:(float)arg1;
- (id)contentsWithProgress:(float)arg1;
- (void)drawInState:(struct _RBDrawingState { }*)arg1 by:(float)arg2;
- (id)from;
- (bool)isIdentity;
- (bool)onlyFades;
- (id)options;
- (id)to;

@end
