/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CinematicFraming.framework/CinematicFraming
 */

@interface CinematicDirectorSession : NSObject <CinematicTrackerDelegate> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cameraViewport;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _currentView;
    bool  _eventHappenedThisFrame;
    <FramingSpaceManager> * _framingSpaceManager;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastJumpCutTimestamp;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastSceneStateTransitionTime;
    unsigned int  _numProcessedFrames;
    CinematicFramingSessionOptions * _options;
    NSObject<RectangleAnimator> * _rectangleAnimator;
    SceneFramingEngine * _sceneFramingEngine;
    long long  _sceneState;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _targetView;
    CinematicTracker * _tracker;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cameraViewport;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) CinematicFramingSessionOptions *options;
@property (readonly) Class superclass;
@property (nonatomic) float zoomLevel;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cameraViewport;
- (void)cinematicTracker:(id)arg1 didTrackBecomeStationaryFirstTime:(id)arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (void)cinematicTracker:(id)arg1 didTrackEnter:(id)arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (void)cinematicTracker:(id)arg1 didTrackLeave:(id)arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (void)computeFocusPoint;
- (void)computeSceneFramingForMetadata:(id)arg1;
- (float)computeSubjectOccupancyFraction:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })computeSubjectRectangle:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })computeTargetViewport:(id)arg1;
- (void)handleMovingSceneForMetadata:(id)arg1 activeStationaryTracks:(id)arg2 activeMovingTracks:(id)arg3 validTracks:(id)arg4;
- (void)handleStationarySceneForMetadata:(id)arg1 activeStationaryTracks:(id)arg2 activeMovingTracks:(id)arg3 validTracks:(id)arg4;
- (id)initWithFramingSpaceManager:(id)arg1;
- (id)options;
- (void)reframeOnTracks:(id)arg1 withMetadata:(id)arg2;
- (void)reset;
- (void)resetCameraViewport:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (float)secondsInCurrentStateAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setCameraViewport:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setOptions:(id)arg1;
- (void)setZoomLevel:(float)arg1;
- (void)updateStateTo:(long long)arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (float)zoomLevel;

@end
