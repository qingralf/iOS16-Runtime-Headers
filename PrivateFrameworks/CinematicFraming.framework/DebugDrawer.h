/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CinematicFraming.framework/CinematicFraming
 */

@interface DebugDrawer : NSObject {
    struct { 
        struct { 
            /* Warning: Unrecognized filer type: '"' using 'void*' */ void*topLeft; 
        } corners; 
    }  _backProjectedViewportQuadrilateral;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cropRect;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _deadband;
    NSArray * _deadbandSubjects;
    NSArray * _detectionsThisFrame;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _displayRect;
    void _focusPoint;
    float  _forwardProjectedSubjectOccupancyFraction;
    struct { 
        struct { 
            /* Warning: Unrecognized filer type: '"' using 'void*' */ void*topLeft; 
        } corners; 
    }  _forwardProjectedSubjectQuadrilateral;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _idealDeadband;
    int  _mode;
    CinematicFramingSessionOptions * _options;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _subjectRect;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _targetRect;
    NSArray * _tracksThisFrame;
    FrameUndistortionSession * _undisortionSession;
    FrameUndistortionSession * _undistortionSession;
}

@property (nonatomic, retain) CinematicFramingSessionOptions *options;
@property (nonatomic, retain) FrameUndistortionSession *undistortionSession;

- (void).cxx_destruct;
- (void)dealloc;
- (void)drawDebugOnto:(struct __CVBuffer { }*)arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 onto:(struct __CVBuffer { }*)arg2 color:(int)arg3;
- (id)initWithUndistortionSession:(id)arg1 mode:(int)arg2;
- (id)options;
- (void)registerBackProjectedViewportQuadrilateral:(struct { struct { } x1; })arg1;
- (void)registerCrop:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)registerDeadband:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)registerDeadbandSubjects:(id)arg1;
- (void)registerDetections:(id)arg1;
- (void)registerDisplayRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)registerFocusPoint;
- (void)registerForwardProjectedSubjectOccupancyFraction:(float)arg1;
- (void)registerForwardProjectedSubjectQuadrilateral:(struct { struct { } x1; })arg1;
- (void)registerIdealDeadband:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)registerSubjectRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)registerTarget:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)registerTracks:(id)arg1;
- (void)setOptions:(id)arg1;
- (void)setUndistortionSession:(id)arg1;
- (id)undistortionSession;

@end
