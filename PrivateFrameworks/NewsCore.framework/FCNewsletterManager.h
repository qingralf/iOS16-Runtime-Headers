/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
 */

@interface FCNewsletterManager : NSObject <FCAppActivityObserving, FCAppleAccountObserver, FCNewsletterManager> {
    <FCNewsAppConfigurationManager> * _appConfig;
    <FCAppleAccount> * _appleAccount;
    <FCBundleSubscriptionManagerType> * _bundleSubscriptionManager;
    NSDate * _cacheExpiration;
    NSString * _cachedVector;
    FCCKPrivateDatabase * _database;
    FCCommandQueue * _endpointCommandQueue;
    FCNewsletterEndpointConnection * _endpointConnection;
    long long  _includeOptions;
    NSHashTable * _observers;
    long long  _subscription;
    NFPromise * _updateSubscriptionPromise;
    FCUserInfo * _userInfo;
}

@property (nonatomic, readonly) long long activeNewsletter;
@property (nonatomic, readonly) <FCNewsAppConfigurationManager> *appConfig;
@property (nonatomic, readonly) <FCAppleAccount> *appleAccount;
@property (nonatomic, readonly) <FCBundleSubscriptionManagerType> *bundleSubscriptionManager;
@property (nonatomic, retain) NSDate *cacheExpiration;
@property (nonatomic, retain) NSString *cachedVector;
@property (nonatomic, readonly) bool canSubscribe;
@property (nonatomic, readonly) bool canUnsubscribe;
@property (nonatomic, readonly) FCCKPrivateDatabase *database;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool enabled;
@property (nonatomic, readonly) FCCommandQueue *endpointCommandQueue;
@property (nonatomic, readonly) FCNewsletterEndpointConnection *endpointConnection;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool includeBundleSubscribedVector;
@property (nonatomic) long long includeOptions;
@property (nonatomic, readonly) bool includeSportsVector;
@property (nonatomic, readonly) bool includeUserVector;
@property (nonatomic, readonly) bool isSubscribed;
@property (nonatomic, readonly) NSHashTable *observers;
@property (nonatomic) long long subscription;
@property (readonly) Class superclass;
@property (nonatomic, retain) NFPromise *updateSubscriptionPromise;
@property (nonatomic, readonly) FCUserInfo *userInfo;

- (void).cxx_destruct;
- (long long)activeNewsletter;
- (void)activityObservingApplicationDidBecomeActive;
- (void)addObserver:(id)arg1;
- (id)appConfig;
- (id)appleAccount;
- (void)appleAccountChanged;
- (id)bundleSubscriptionManager;
- (id)cacheExpiration;
- (double)cacheTimeout;
- (id)cachedVector;
- (bool)canOptIntoIssues;
- (bool)canSubscribe;
- (bool)canSubscribeToNewsletter:(long long)arg1;
- (bool)canUnsubscribe;
- (id)database;
- (void)deletePersonalizationVector;
- (bool)enabled;
- (id)endpointCommandQueue;
- (id)endpointConnection;
- (id)forceUpdateSubscription;
- (bool)includeBundleSubscribedVector;
- (long long)includeOptions;
- (bool)includeSportsVector;
- (bool)includeUserVector;
- (id)initWithEndpointConnection:(id)arg1 endpointCommandQueue:(id)arg2 appleAccount:(id)arg3 appConfig:(id)arg4 userInfo:(id)arg5 bundleSubscriptionManager:(id)arg6 privateDataContext:(id)arg7;
- (bool)isEligibleForIssues;
- (bool)isOptedIntoIssues;
- (bool)isSignedIntoEmailAccount;
- (bool)isSubscribed;
- (long long)issueOptinStatus;
- (void)notifyObservers;
- (void)notifyObserversWithPreviousSubscription:(long long)arg1;
- (id)observers;
- (void)optOutOfIssues;
- (void)removeObserver:(id)arg1;
- (void)resetCaches;
- (void)saveToCloudKitSubscribedChannels:(id)arg1;
- (void)setCacheExpiration:(id)arg1;
- (void)setCachedVector:(id)arg1;
- (void)setIncludeOptions:(long long)arg1;
- (void)setSubscription:(long long)arg1;
- (void)setUpdateSubscriptionPromise:(id)arg1;
- (bool)shouldSubmitPersonalizationVector;
- (void)submitPersonalizationVector:(id)arg1 subscribedBundleChannelIDs:(id)arg2;
- (void)subscribe;
- (void)subscribeTo:(long long)arg1;
- (void)subscribeTo:(long long)arg1 includeOptions:(long long)arg2;
- (long long)subscription;
- (long long)subscriptionStatusForNewsletter:(long long)arg1;
- (void)unsubscribe;
- (void)updateCacheWithNewsletterString:(id)arg1 includeArray:(id)arg2;
- (id)updateSubscription;
- (id)updateSubscriptionPromise;
- (id)userInfo;

@end
