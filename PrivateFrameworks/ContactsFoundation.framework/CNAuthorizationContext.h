/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation
 */

@interface CNAuthorizationContext : NSObject <CNAuthorizationContext, CNTCCSimulation> {
    NSObject<OS_tcc_identity> * _assumedIdentity;
    NSNumber * _authorizationStatusCachedValue;
    CNUnfairLock * _authorizationStatusLock;
    CNAuditToken * _cnAuditToken;
    NSNumber * _isClientFirstOrSecondPartyCachedValue;
    NSNumber * _isClientTCCWhitelistedCachedValue;
    NSNumber * _isFirstPartyNotesEntitledCachedValue;
    NSNumber * _isNotesAccessGrantedCachedValue;
    NSNumber * _isThirdPartyNotesEntitledCachedValue;
    CNUnfairLock * _notesAccessStatusLock;
    NSNumber * _shouldAlwaysQueryAuthorizationStatusCachedValue;
    <CNTCC><CNTCCSimulation> * _tccServices;
}

@property (nonatomic, retain) NSObject<OS_tcc_identity> *assumedIdentity;
@property (nonatomic, readonly) long long authorizationStatus;
@property (nonatomic, retain) NSNumber *authorizationStatusCachedValue;
@property (nonatomic, retain) CNUnfairLock *authorizationStatusLock;
@property (nonatomic, retain) CNAuditToken *cnAuditToken;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isAccess1Granted;
@property (nonatomic, readonly) bool isAccess2Granted;
@property (nonatomic, readonly) bool isAccessGranted;
@property (nonatomic, readonly) bool isAccessRestricted;
@property (nonatomic, readonly) bool isClientFirstOrSecondParty;
@property (nonatomic, retain) NSNumber *isClientFirstOrSecondPartyCachedValue;
@property (nonatomic, readonly) bool isClientTCCWhitelisted;
@property (nonatomic, retain) NSNumber *isClientTCCWhitelistedCachedValue;
@property (nonatomic, retain) NSNumber *isFirstPartyNotesEntitledCachedValue;
@property (nonatomic, readonly) bool isNotesAccessGranted;
@property (nonatomic, retain) NSNumber *isNotesAccessGrantedCachedValue;
@property (nonatomic, retain) NSNumber *isThirdPartyNotesEntitledCachedValue;
@property (nonatomic, retain) CNUnfairLock *notesAccessStatusLock;
@property (nonatomic, retain) NSNumber *shouldAlwaysQueryAuthorizationStatusCachedValue;
@property (readonly) Class superclass;
@property (nonatomic, retain) <CNTCC><CNTCCSimulation> *tccServices;

+ (id)bundleIdentifierForAssumedIdentity:(id)arg1;
+ (id)os_log;
+ (id)sharedInstance;
+ (bool)shouldIgnoreAssumedIdentity:(id)arg1;
+ (bool)shouldIgnoreAssumedIdentityForBundleIdentifier:(id)arg1;

- (void).cxx_destruct;
- (id)assumedIdentity;
- (long long)authorizationStatus;
- (id)authorizationStatusCachedValue;
- (id)authorizationStatusLock;
- (bool)checkClientIsFirstOrSecondParty;
- (bool)checkTCCEntitlementNamesAllowContacts:(id)arg1;
- (id)cnAuditToken;
- (bool)doesClientHaveEntitlement:(id)arg1;
- (id)errorForStatus:(long long)arg1;
- (id)init;
- (id)initWithAuditToken:(id)arg1 assumedIdentity:(id)arg2;
- (id)initWithAuditToken:(id)arg1 assumedIdentity:(id)arg2 tccServices:(id)arg3;
- (bool)isAccess1Granted;
- (bool)isAccess2Granted;
- (bool)isAccessGranted;
- (bool)isAccessGrantedRequestingAccessIfNeeded;
- (bool)isAccessRestricted;
- (bool)isClientFirstOrSecondParty;
- (id)isClientFirstOrSecondPartyCachedValue;
- (bool)isClientFirstOrSecondPartyImpl;
- (bool)isClientTCCCoupledProcess;
- (bool)isClientTCCKilledOnAuthorizationChange;
- (bool)isClientTCCUncoupledProcess;
- (bool)isClientTCCWhitelisted;
- (id)isClientTCCWhitelistedCachedValue;
- (bool)isClientTCCWhitelistedImpl;
- (bool)isFirstPartyNotesEntitled;
- (id)isFirstPartyNotesEntitledCachedValue;
- (bool)isFirstPartyNotesEntitledImpl;
- (bool)isGreenTeaDevice;
- (bool)isNotesAccessGranted;
- (id)isNotesAccessGrantedCachedValue;
- (bool)isNotesAccessGrantedImpl;
- (bool)isThirdPartyNotesEntitled;
- (id)isThirdPartyNotesEntitledCachedValue;
- (bool)isThirdPartyNotesEntitledImpl;
- (bool)isUnitTesting;
- (id)notesAccessStatusLock;
- (bool)requestAccessWithError:(id*)arg1;
- (void)requestAuthorization:(long long)arg1 completionHandler:(id /* block */)arg2;
- (id)requestAuthorizationFuture:(long long)arg1;
- (long long)resolveRequestAuthorizationFuture:(id)arg1;
- (void)setAssumedIdentity:(id)arg1;
- (void)setAuthorizationStatusCachedValue:(id)arg1;
- (void)setAuthorizationStatusLock:(id)arg1;
- (void)setCnAuditToken:(id)arg1;
- (void)setIsClientFirstOrSecondPartyCachedValue:(id)arg1;
- (void)setIsClientTCCWhitelistedCachedValue:(id)arg1;
- (void)setIsFirstPartyNotesEntitledCachedValue:(id)arg1;
- (void)setIsNotesAccessGrantedCachedValue:(id)arg1;
- (void)setIsThirdPartyNotesEntitledCachedValue:(id)arg1;
- (void)setNotesAccessStatusLock:(id)arg1;
- (void)setShouldAlwaysQueryAuthorizationStatusCachedValue:(id)arg1;
- (void)setTccServices:(id)arg1;
- (bool)shouldAlwaysQueryAuthorizationStatus;
- (id)shouldAlwaysQueryAuthorizationStatusCachedValue;
- (bool)shouldAlwaysQueryAuthorizationStatusImpl;
- (void)simulateStatus:(long long)arg1;
- (void)stopSimulation;
- (id)tccServices;
- (void)updateCachedAuthorizationStatusIfNeeded;
- (void)updateCachedNotesAccessGrantedIfNeeded;

@end
