/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemonLegacy.framework/HomeKitDaemonLegacy
 */

@interface HMDPrimaryElectionCoordinationAddOn : NSObject <HMDLocalElectionMeshControllerDelegate, HMDPrimaryResidentElectionAddOn, HMFLogging, HMFMessageReceiver, HMFTimerDelegate> {
    <HMFAsyncContext> * _asyncContext;
    <HMDResidentDeviceManagerContext> * _context;
    <HMDPrimaryElectionCoordinationAddOnDataSource> * _dataSource;
    HMFTimer * _debounceTimer;
    <HMDPrimaryResidentElectionAddOnDelegate> * _delegate;
    HMFFuture * _findPrimaryMeshFuture;
    HMDPrimaryElectionFindPrimaryMeshOperation * _findPrimaryMeshOperation;
    <HMDLocalElectionMeshNode> * _lastKnownLeaderNode;
    <HMDLocalElectionMeshController> * _meshController;
    HMFTimer * _meshLeaderToPrimaryResidentPingResponseTimer;
    bool  _notifyNodesChanged;
    HMFTimer * _pingTimer;
    NSObject<OS_dispatch_queue> * _queue;
    HMDRemoteDeviceMonitor * _remoteDeviceMonitor;
    unsigned long long  _residentCountDuringLastElection;
    HMFTimer * _secondaryMeshTimer;
    __HMDPrimaryElectionCandidate * _selectedPrimaryResidentCandidate;
    unsigned long long  _state;
}

@property (readonly) <HMDResidentDeviceManagerContext> *context;
@property (readonly) <HMDPrimaryElectionCoordinationAddOnDataSource> *dataSource;
@property (retain) HMFTimer *debounceTimer;
@property (readonly, copy) NSString *debugDescription;
@property <HMDPrimaryResidentElectionAddOnDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (retain) HMFFuture *findPrimaryMeshFuture;
@property (retain) HMDPrimaryElectionFindPrimaryMeshOperation *findPrimaryMeshOperation;
@property (readonly) unsigned long long hash;
@property (retain) <HMDLocalElectionMeshNode> *lastKnownLeaderNode;
@property (retain) HMFTimer *meshLeaderToPrimaryResidentPingResponseTimer;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (nonatomic, readonly) NSUUID *messageTargetUUID;
@property (readonly) unsigned long long messageTransportRestriction;
@property bool notifyNodesChanged;
@property (retain) HMFTimer *pingTimer;
@property (readonly) HMDRemoteDeviceMonitor *remoteDeviceMonitor;
@property unsigned long long residentCountDuringLastElection;
@property (retain) HMFTimer *secondaryMeshTimer;
@property (retain) __HMDPrimaryElectionCandidate *selectedPrimaryResidentCandidate;
@property unsigned long long state;
@property (readonly) Class superclass;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)_findPrimaryMeshWithContext:(id)arg1 otherResidents:(id)arg2;
- (void)_selectPrimaryResident;
- (id)context;
- (id)dataSource;
- (id)debounceTimer;
- (id)delegate;
- (id)dumpState;
- (id)findPrimaryMeshFuture;
- (id)findPrimaryMeshOperation;
- (void)handleCurrentPrimaryNotification:(id)arg1;
- (void)handleCurrentPrimaryRequest:(id)arg1;
- (void)handleDeviceCapabilitiesRequest:(id)arg1;
- (void)handleMeshInformationRequest:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 meshController:(id)arg2 dataSource:(id)arg3;
- (id)lastKnownLeaderNode;
- (id)logIdentifier;
- (void)meshControllerDidElectLeader:(id)arg1;
- (void)meshControllerDidReceivePingFromLeader:(id)arg1;
- (void)meshControllerDidStartElection:(id)arg1;
- (void)meshControllerDidUpdatesNodes:(id)arg1;
- (id)meshLeaderToPrimaryResidentPingResponseTimer;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (unsigned long long)messageTransportRestriction;
- (bool)notifyNodesChanged;
- (void)performElection;
- (void)performElectionWithReason:(unsigned long long)arg1;
- (id)pingTimer;
- (void)primaryResidentChanged:(id)arg1 previousResidentDevice:(id)arg2;
- (id /* block */)primarySortComparatorForCurrentPrimary:(id)arg1;
- (void)registerForMessages;
- (id)remoteDeviceMonitor;
- (unsigned long long)residentCountDuringLastElection;
- (id)secondaryMeshTimer;
- (id)selectedPrimaryResidentCandidate;
- (void)setDebounceTimer:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFindPrimaryMeshFuture:(id)arg1;
- (void)setFindPrimaryMeshOperation:(id)arg1;
- (void)setLastKnownLeaderNode:(id)arg1;
- (void)setMeshLeaderToPrimaryResidentPingResponseTimer:(id)arg1;
- (void)setNotifyNodesChanged:(bool)arg1;
- (void)setPingTimer:(id)arg1;
- (void)setResidentCountDuringLastElection:(unsigned long long)arg1;
- (void)setSecondaryMeshTimer:(id)arg1;
- (void)setSelectedPrimaryResidentCandidate:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)start;
- (unsigned long long)state;
- (void)stop;
- (void)timerDidFire:(id)arg1;

@end
