/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemonLegacy.framework/HomeKitDaemonLegacy
 */

@interface HMDEventCountersManager : HMFObject <HMDEventCounterContext> {
    NSMutableDictionary * _counterGroups;
    <HMDEventCountersStoring> * _counterStorage;
    NSDate * _lastSaveTime;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    double  _saveInterval;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, retain) NSMutableDictionary *counterGroups;
@property (readonly) <HMDEventCountersStoring> *counterStorage;
@property (nonatomic, retain) NSDate *lastSaveTime;
@property (nonatomic) double saveInterval;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)sharedEventCountersManager;

- (void).cxx_destruct;
- (id)_fetchAllEventCounters;
- (void)_removeCounterGroupForSpecifier:(id)arg1;
- (void)_save;
- (void)addObserver:(id)arg1 forEventName:(id)arg2 requestGroup:(id)arg3;
- (void)counterChanged;
- (id)counterGroupForName:(id)arg1;
- (id)counterGroupForSpecifier:(id)arg1;
- (id)counterGroups;
- (id)counterStorage;
- (unsigned long long)fetchAggregatedEventCountersForRequestGroup:(id)arg1;
- (id)fetchAllEventCounters;
- (unsigned long long)fetchEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (id)fetchEventCountersForRequestGroup:(id)arg1;
- (void)forceSave;
- (void)incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2 withValue:(unsigned long long)arg3;
- (id)init;
- (id)initWithEventCountersStorage:(id)arg1 saveInterval:(double)arg2;
- (id)lastSaveTime;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)removeCounterGroupForName:(id)arg1;
- (void)removeCounterGroupForSpecifier:(id)arg1;
- (void)removeCounterGroupsBasedOnPredicate:(id /* block */)arg1;
- (void)resetAllEventCounters;
- (void)resetEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;
- (void)resetEventCountersForRequestGroup:(id)arg1;
- (double)saveInterval;
- (void)setCounterGroups:(id)arg1;
- (void)setLastSaveTime:(id)arg1;
- (void)setSaveInterval:(double)arg1;
- (id)unarchiveEventCounters;
- (id)workQueue;

@end
