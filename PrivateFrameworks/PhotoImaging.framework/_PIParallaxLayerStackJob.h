/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging
 */

@interface _PIParallaxLayerStackJob : NURenderJob <_PIParallaxLayerStackRenderer> {
    <NUImageBuffer> * _backgroundBuffer;
    CIImage * _backgroundImage;
    _PIParallaxLayerStackDebugImageCollector * _debugImageCollector;
    <NUImageBuffer> * _foregroundBuffer;
    CIImage * _foregroundImage;
    PFParallaxLayout * _layout;
}

@property (nonatomic, retain) <NUImageBuffer> *backgroundBuffer;
@property (nonatomic, retain) CIImage *backgroundImage;
@property (nonatomic, retain) _PIParallaxLayerStackDebugImageCollector *debugImageCollector;
@property (nonatomic, retain) <NUImageBuffer> *foregroundBuffer;
@property (nonatomic, retain) CIImage *foregroundImage;
@property (nonatomic, retain) PFParallaxLayout *layout;
@property (nonatomic, readonly) long long mode;
@property (nonatomic, readonly) PFParallaxLayout *requestLayout;
@property (nonatomic, readonly) <PISegmentationItem> *segmentationItem;
@property (nonatomic, readonly) PIParallaxStyle *style;

- (void).cxx_destruct;
- (id)backfillScalePolicy;
- (id)backgroundBuffer;
- (id)backgroundImage;
- (id)debugImageCollector;
- (id)debugTintedImage:(id)arg1 isBackfill:(bool)arg2;
- (id)deviceScalePolicy;
- (id)effectiveLayout;
- (id)foregroundBuffer;
- (id)foregroundImage;
- (id)initWithParallaxLayerStackRequest:(id)arg1;
- (id)initWithRequest:(id)arg1;
- (id)layerForBuffer:(id)arg1 image:(id)arg2 zPosition:(double)arg3 identifier:(id)arg4;
- (id)layout;
- (long long)mode;
- (id)newRenderPipelineStateForEvaluationMode:(long long)arg1;
- (id)newRenderedPixelBufferFromImage:(id)arg1 hasAlpha:(bool)arg2 error:(out id*)arg3;
- (bool)prepare:(out id*)arg1;
- (bool)render:(out id*)arg1;
- (id)requestLayout;
- (id)result;
- (id)scalePolicy;
- (id)segmentationItem;
- (void)setBackgroundBuffer:(id)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)setDebugImageCollector:(id)arg1;
- (void)setForegroundBuffer:(id)arg1;
- (void)setForegroundImage:(id)arg1;
- (void)setLayout:(id)arg1;
- (id)style;
- (bool)wantsCompleteStage;
- (bool)wantsOutputGeometry;
- (bool)wantsOutputImage;
- (bool)wantsRenderStage;

@end
