/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/LinkServices.framework/LinkServices
 */

@interface LNConnection : NSObject <LNConnectionOperationDelegate> {
    NSObject<OS_os_activity> * _activity;
    struct { 
        unsigned int val[8]; 
    }  _auditToken;
    NSString * _bundleIdentifier;
    NSHashTable * _completionHandlers;
    NSMutableSet * _connectionOperations;
    NSMapTable * _executors;
    NSString * _logPrefix;
    long long  _metadataVersion;
    NSObject<OS_dispatch_queue> * _queue;
    long long  _state;
    NSXPCConnection * _xpcConnection;
}

@property (nonatomic, readonly) NSObject<OS_os_activity> *activity;
@property (nonatomic) struct { unsigned int x1[8]; } auditToken;
@property (nonatomic, readonly, copy) NSString *bundleIdentifier;
@property (nonatomic, readonly) NSHashTable *completionHandlers;
@property (nonatomic, readonly) <LNConnectionHostInterface> *connectionInterface;
@property (nonatomic, readonly) NSMutableSet *connectionOperations;
@property (nonatomic, readonly) NSSet *currentConnectionOperations;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) LNConnectionOptions *defaultOptions;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSMapTable *executors;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *logPrefix;
@property (nonatomic, readonly) long long metadataVersion;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic) long long state;
@property (readonly) Class superclass;
@property (setter=setXPCConnection:, nonatomic, retain) NSXPCConnection *xpcConnection;

+ (void)fetchEntitiesFromActiveApplicationsWithInteractionIDs:(id)arg1 bundleIdentifiers:(id)arg2 completionHandler:(id /* block */)arg3;
+ (void)fetchEntitiesFromActiveApplicationsWithInteractionIDs:(id)arg1 completionHandler:(id /* block */)arg2;
+ (id)optionsForAction:(id)arg1 interactionMode:(long long)arg2;

- (void).cxx_destruct;
- (id)_executorForAction:(id)arg1 metadata:(id)arg2 options:(id)arg3 appBundleIdentifier:(id)arg4 delegate:(id)arg5;
- (id)activity;
- (struct { unsigned int x1[8]; })auditToken;
- (id)bundleIdentifier;
- (void)cancelTimeoutForOperationWithIdentifier:(id)arg1;
- (void)completeWithError:(id)arg1;
- (id)completionHandlers;
- (void)connectWithOptions:(id)arg1;
- (id)connectionInterface;
- (void)connectionOperation:(id)arg1 didFinishWithError:(id)arg2;
- (void)connectionOperationWillStart:(id)arg1;
- (id)connectionOperations;
- (id)currentConnectionOperations;
- (void)dealloc;
- (id)defaultOptions;
- (void)enqueueConnectionOperation:(id)arg1;
- (id)executorForAction:(id)arg1 interactionMode:(long long)arg2 label:(id)arg3 delegate:(id)arg4;
- (id)executorForAction:(id)arg1 interactionMode:(long long)arg2 label:(id)arg3 source:(unsigned short)arg4 delegate:(id)arg5;
- (id)executorForAction:(id)arg1 label:(id)arg2 delegate:(id)arg3;
- (id)executorForAction:(id)arg1 metadata:(id)arg2 appBundleIdentifier:(id)arg3 options:(id)arg4 delegate:(id)arg5;
- (id)executorForAction:(id)arg1 metadata:(id)arg2 options:(id)arg3 delegate:(id)arg4;
- (id)executorForAction:(id)arg1 options:(id)arg2 delegate:(id)arg3;
- (id)executors;
- (void)extendTimeoutForOperationWithIdentifier:(id)arg1;
- (void)fetchActionAppContextForAction:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchActionForAutoShortcutPhrase:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchActionOutputValue:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchDefaultValueForActionMetadata:(id)arg1 parameterIdentifier:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)fetchDestinationMDMAccountIdentifierForAction:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchDisplayRepresentationForActions:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchExtensionsMetadataWithCompletionHandler:(id /* block */)arg1;
- (void)fetchMetadataWithCompletionHandler:(id /* block */)arg1;
- (void)fetchOptionsDefaultValueForAction:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchOptionsForActionMetadata:(id)arg1 parameterMetadata:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)fetchOptionsForActionMetadata:(id)arg1 parameterMetadata:(id)arg2 localeIdentifier:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)fetchOptionsForActionMetadata:(id)arg1 parameterMetadata:(id)arg2 searchTerm:(id)arg3 localeIdentifier:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)fetchStructuredDataWithTypeIdentifier:(long long)arg1 forEntityIdentifiers:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)fetchSuggestedActionsForStartWorkoutAction:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchSuggestedActionsWithSiriLanguageCode:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchSuggestedFocusActionsForActionMetadata:(id)arg1 suggestionContext:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)fetchViewActionsWithCompletionHandler:(id /* block */)arg1;
- (void)fetchViewEntitiesWithInteractionIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchViewEntitiesWithOptions:(id)arg1 interactionIDs:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)getConnectionInterfaceWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)initWithBundleIdentifier:(id)arg1;
- (id)initWithBundleIdentifier:(id)arg1 metadataVersion:(long long)arg2 error:(id*)arg3;
- (id)logPrefix;
- (long long)metadataVersion;
- (id)operationWithIdentifier:(id)arg1;
- (void)performPropertyQuery:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)performQuery:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)performSuggestedEntitiesQueryWithEntityMangledTypeName:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)performSuggestedResultsQueryWithEntityType:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)queue;
- (void)refreshWithOptions:(id)arg1;
- (void)removeConnectionOperation:(id)arg1;
- (void)setAuditToken:(struct { unsigned int x1[8]; })arg1;
- (void)setConnected;
- (void)setDisconnectedWithError:(id)arg1;
- (void)setLogPrefix:(id)arg1;
- (void)setState:(long long)arg1;
- (void)setXPCConnection:(id)arg1;
- (long long)state;
- (id)xpcConnection;

@end
