/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PlatformSSO.framework/PlatformSSO
 */

@interface POConfigurationManager : NSObject <POJWKSStorageProvider> {
    PODeviceConfiguration * _currentDeviceConfiguration;
    POLoginConfiguration * _currentLoginConfiguration;
    POUserConfiguration * _currentUserConfiguration;
    PODirectoryServices * _directoryServices;
    POKeychainHelper * _keychainHelper;
    PODaemonConnection * _serviceConnection;
    NSString * _userIdentifier;
    NSString * _userName;
    POConfigurationVersion * _version;
}

@property (readonly) PODeviceConfiguration *currentDeviceConfiguration;
@property (readonly) POLoginConfiguration *currentLoginConfiguration;
@property (readonly) POUserConfiguration *currentUserConfiguration;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (retain) PODirectoryServices *directoryServices;
@property (readonly) unsigned long long hash;
@property (retain) NSData *jwksCache;
@property (retain) POKeychainHelper *keychainHelper;
@property (readonly) Class superclass;
@property (readonly) NSString *userIdentifier;
@property (readonly) NSString *userName;
@property (retain) POConfigurationVersion *version;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (id)currentDeviceConfiguration;
- (id)currentLoginConfiguration;
- (id)currentUserConfiguration;
- (id)deviceConfigurationForExtension:(id)arg1;
- (id)directoryServices;
- (void)enableScreensaverRuleIfNeeded:(id /* block */)arg1;
- (id)initWithUserName:(id)arg1;
- (id)jwksCache;
- (id)jwksCacheForExtensionIdentifier:(id)arg1;
- (id)keychainHelper;
- (id)loginConfigurationForExtension:(id)arg1;
- (bool)removeDeviceConfigurationForExtension:(id)arg1;
- (bool)removeLoginConfigurationForExtension:(id)arg1;
- (bool)removeUserConfigurationForUserName:(id)arg1;
- (bool)resetStoredConfiguration;
- (void)restoreScreensaverRuleIfNeeded;
- (bool)saveCurrentUserConfiguration;
- (bool)saveDeviceConfiguration:(id)arg1 forExtension:(id)arg2;
- (bool)saveLoginConfiguration:(id)arg1 forExtension:(id)arg2;
- (bool)saveUserConfiguration:(id)arg1 forUserName:(id)arg2;
- (void)setDirectoryServices:(id)arg1;
- (void)setJwksCache:(id)arg1;
- (void)setJwksCache:(id)arg1 forExtensionIdentifier:(id)arg2;
- (void)setKeychainHelper:(id)arg1;
- (void)setVersion:(id)arg1;
- (id)userConfigurationForUserName:(id)arg1;
- (id)userConfigurationForUserName:(id)arg1 passwordContext:(id)arg2;
- (id)userIdentifier;
- (id)userName;
- (id)version;

@end
