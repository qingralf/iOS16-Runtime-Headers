/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PlatformSSO.framework/PlatformSSO
 */

@interface POUserConfiguration : NSObject <NSSecureCoding> {
    NSData * __contextData;
    NSData * __credential;
    NSData * __sepKeyData;
    LAContext * _credentialContext;
    NSArray * _kerberosStatus;
    POKeychainHelper * _keychainHelper;
    unsigned long long  _loginType;
    NSString * _loginUserName;
    NSData * _pendingSSOTokens;
    struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; } * _sepKey;
    struct __SecCertificate { } * _sepKeyCertificate;
    NSString * _ssoExtensionIdentifier;
    long long  _state;
    NSString * _uniqueIdentifier;
}

@property (retain) NSData *_contextData;
@property (retain) NSData *_credential;
@property (retain) NSData *_sepKeyData;
@property (retain) LAContext *credentialContext;
@property (retain) NSArray *kerberosStatus;
@property (retain) POKeychainHelper *keychainHelper;
@property unsigned long long loginType;
@property (retain) NSString *loginUserName;
@property (retain) NSData *pendingSSOTokens;
@property struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*sepKey;
@property (nonatomic) struct __SecCertificate { }*sepKeyCertificate;
@property (retain) NSString *ssoExtensionIdentifier;
@property long long state;
@property (readonly) NSDate *tokenExpiration;
@property (readonly) NSDate *tokenReceived;
@property (readonly) NSData *tokens;
@property (retain) NSString *uniqueIdentifier;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_contextData;
- (id)_credential;
- (id)_sepKeyData;
- (id)calculateExpirationForTokens:(id)arg1;
- (id)credentialContext;
- (id)currentRefreshToken;
- (id)dataRepresentation;
- (id)dataRepresentationForDisplay:(bool)arg1;
- (id)decryptPendingSSOTokensUsingPrivateKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (bool)encryptPendingSSOTokens:(id)arg1 usingPublicKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)arg2;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithData:(id)arg1 contextData:(id)arg2;
- (id)kerberosStatus;
- (id)keychainHelper;
- (unsigned long long)loginType;
- (id)loginUserName;
- (id)pendingSSOTokens;
- (struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)sepKey;
- (struct __SecCertificate { }*)sepKeyCertificate;
- (void)setCredentialContext:(id)arg1;
- (void)setKerberosStatus:(id)arg1;
- (void)setKeychainHelper:(id)arg1;
- (void)setLoginType:(unsigned long long)arg1;
- (void)setLoginUserName:(id)arg1;
- (void)setPendingSSOTokens:(id)arg1;
- (void)setSepKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)arg1;
- (void)setSepKeyCertificate:(struct __SecCertificate { }*)arg1;
- (void)setSsoExtensionIdentifier:(id)arg1;
- (void)setState:(long long)arg1;
- (bool)setTokens:(id)arg1 returningError:(id*)arg2;
- (void)setUniqueIdentifier:(id)arg1;
- (void)set_contextData:(id)arg1;
- (void)set_credential:(id)arg1;
- (void)set_sepKeyData:(id)arg1;
- (id)ssoExtensionIdentifier;
- (long long)state;
- (id)tokenExpiration;
- (id)tokenReceived;
- (id)tokens;
- (id)uniqueIdentifier;

@end
