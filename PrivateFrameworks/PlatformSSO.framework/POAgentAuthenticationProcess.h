/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PlatformSSO.framework/PlatformSSO
 */

@interface POAgentAuthenticationProcess : NSObject <POExtensionDelegate, UNUserNotificationCenterDelegate> {
    POAuthenticationProcess * _authenticationProcess;
    NSTimer * _authenticationTimer;
    SOConfigurationHost * _configurationHost;
    POConfigurationManager * _configurationManager;
    PODirectoryServices * _directoryServices;
    SOExtensionManager * _extensionManager;
    <POAgentAuthenticationProcessKerberosDelegate> * _kerberosDelegate;
    POKerberosHelper * _kerberosHelper;
    POKeyBag * _keyBag;
    NSDate * _lastAuthenticationAttempt;
    bool  _localAccount;
    NSNotificationCenter * _notificationCenter;
    bool  _platformSSOActive;
    PORegistrationContext * _registrationContext;
    bool  _registrationFailed;
    NSString * _userName;
    UNUserNotificationCenter * _userNotificationCenter;
}

@property (retain) POAuthenticationProcess *authenticationProcess;
@property (retain) NSTimer *authenticationTimer;
@property (retain) SOConfigurationHost *configurationHost;
@property (retain) POConfigurationManager *configurationManager;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (retain) PODirectoryServices *directoryServices;
@property (retain) SOExtensionManager *extensionManager;
@property (readonly) unsigned long long hash;
@property <POAgentAuthenticationProcessKerberosDelegate> *kerberosDelegate;
@property (retain) POKerberosHelper *kerberosHelper;
@property (retain) POKeyBag *keyBag;
@property (retain) NSDate *lastAuthenticationAttempt;
@property bool localAccount;
@property (retain) NSNotificationCenter *notificationCenter;
@property bool platformSSOActive;
@property (retain) PORegistrationContext *registrationContext;
@property bool registrationFailed;
@property (readonly) Class superclass;
@property (retain) NSString *userName;
@property (retain) UNUserNotificationCenter *userNotificationCenter;

- (void).cxx_destruct;
- (void)_startDeviceRegistration;
- (void)_startUserRegistration;
- (id)authenticationProcess;
- (id)authenticationTimer;
- (void)configurationChanged:(id)arg1;
- (id)configurationHost;
- (id)configurationManager;
- (id)createRegistrationNotificationWithAccountName:(id)arg1;
- (id)createSignInNotificationWithAccountName:(id)arg1 extensionIdentifier:(id)arg2;
- (void)dealloc;
- (id)directoryServices;
- (void)exchangeTGTForStatus:(id)arg1;
- (id)extensionManager;
- (void)handleAgentStartup;
- (void)handleConfigurationChanged:(bool)arg1;
- (void)handleDeviceAndUserRegistrationForRepair:(bool)arg1;
- (void)handleDeviceAndUserRegistrationForRepair:(bool)arg1 notified:(bool)arg2;
- (void)handleDeviceRegistrationNotification;
- (void)handleKerberosMappingForTokens:(id)arg1 extensionIdentifier:(id)arg2 userConfiguration:(id)arg3;
- (void)handleKerberosMappingForTokens:(id)arg1 loginConfiguration:(id)arg2 userConfiguration:(id)arg3;
- (void)handleNetworkChange;
- (void)handlePendingSSOTokens;
- (void)handleRegistrationViewControllerForExtensionIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)handleRemovingRegistrationForExtension:(id)arg1;
- (void)handleScreenSaverRule;
- (void)handleScreenUnlock;
- (void)handleUnfinishedTGTExchanges;
- (void)handleUserCredentialNeededAtLogin:(bool)arg1;
- (void)handleUserCredentialNeededAtLogin:(bool)arg1 returningContext:(id*)arg2;
- (bool)handleUserNeedsReauthenticationAfterDelay:(double)arg1;
- (void)handleUserRegistrationForUser:(id)arg1 repair:(bool)arg2;
- (void)handleUserRegistrationForUser:(id)arg1 repair:(bool)arg2 notified:(bool)arg3;
- (void)handleUserRegistrationNotification;
- (id)initWithDelegate:(id)arg1;
- (bool)isCurrentSSOExtension:(id)arg1;
- (id)kerberosDelegate;
- (id)kerberosHelper;
- (id)keyBag;
- (id)lastAuthenticationAttempt;
- (id)loadSSOExtensionWithExtensionBundleIdentifier:(id)arg1;
- (bool)localAccount;
- (id)notificationCenter;
- (void)notifyKerberosDelegateTGTDidBegin;
- (void)notifyKerberosDelegateTGTDidComplete;
- (bool)performLoginForCurrentUser;
- (bool)platformSSOActive;
- (void)postAuthenticationNotification:(unsigned long long)arg1;
- (void)promptUserForRegistration;
- (id)registrationContext;
- (bool)registrationFailed;
- (id)registrationTokenForExtensionIdentifier:(id)arg1;
- (void)requestDidCompleteWithError:(id)arg1;
- (void)requestUserAuthenticationWithUserInfo:(id)arg1;
- (void)requestUserAuthenticationWithWindow:(id)arg1 completion:(id /* block */)arg2;
- (void)setAuthenticationProcess:(id)arg1;
- (void)setAuthenticationTimer:(id)arg1;
- (void)setConfigurationHost:(id)arg1;
- (void)setConfigurationManager:(id)arg1;
- (void)setDirectoryServices:(id)arg1;
- (void)setExtensionManager:(id)arg1;
- (void)setKerberosDelegate:(id)arg1;
- (void)setKerberosHelper:(id)arg1;
- (void)setKeyBag:(id)arg1;
- (void)setLastAuthenticationAttempt:(id)arg1;
- (void)setLocalAccount:(bool)arg1;
- (void)setNotificationCenter:(id)arg1;
- (void)setPlatformSSOActive:(bool)arg1;
- (void)setRegistrationContext:(id)arg1;
- (void)setRegistrationFailed:(bool)arg1;
- (void)setUserName:(id)arg1;
- (void)setUserNotificationCenter:(id)arg1;
- (void)setupNotificationCategories;
- (void)setupTimerForAuthentication;
- (int)ssoMethodToUse:(id)arg1 profile:(id)arg2;
- (id)userName;
- (id)userNotificationCenter;
- (void)userNotificationCenter:(id)arg1 didReceiveNotificationResponse:(id)arg2 withCompletionHandler:(id /* block */)arg3;
- (void)windowDidClose;

@end
