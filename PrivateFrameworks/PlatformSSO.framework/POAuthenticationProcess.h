/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PlatformSSO.framework/PlatformSSO
 */

@interface POAuthenticationProcess : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate> {
    bool  _waitForConnectivity;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (nonatomic) bool waitForConnectivity;

- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)URLSession:(id)arg1 taskIsWaitingForConnectivity:(id)arg2;
- (id)createAuthenticationContextUsingLoginConfiguration:(id)arg1 deviceConfiguration:(id)arg2;
- (id)createEmbeddedAssertionWithContext:(id)arg1 loginConfiguration:(id)arg2 userName:(id)arg3 signingKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)arg4;
- (id)createLoginJWTWithContext:(id)arg1 loginConfiguration:(id)arg2 userConfiguration:(id)arg3 userName:(id)arg4 password:(id)arg5 embeddedAssertion:(id)arg6;
- (id)createLoginRequestWithContext:(id)arg1 loginConfiguration:(id)arg2 jwt:(id)arg3;
- (id)createNonceRequestWithContext:(id)arg1 loginConfiguration:(id)arg2;
- (id)createPartyVInfoWithContext:(id)arg1 apvKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)arg2;
- (id)createTestMessagesForLoginConfiguration:(id)arg1 certificate:(struct __SecCertificate { }*)arg2;
- (struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)findKey:(id)arg1 inJWKSData:(id)arg2;
- (id)init;
- (void)performLoginRequestWithContext:(id)arg1 loginConfiguration:(id)arg2 request:(id)arg3 completion:(id /* block */)arg4;
- (void)performLoginWithContext:(id)arg1 loginConfiguration:(id)arg2 deviceConfiguration:(id)arg3 jwksStorageProvider:(id)arg4 loginJWT:(id)arg5 completion:(id /* block */)arg6;
- (void)performNonceRequestWithContext:(id)arg1 loginConfiguration:(id)arg2 request:(id)arg3 completion:(id /* block */)arg4;
- (void)performPasswordLoginUsingLoginConfiguration:(id)arg1 deviceConfiguration:(id)arg2 userConfiguration:(id)arg3 jwksStorageProvider:(id)arg4 userName:(id)arg5 password:(id)arg6 completion:(id /* block */)arg7;
- (void)performSEPKeyLoginUsingLoginConfiguration:(id)arg1 deviceConfiguration:(id)arg2 userConfiguration:(id)arg3 jwksStorageProvider:(id)arg4 userName:(id)arg5 signingKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)arg6 certificate:(struct __SecCertificate { }*)arg7 completion:(id /* block */)arg8;
- (void)performTokenRefreshUsingLoginConfiguration:(id)arg1 deviceConfiguration:(id)arg2 userConfiguration:(id)arg3 refreshToken:(id)arg4 signingKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)arg5 completion:(id /* block */)arg6;
- (void)retrieveSigningKeyWithContext:(id)arg1 loginConfiguration:(id)arg2 jwksStorageProvider:(id)arg3 keyId:(id)arg4 completion:(id /* block */)arg5;
- (void)setWaitForConnectivity:(bool)arg1;
- (bool)validateIdToken:(id)arg1 context:(id)arg2 loginConfiguration:(id)arg3 key:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)arg4;
- (bool)validatePartyUInfo:(id)arg1 context:(id)arg2;
- (bool)validatePartyVInfo:(id)arg1 context:(id)arg2 publicKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; struct __SecKeyDescriptor {} *x2; void *x3; }*)arg3;
- (bool)waitForConnectivity;

@end
