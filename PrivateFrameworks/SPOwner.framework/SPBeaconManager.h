/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SPOwner.framework/SPOwner
 */

@interface SPBeaconManager : NSObject <SPBLEStateMonitorDelegate, SPMonitorsWrapperDelegate> {
    bool  _alreadyPoisonedLocalBeacon;
    bool  _beaconFromNVRAM;
    id /* block */  _beaconingKeyChangedBlockWithCompletion;
    SPBLEStateMonitor * _bleMonitor;
    long long  _cachedLocalBeaconManagerState;
    bool  _currentBeaconingState;
    unsigned char  _currentStatus;
    bool  _forceBeaconingOff;
    bool  _initialStateChangeSent;
    SPMonitorsWrapper * _monitorWrapper;
    id /* block */  _nearbyTokensChangedBlockWithCompletion;
    NSObject<OS_dispatch_source> * _periodicActionDispatchTimer;
    FMXPCActivity * _periodicActionXpcActivity;
    double  _periodicActionXpcActivityInterval;
    <SPBeaconManagerXPCProtocol> * _proxy;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _schedulePeriodicActionXpcActivity;
    NSDictionary * _selfBeaconingConfigurations;
    NSData * _selfBeaconingDerivedSharedSecretKey;
    unsigned long long  _selfBeaconingIndex;
    NSDate * _selfBeaconingPairDate;
    NSData * _selfBeaconingPublicKey;
    NSUUID * _selfBeaconingUUID;
    FMXPCServiceDescription * _serviceDescription;
    FMXPCSession * _session;
    id /* block */  _stateChangedBlockWithCompletion;
    id /* block */  _statusChangedBlockWithCompletion;
    <SPBeaconManagerXPCProtocol> * _userAgentProxy;
}

@property (nonatomic) bool alreadyPoisonedLocalBeacon;
@property (nonatomic) bool beaconFromNVRAM;
@property (nonatomic, copy) id /* block */ beaconingKeyChangedBlockWithCompletion;
@property (nonatomic, retain) SPBLEStateMonitor *bleMonitor;
@property (nonatomic) long long cachedLocalBeaconManagerState;
@property (nonatomic) bool currentBeaconingState;
@property (nonatomic) unsigned char currentStatus;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool forceBeaconingOff;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool initialStateChangeSent;
@property (nonatomic, retain) SPMonitorsWrapper *monitorWrapper;
@property (nonatomic, copy) id /* block */ nearbyTokensChangedBlockWithCompletion;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *periodicActionDispatchTimer;
@property (nonatomic, retain) FMXPCActivity *periodicActionXpcActivity;
@property (nonatomic) double periodicActionXpcActivityInterval;
@property (nonatomic, retain) <SPBeaconManagerXPCProtocol> *proxy;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic) bool schedulePeriodicActionXpcActivity;
@property (nonatomic, copy) NSDictionary *selfBeaconingConfigurations;
@property (nonatomic, copy) NSData *selfBeaconingDerivedSharedSecretKey;
@property (nonatomic) unsigned long long selfBeaconingIndex;
@property (nonatomic, copy) NSDate *selfBeaconingPairDate;
@property (nonatomic, copy) NSData *selfBeaconingPublicKey;
@property (nonatomic, copy) NSUUID *selfBeaconingUUID;
@property (nonatomic, retain) FMXPCServiceDescription *serviceDescription;
@property (nonatomic, retain) FMXPCSession *session;
@property (nonatomic, copy) id /* block */ stateChangedBlockWithCompletion;
@property (nonatomic, copy) id /* block */ statusChangedBlockWithCompletion;
@property (readonly) Class superclass;
@property (nonatomic, retain) <SPBeaconManagerXPCProtocol> *userAgentProxy;

+ (void)afterFirstUnlock:(id /* block */)arg1;
+ (id)scheduleDateInterval:(id)arg1;

- (void).cxx_destruct;
- (void)_invalidate;
- (void)allBeaconingKeysForUUID:(id)arg1 dateInterval:(id)arg2 forceGenerate:(bool)arg3 completion:(id /* block */)arg4;
- (void)allBeaconsOfType:(id)arg1 completion:(id /* block */)arg2;
- (void)allBeaconsOfTypes:(id)arg1 completion:(id /* block */)arg2;
- (void)allBeaconsOfTypes:(id)arg1 includeDupes:(bool)arg2 includeHidden:(bool)arg3 completion:(id /* block */)arg4;
- (void)allBeaconsWithCompletion:(id /* block */)arg1;
- (void)allDuriansWithCompletion:(id /* block */)arg1;
- (bool)alreadyPoisonedLocalBeacon;
- (void)beaconForUUID:(id)arg1 completion:(id /* block */)arg2;
- (bool)beaconFromNVRAM;
- (id /* block */)beaconingKeyChangedBlockWithCompletion;
- (void)beaconingKeysForUUID:(id)arg1 dateInterval:(id)arg2 completion:(id /* block */)arg3;
- (void)beaconingStateChanged:(long long)arg1;
- (void)beaconingStateChangedNotification:(id)arg1;
- (void)beaconsChanged:(id)arg1;
- (id)bleMonitor;
- (void)bleMonitor:(id)arg1 didChangeState:(unsigned long long)arg2;
- (unsigned long long)bucketWithBaseTime:(id)arg1 date:(id)arg2;
- (long long)cachedLocalBeaconManagerState;
- (void)connectedToBeacon:(id)arg1 withIndex:(unsigned long long)arg2;
- (void)connectedToBeacon:(id)arg1 withIndex:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)connectionTokensForBeaconUUID:(id)arg1 completion:(id /* block */)arg2;
- (void)connectionTokensForBeaconUUID:(id)arg1 criteria:(id)arg2 completion:(id /* block */)arg3;
- (void)connectionTokensForBeaconUUID:(id)arg1 dateInterval:(id)arg2 completion:(id /* block */)arg3;
- (void)createDuplicateBeaconsForBeacon:(id)arg1 skipGroupIdentifier:(bool)arg2 count:(long long)arg3 completion:(id /* block */)arg4;
- (void)createKeyReconcilerWithCompletion:(id /* block */)arg1;
- (void)createOwnedDeviceKeyRecordForUUID:(id)arg1 completion:(id /* block */)arg2;
- (bool)currentBeaconingState;
- (unsigned char)currentStatus;
- (id)dateIntervalForIndex:(unsigned long long)arg1 baseDate:(id)arg2;
- (void)dealloc;
- (void)fetchFirmwareVersionForBeacon:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchKeyMapFileDescriptorForBeacon:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchUserStatsForBeacon:(id)arg1 completion:(id /* block */)arg2;
- (bool)forceBeaconingOff;
- (void)generateBeaconingKeysOfType:(long long)arg1 now:(id)arg2 withCompletion:(id /* block */)arg3;
- (id)generateOfflineAdvertisingKeysForReason:(long long)arg1 now:(id)arg2;
- (void)handlerForActivity:(id)arg1 state:(long long)arg2;
- (id)init;
- (bool)initialStateChangeSent;
- (void)invalidate;
- (bool)isBeaconing;
- (void)isLPEMModeSupported:(id /* block */)arg1;
- (void)localActivationLockInfoChanged;
- (id)monitorWrapper;
- (id /* block */)nearbyTokensChangedBlockWithCompletion;
- (void)notificationBeaconForSubscriptionId:(id)arg1 completion:(id /* block */)arg2;
- (void)notifyBeaconingKeysChangedBlockWithCompletion:(id /* block */)arg1;
- (void)notifyNearbyTokensChangedBlockWithCompletion:(id /* block */)arg1;
- (void)notifyStateChange:(bool)arg1;
- (void)notifyStatusChange:(unsigned char)arg1;
- (void)ownedDeviceKeyRecordsForUUID:(id)arg1 completion:(id /* block */)arg2;
- (id)periodicActionDispatchTimer;
- (void)periodicActionWithCompletion:(id /* block */)arg1;
- (id)periodicActionXpcActivity;
- (double)periodicActionXpcActivityInterval;
- (void)postedLocalNotifyWhenFoundNotificationForUUID:(id)arg1 completion:(id /* block */)arg2;
- (id)proxy;
- (void)purgeOwnedDeviceKeyRecordsForUUID:(id)arg1 completion:(id /* block */)arg2;
- (id)queue;
- (id)rawNVRAMData;
- (void)refreshBeaconingState;
- (id)remoteInterface;
- (void)removeDuplicateBeaconsWithCompletion:(id /* block */)arg1;
- (void)repairDataStore:(id /* block */)arg1;
- (void)roleCategoriesWithCompletion:(id /* block */)arg1;
- (bool)schedulePeriodicActionXpcActivity;
- (id)selfBeaconingConfigurations;
- (id)selfBeaconingDerivedSharedSecretKey;
- (unsigned long long)selfBeaconingIndex;
- (id)selfBeaconingPairDate;
- (id)selfBeaconingPublicKey;
- (id)selfBeaconingUUID;
- (id)serviceDescription;
- (id)session;
- (void)setAlignmentUncertainty:(double)arg1 atIndex:(unsigned long long)arg2 date:(id)arg3 forBeacon:(id)arg4 completion:(id /* block */)arg5;
- (void)setAlreadyPoisonedLocalBeacon:(bool)arg1;
- (void)setBeaconFromNVRAM:(bool)arg1;
- (void)setBeaconingKeyChangedBlockWithCompletion:(id /* block */)arg1;
- (void)setBleMonitor:(id)arg1;
- (void)setCachedLocalBeaconManagerState:(long long)arg1;
- (void)setCurrentBeaconingState:(bool)arg1;
- (void)setCurrentStatus:(unsigned char)arg1;
- (void)setCurrentWildKeyIndex:(long long)arg1 forBeacon:(id)arg2 completion:(id /* block */)arg3;
- (void)setForceBeaconingOff:(bool)arg1;
- (void)setInitialStateChangeSent:(bool)arg1;
- (void)setKeyRollInterval:(unsigned long long)arg1 forBeacon:(id)arg2 completion:(id /* block */)arg3;
- (void)setMonitorWrapper:(id)arg1;
- (void)setNearbyTokensChangedBlockWithCompletion:(id /* block */)arg1;
- (void)setPeriodicActionDispatchTimer:(id)arg1;
- (void)setPeriodicActionDispatchTimerWithInterval:(double)arg1;
- (void)setPeriodicActionXpcActivity:(id)arg1;
- (void)setPeriodicActionXpcActivityInterval:(double)arg1;
- (void)setProxy:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setRole:(long long)arg1 forBeacon:(id)arg2 completion:(id /* block */)arg3;
- (void)setSchedulePeriodicActionXpcActivity:(bool)arg1;
- (void)setSelfBeaconingConfigurations:(id)arg1;
- (void)setSelfBeaconingDerivedSharedSecretKey:(id)arg1;
- (void)setSelfBeaconingIndex:(unsigned long long)arg1;
- (void)setSelfBeaconingPairDate:(id)arg1;
- (void)setSelfBeaconingPublicKey:(id)arg1;
- (void)setSelfBeaconingUUID:(id)arg1;
- (void)setServiceDescription:(id)arg1;
- (void)setSession:(id)arg1;
- (void)setStateChangedBlockWithCompletion:(id /* block */)arg1;
- (void)setStatusChangedBlockWithCompletion:(id /* block */)arg1;
- (void)setSuppressLPEMBeaconing:(bool)arg1 completion:(id /* block */)arg2;
- (void)setUserAgentProxy:(id)arg1;
- (void)setUserHasAcknowledgedFindMy:(bool)arg1 completion:(id /* block */)arg2;
- (void)setWildKeyBase:(unsigned long long)arg1 interval:(unsigned long long)arg2 fallback:(unsigned long long)arg3 forBeacon:(id)arg4 completion:(id /* block */)arg5;
- (void)start;
- (id /* block */)stateChangedBlockWithCompletion;
- (void)stateDidChange:(bool)arg1 powerState:(unsigned long long)arg2;
- (id /* block */)statusChangedBlockWithCompletion;
- (double)timeIntervalToNextFireDateFromDate:(id)arg1;
- (void)timerFired;
- (void)unacceptedBeaconsWithCompletion:(id /* block */)arg1;
- (void)updateBeacon:(id)arg1 updates:(id)arg2 completion:(id /* block */)arg3;
- (void)updateObfuscatedIdentifierWithCompletion:(id /* block */)arg1;
- (void)updateStateFromNVRAM;
- (id)userAgentProxy;
- (void)userHasAcknowledgeFindMyWithCompletion:(id /* block */)arg1;
- (id)xpcActivityCriteria:(id)arg1;

@end
