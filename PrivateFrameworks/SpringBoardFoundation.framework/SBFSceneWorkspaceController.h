/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation
 */

@interface SBFSceneWorkspaceController : NSObject <BSInvalidatable, SBFSceneWorkspaceControllerDelegate> {
    NSMutableSet * _allowedClientProcessIdentities;
    <SBFSceneWorkspaceControllerDelegate> * _delegate;
    FBSceneWorkspace * _sceneWorkspace;
    NSMutableSet * _scenes;
    NSMutableSet * _scenesActivatedUponClientConnection;
    NSMutableSet * _scenesKeptActiveWhileForeground;
}

@property (nonatomic, retain) NSMutableSet *allowedClientProcessIdentities;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBFSceneWorkspaceControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) FBSceneWorkspace *sceneWorkspace;
@property (nonatomic, readonly, copy) NSString *sceneWorkspaceIdentifier;
@property (nonatomic, retain) NSMutableSet *scenes;
@property (nonatomic, retain) NSMutableSet *scenesActivatedUponClientConnection;
@property (nonatomic, retain) NSMutableSet *scenesKeptActiveWhileForeground;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)activateAllScenesIfAtLeastOneIsActive;
- (id)allowedClientProcessIdentities;
- (void)createSceneForProcessIdentity:(id)arg1 withOptions:(id)arg2 completion:(id /* block */)arg3;
- (id)delegate;
- (bool)enumerateScenesWithBlock:(id /* block */)arg1;
- (id)initWithIdentifier:(id)arg1 delegate:(id)arg2;
- (void)invalidate;
- (void)sceneContentStateDidChange:(id)arg1;
- (void)sceneDidActivate:(id)arg1;
- (void)sceneDidDeactivate:(id)arg1 withError:(id)arg2;
- (id)sceneFromIdentityToken:(id)arg1;
- (id)sceneFromIdentityTokenStringRepresentation:(id)arg1;
- (id)sceneWorkspace;
- (id)sceneWorkspaceIdentifier;
- (id)scenes;
- (id)scenesActivatedUponClientConnection;
- (id)scenesKeptActiveWhileForeground;
- (void)setAllowedClientProcessIdentities:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setScene:(id)arg1 shouldActivateUponClientConnection:(bool)arg2;
- (void)setScene:(id)arg1 shouldBeKeptActiveWhileForeground:(bool)arg2;
- (void)setSceneWorkspace:(id)arg1;
- (void)setScenes:(id)arg1;
- (void)setScenesActivatedUponClientConnection:(id)arg1;
- (void)setScenesKeptActiveWhileForeground:(id)arg1;
- (void)workspace:(id)arg1 clientDidConnectWithHandshake:(id)arg2;
- (void)workspace:(id)arg1 didAddScene:(id)arg2;
- (void)workspace:(id)arg1 willRemoveScene:(id)arg2;

@end
