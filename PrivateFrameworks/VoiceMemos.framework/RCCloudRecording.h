/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
 */

@interface RCCloudRecording : NSManagedObject <RCMutableRecording> {
    AVAsset * _avAsset;
    bool  _isEncrypted;
    bool  _isEncryptedIsSet;
}

@property (nonatomic, readonly, copy) NSURL *URIRepresentation;
@property (nonatomic, retain) NSData *audioDigest;
@property (nonatomic, retain) <_NSFileBackedFuture> *audioFuture;
@property (nonatomic, retain) AVAsset *avAsset;
@property (nonatomic, copy) NSDate *creationDate;
@property (nonatomic, copy) NSString *customLabel;
@property (nonatomic, copy) NSString *customLabelForSorting;
@property (nonatomic, retain) NSDate *date;
@property (nonatomic, retain) NSDate *dateForSorting;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, copy) NSDate *deletionDate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool downloading;
@property (nonatomic, copy) NSNumber *duration;
@property (nonatomic, retain) <_NSFileBackedFuture> *encryptedAudioFuture;
@property (nonatomic, copy) NSString *encryptedCustomLabel;
@property (nonatomic, retain) NSDate *encryptedDate;
@property (nonatomic, copy) NSNumber *encryptedDuration;
@property (nonatomic, copy) NSDate *encryptedEvictionDate;
@property (nonatomic, copy) NSNumber *encryptedSharedFlags;
@property (nonatomic, copy) NSString *encryptedUniqueID;
@property (nonatomic) bool enhanced;
@property (nonatomic, copy) NSDate *evictionDate;
@property (nonatomic) bool favorite;
@property (nonatomic) unsigned long long flags;
@property (nonatomic, readonly) <RCFolder> *folder;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isContentBeingModified;
@property (nonatomic, readonly) bool isEncrypted;
@property (nonatomic) double length;
@property (nonatomic, copy) NSNumber *localDuration;
@property (nonatomic, copy) CLLocation *location;
@property (nonatomic) bool manuallyRenamed;
@property (nonatomic) bool musicMemo;
@property (nonatomic, copy) NSString *path;
@property (nonatomic) bool pendingRestore;
@property (nonatomic) bool playable;
@property (nonatomic, readonly) NSNumber *purgeableAudioFileSize;
@property (nonatomic) bool recordedOnWatch;
@property (nonatomic, copy) NSNumber *sharedFlags;
@property (readonly) Class superclass;
@property (nonatomic, retain) <_NSFileBackedFuture> *syncedAudioFuture;
@property (nonatomic, copy) NSString *syncedCustomLabel;
@property (nonatomic, copy) NSDate *syncedDate;
@property (nonatomic) double syncedDuration;
@property (nonatomic, copy) NSDate *syncedEvictionDate;
@property (nonatomic) unsigned long long syncedSharedFlags;
@property (nonatomic, copy) NSString *syncedUniqueID;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, readonly, copy) NSString *titleDisallowingEmptyString;
@property (nonatomic, copy) NSString *uniqueID;
@property (nonatomic, readonly) bool uploaded;
@property (nonatomic, readonly, copy) NSURL *url;
@property (nonatomic, readonly, copy) NSString *userFolderUUID;
@property (nonatomic, copy) NSString *uuid;
@property (nonatomic) bool watchOS;

+ (bool)isRecordingPurgeable:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)savedRecordingURIForSearchableItemIdentifier:(id)arg1;
+ (id)searchableItemIdentifierForSavedRecordingURI:(id)arg1;
+ (bool)setPurgeable:(bool)arg1 recordingURL:(id)arg2 error:(id*)arg3;

- (void).cxx_destruct;
- (id)URIRepresentation;
- (id)_detailLabel;
- (id)_labelAllowingEmptyString:(bool)arg1;
- (void)_updateAudioFuture:(id)arg1;
- (void)_updateLocalDurationWithAssetDuration;
- (void)_validatePath;
- (id)avAsset;
- (void)awakeFromFetch;
- (id)copyResourcesForSharingIntoDirectory:(id)arg1;
- (void)copySharedFlagsFromOriginalRecording:(id)arg1;
- (id)creationDate;
- (id)deletionDate;
- (bool)downloading;
- (bool)enhanced;
- (bool)favorite;
- (id)initWithContext:(id)arg1 useEncryptedStore:(bool)arg2;
- (bool)isContentBeingModified;
- (bool)isEncrypted;
- (double)length;
- (id)location;
- (bool)manuallyRenamed;
- (void)migrateLocalProperties;
- (bool)musicMemo;
- (id)name;
- (id)path;
- (bool)pendingRestore;
- (bool)playable;
- (id)purgeAudioFileWithModel:(id)arg1 error:(id*)arg2;
- (id)purgeableAudioFileSize;
- (bool)recordedOnWatch;
- (id)searchableItem;
- (void)setAvAsset:(id)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setDeletionDate:(id)arg1;
- (void)setDownloading:(bool)arg1;
- (void)setEnhanced:(bool)arg1;
- (void)setFavorite:(bool)arg1;
- (void)setLength:(double)arg1;
- (void)setLocation:(id)arg1;
- (void)setManuallyRenamed:(bool)arg1;
- (void)setMusicMemo:(bool)arg1;
- (void)setName:(id)arg1;
- (void)setPath:(id)arg1;
- (void)setPendingRestore:(bool)arg1;
- (void)setPlayable:(bool)arg1;
- (void)setRecordedOnWatch:(bool)arg1;
- (void)setSyncedAudioFuture:(id)arg1;
- (void)setSyncedCustomLabel:(id)arg1;
- (void)setSyncedDate:(id)arg1;
- (void)setSyncedDuration:(double)arg1;
- (void)setSyncedEvictionDate:(id)arg1;
- (void)setSyncedSharedFlags:(unsigned long long)arg1;
- (void)setSyncedUniqueID:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setUuid:(id)arg1;
- (void)setWatchOS:(bool)arg1;
- (id)subjectForActivityType:(id)arg1;
- (id)syncedAudioFuture;
- (id)syncedCustomLabel;
- (id)syncedDate;
- (double)syncedDuration;
- (id)syncedEvictionDate;
- (unsigned long long)syncedSharedFlags;
- (id)syncedUniqueID;
- (void)synchronizeRecordingMetadata;
- (bool)synchronizeWithExistingAudioFuture:(id*)arg1;
- (id)title;
- (id)titleDisallowingEmptyString;
- (bool)uploaded;
- (id)url;
- (id)userFolderUUID;
- (id)uuid;
- (bool)validateForInsert:(id*)arg1;
- (bool)validateForUpdate:(id*)arg1;
- (bool)watchOS;
- (void)willSave;

@end
