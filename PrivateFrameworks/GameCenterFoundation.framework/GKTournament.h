/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation
 */

@interface GKTournament : NSObject <NSSecureCoding> {
    GKScore * _bestScore;
    NSObject<GKCustomTournamentDelegate> * _customTournamentDelegate;
    GKTournamentInternal * _internal;
    GKLeaderboard * _leaderboard;
    GKTournamentParticipant * _localParticipant;
    GKTournamentDefinition * _tournamentDefinition;
    GKPlayer * _winningPlayer;
}

@property (nonatomic, retain) GKScore *bestScore;
@property (nonatomic, retain) NSObject<GKCustomTournamentDelegate> *customTournamentDelegate;
@property (nonatomic, readonly) double duration;
@property (retain) GKTournamentInternal *internal;
@property (nonatomic, retain) NSURL *inviteURLForMessages;
@property (nonatomic, retain) GKLeaderboard *leaderboard;
@property (nonatomic, retain) GKTournamentParticipant *localParticipant;
@property (nonatomic, readonly) long long maxPlayers;
@property (nonatomic, readonly) long long maxReplays;
@property (nonatomic, readonly) long long minPlayers;
@property (nonatomic, readonly) NSDate *nextTournamentBeginDate;
@property (nonatomic, readonly) NSString *nextTournamentID;
@property (nonatomic, readonly) long long playerCount;
@property (nonatomic, readonly) long long randomSeed;
@property (nonatomic, readonly) NSDate *registrationBeginDate;
@property (nonatomic, readonly) NSDate *registrationEndDate;
@property (nonatomic, readonly) bool registrationOpen;
@property (nonatomic, readonly) long long scoringMethod;
@property (nonatomic, readonly) NSDate *tournamentBeginDate;
@property (nonatomic, retain) GKTournamentDefinition *tournamentDefinition;
@property (nonatomic, readonly) NSDate *tournamentEndDate;
@property (nonatomic, readonly) long long tournamentError;
@property (nonatomic, readonly) NSString *tournamentID;
@property (nonatomic, readonly) NSString *tournamentName;
@property (nonatomic, readonly) long long tournamentState;
@property (nonatomic, retain) GKPlayer *winningPlayer;

+ (id)defaultCustomTournamentForTournamentDefinition:(id)arg1;
+ (void)loadTournamentWithID:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)lookForAcceptedCustomTournament;
+ (void)notifyPlayerForTournament:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)resetTournamentDataForTournamentsWithTournamentDefinitionIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)acceptInvitationWithCompletionHandler:(id /* block */)arg1;
- (void)addCreator:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)addInvitees:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)beginPlayWithCompletionHandler:(id /* block */)arg1;
- (id)bestScore;
- (id)customTournamentDelegate;
- (void)declineInvitationWithCompletionHandler:(id /* block */)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)getFriendCountForGroup:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)getLocalParticipantWithCompletionHandler:(id /* block */)arg1;
- (void)getShareURLWithCompletionHandler:(id /* block */)arg1;
- (void)getTotalPlayerCountForGroup:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)getTournamentStateWithCompletionHandler:(id /* block */)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithInternalRepresentation:(id)arg1;
- (id)internal;
- (id)leaderboard;
- (void)loadParticipantsWithRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)loadScoresWithScope:(long long)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 completionHandler:(id /* block */)arg3;
- (id)localParticipant;
- (void)registerPlayerInGroup:(long long)arg1 completionHandler:(id /* block */)arg2;
- (bool)registrationOpen;
- (void)removeCreator:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removeInvitees:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)reportProgressScore:(long long)arg1 withTryToken:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)reportScore:(long long)arg1 withTryToken:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)resignFromTournamentWithCompletionHandler:(id /* block */)arg1;
- (void)resumePlayWithTryToken:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)setBestScore:(id)arg1;
- (void)setCustomTournamentDelegate:(id)arg1;
- (void)setInternal:(id)arg1;
- (void)setLeaderboard:(id)arg1;
- (void)setLocalParticipant:(id)arg1;
- (void)setTournamentDefinition:(id)arg1;
- (void)setWinningPlayer:(id)arg1;
- (id)tournamentDefinition;
- (void)updateWithCompletionHandler:(id /* block */)arg1;
- (void)verifyPlayerForMatchmaking:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)winningPlayer;

@end
