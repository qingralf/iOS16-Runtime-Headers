/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation
 */

@interface GKPreferences : NSObject {
    NSDictionary * _overrideValues;
    bool  _shouldSynchronizeOnNextRead;
    bool  _webKitInspectElementEnabled;
}

@property (nonatomic, readonly) bool HTTPShouldUsePipelining;
@property (nonatomic) bool _shouldSynchronizeOnNextRead;
@property (nonatomic) bool accessPointIsOnAutomatically;
@property (nonatomic) long long accessPointLocation;
@property (nonatomic) bool accessPointShowHighlights;
@property (getter=isAccountModificationRestricted, nonatomic, readonly) bool accountModificationRestricted;
@property (nonatomic) bool activityFeedTestFeedOnly;
@property (getter=isAddingFriendsRestricted, nonatomic, readonly) bool addingFriendsRestricted;
@property (getter=isAppInstallationRestricted, nonatomic, readonly) bool appInstallationRestricted;
@property (nonatomic) bool arcadeDashboardSection;
@property (nonatomic) double cacheTTLOverride;
@property (getter=isClipGestureEnabled, nonatomic) bool clipGestureEnabled;
@property (getter=isComprehensiveLoggingEnabled, nonatomic) bool comprehensiveLoggingEnabled;
@property (nonatomic) unsigned long long coreRecentMultiplier;
@property (nonatomic) unsigned long long coreRecentUpperLimit;
@property (getter=isCustomizedCommunicationRestricted, nonatomic, readonly) bool customizedCommunicationRestricted;
@property (nonatomic) bool dashboardDeepLinkEnabled;
@property (nonatomic) double debugRequestTimeout;
@property (nonatomic, readonly) bool enhancedWelcomeBanner;
@property (nonatomic) bool enterSandbox;
@property (nonatomic) long long environment;
@property (nonatomic, readonly) unsigned long long exchangeDataDefaultMaximumSize;
@property (nonatomic) unsigned long long exchangeDataMaximumSize;
@property (nonatomic, readonly) unsigned long long exchangeDefaultMaxInitiatedExchangesPerPlayer;
@property (nonatomic) unsigned long long exchangeMaxInitiatedExchangesPerPlayer;
@property (nonatomic) long long fakeFriendRequestCount;
@property (nonatomic) bool forceDefaultContactsIntegrationConsent;
@property (nonatomic) bool forceDefaultNickname;
@property (nonatomic) bool forceDefaultPrivacy;
@property (nonatomic) bool forcePrivacyNotice;
@property (nonatomic) bool forceRelay;
@property (nonatomic) bool forceUnderage;
@property (getter=isFriendRequestsRestricted, nonatomic, readonly) bool friendRequestsRestricted;
@property (getter=isFriendsSharingRestricted, nonatomic, readonly) bool friendsSharingRestricted;
@property (getter=isGameCenterRestricted, nonatomic, readonly) bool gameCenterRestricted;
@property (nonatomic) double garbageCollectionInterval;
@property (nonatomic) bool inboxContactsOnly;
@property (nonatomic) unsigned int logFilter;
@property (nonatomic) unsigned long long loginDisableThreshold;
@property (nonatomic, readonly) unsigned long long maxDefaultGameStateSizeTurnBased;
@property (nonatomic, readonly) unsigned long long maxDefaultPlayersHosted;
@property (nonatomic, readonly) unsigned long long maxDefaultPlayersP2P;
@property (nonatomic, readonly) unsigned long long maxDefaultPlayersTurnBased;
@property (nonatomic) unsigned long long maxGameStateSizeTurnBased;
@property (nonatomic) unsigned long long maxPlayersHosted;
@property (nonatomic) unsigned long long maxPlayersP2P;
@property (nonatomic) unsigned long long maxPlayersTurnBased;
@property (nonatomic) unsigned long long maxRecentPlayersCount;
@property (nonatomic) double maxRecentPlayersTime;
@property (nonatomic) unsigned long long mescalSetupRetries;
@property (nonatomic) double minimumCacheTTL;
@property (nonatomic, readonly) unsigned long long multiplayerAllowedPlayerType;
@property (getter=isMultiplayerGamingRestricted, nonatomic, readonly) bool multiplayerGamingRestricted;
@property (nonatomic, readonly) bool multiplayerShouldAlwaysReloadCollectionView;
@property (getter=isNearbyMultiplayerRestricted, nonatomic, readonly) bool nearbyMultiplayerRestricted;
@property (nonatomic) long long networkManagerStateOverride;
@property (nonatomic) NSString *networkManagerUserOverride;
@property (nonatomic) bool notificationAlertsEnabled;
@property (nonatomic) bool notificationBadgesEnabled;
@property (getter=isNotificationCenterEnabled, nonatomic) bool notificationCenterEnabled;
@property (nonatomic) bool notificationSoundsEnabled;
@property (nonatomic) unsigned long long operationRetryCount;
@property (nonatomic) double operationRetryDelay;
@property (nonatomic) double operationTimeout;
@property (nonatomic, retain) NSDictionary *overrideValues;
@property (nonatomic) long long pipeliningSetting;
@property (nonatomic) bool preemptiveRelay;
@property (nonatomic) <GKPreferencesDelegate> *preferencesDelegate;
@property (getter=isProfileModificationRestricted, nonatomic, readonly) bool profileModificationRestricted;
@property (getter=isProfilePrivacyModificationRestricted, nonatomic, readonly) bool profilePrivacyModificationRestricted;
@property (nonatomic) long long pushEnvironment;
@property (nonatomic) unsigned long long recentNumberOfPlayers;
@property (nonatomic, retain) NSDictionary *recentNumberOfPlayersPerGame;
@property (nonatomic) bool restrictToAutomatch;
@property (nonatomic) bool restrictToTournamentPlayers;
@property (getter=isSharingRestricted, nonatomic, readonly) bool sharingRestricted;
@property (nonatomic) bool shouldAddPlayerInfoToAddressBook;
@property (nonatomic, readonly) bool shouldAllowCustomCommunication;
@property (nonatomic) bool shouldAllowNearbyMultiplayer;
@property (nonatomic, readonly) bool shouldAllowSharing;
@property (nonatomic) bool shouldAnnotateImageUsage;
@property (nonatomic, readonly) bool shouldDisallowInvitesFromStrangers;
@property (nonatomic) bool shouldLinkPlayerToFacebook;
@property (nonatomic) bool shouldLinkPlayerToICloud;
@property (nonatomic) bool shouldLinkPlayerToTwitter;
@property (nonatomic) bool shouldTrackAtlasImageUsage;
@property (nonatomic) bool shouldUseTestIcons;
@property (nonatomic, retain) NSString *storeBagURL;
@property (getter=isStoreDemoModeEnabled, nonatomic, readonly) bool storeDemoModeEnabled;
@property (nonatomic) bool supportsChallenges;
@property (nonatomic) double terminationInterval;
@property (nonatomic, copy) NSString *testRunID;
@property (nonatomic) long long tournamentAutoDuration;
@property (nonatomic) long long tournamentCreationMethod;
@property (nonatomic) long long tournamentCustomDuration;
@property (nonatomic) long long tournamentCustomMaxPlayers;
@property (nonatomic) long long tournamentCustomMaxReplays;
@property (nonatomic) long long tournamentCustomMinPlayers;
@property (nonatomic) bool tournamentDemoModeEnabled;
@property (nonatomic) long long tournamentDuration;
@property (nonatomic, retain) NSDate *tournamentEndDate;
@property (nonatomic) long long tournamentMaxPlayers;
@property (nonatomic) long long tournamentMaxReplays;
@property (nonatomic) long long tournamentMaxSimulatedFriends;
@property (nonatomic) long long tournamentMaxSimulatedPlayers;
@property (nonatomic) long long tournamentMinPlayers;
@property (nonatomic) long long tournamentParticipantState;
@property (nonatomic) long long tournamentPlayers;
@property (nonatomic) long long tournamentReplays;
@property (nonatomic) long long tournamentServer;
@property (nonatomic, retain) NSDate *tournamentStartDate;
@property (nonatomic) long long tournamentState;
@property (nonatomic) long long tournamentUIAppearanceStyle;
@property (nonatomic) bool tournamentsDebuggingEnabled;
@property (nonatomic) bool useInternalHeader;
@property (nonatomic) bool useSharePlayToExchangeData;
@property (nonatomic) bool useTestProtocols;
@property (nonatomic) bool verboseLogging;
@property (getter=isWebKitInspectElementEnabled, nonatomic) bool webKitInspectElementEnabled;

// Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation

+ (id)displayNameForEnvironment:(long long)arg1;
+ (id)hostNameForEnvironment:(long long)arg1;
+ (id)shared;

- (void).cxx_destruct;
- (bool)HTTPShouldUsePipelining;
- (void)_didWriteKey:(id)arg1;
- (bool)_shouldSynchronizeOnNextRead;
- (bool)accessPointIsOnAutomatically;
- (long long)accessPointLocation;
- (bool)accessPointShowHighlights;
- (bool)activityFeedTestFeedOnly;
- (void)applicationWillEnterBackground:(id)arg1;
- (bool)arcadeDashboardSection;
- (bool)booleanValueForKey:(id)arg1;
- (bool)booleanValueForKey:(id)arg1 defaultValue:(bool)arg2;
- (double)cacheTTLOverride;
- (unsigned long long)coreRecentMultiplier;
- (unsigned long long)coreRecentUpperLimit;
- (bool)dashboardDeepLinkEnabled;
- (double)debugRequestTimeout;
- (id)dictionaryValueForKey:(id)arg1;
- (bool)enhancedWelcomeBanner;
- (bool)enterSandbox;
- (long long)environment;
- (unsigned long long)exchangeDataDefaultMaximumSize;
- (unsigned long long)exchangeDataMaximumSize;
- (unsigned long long)exchangeDefaultMaxInitiatedExchangesPerPlayer;
- (unsigned long long)exchangeMaxInitiatedExchangesPerPlayer;
- (long long)fakeFriendRequestCount;
- (bool)forceDefaultContactsIntegrationConsent;
- (bool)forceDefaultNickname;
- (bool)forceDefaultPrivacy;
- (bool)forcePrivacyNotice;
- (bool)forceRelay;
- (bool)forceUnderage;
- (double)garbageCollectionInterval;
- (void)getMultiplayerAllowedPlayerTypeWithHandler:(id /* block */)arg1;
- (bool)inboxContactsOnly;
- (id)init;
- (id)initWithUIKitNotifications;
- (id)initWithoutUIKitNotifications;
- (long long)integerValueForKey:(id)arg1 defaultValue:(long long)arg2;
- (void)invalidate;
- (bool)isAccountModificationRestricted;
- (bool)isAddingFriendsRestricted;
- (bool)isAppInstallationRestricted;
- (bool)isClipGestureEnabled;
- (bool)isComprehensiveLoggingEnabled;
- (bool)isCustomizedCommunicationRestricted;
- (bool)isFriendRequestsRestricted;
- (bool)isFriendsSharingRestricted;
- (bool)isGameCenterRestricted;
- (bool)isInternalBuild;
- (bool)isMultiplayerGamingRestricted;
- (bool)isNearbyMultiplayerRestricted;
- (bool)isNotificationCenterEnabled;
- (bool)isProfileModificationRestricted;
- (bool)isProfilePrivacyModificationRestricted;
- (bool)isSharingRestricted;
- (bool)isStoreDemoModeEnabled;
- (bool)isWebKitInspectElementEnabled;
- (unsigned int)logFilter;
- (unsigned long long)loginDisableThreshold;
- (unsigned long long)maxDefaultGameStateSizeTurnBased;
- (unsigned long long)maxDefaultPlayersHosted;
- (unsigned long long)maxDefaultPlayersP2P;
- (unsigned long long)maxDefaultPlayersTurnBased;
- (unsigned long long)maxGameStateSizeTurnBased;
- (unsigned long long)maxPlayersHosted;
- (unsigned long long)maxPlayersP2P;
- (unsigned long long)maxPlayersTurnBased;
- (unsigned long long)maxRecentPlayersCount;
- (double)maxRecentPlayersTime;
- (unsigned long long)mescalSetupRetries;
- (double)minimumCacheTTL;
- (unsigned long long)multiplayerAllowedPlayerType;
- (bool)multiplayerShouldAlwaysReloadCollectionView;
- (long long)networkManagerStateOverride;
- (id)networkManagerUserOverride;
- (bool)notificationAlertsEnabled;
- (bool)notificationBadgesEnabled;
- (bool)notificationSoundsEnabled;
- (unsigned long long)operationRetryCount;
- (double)operationRetryDelay;
- (double)operationTimeout;
- (id)overrideValueForKey:(id)arg1;
- (id)overrideValues;
- (long long)pipeliningSetting;
- (bool)preemptiveRelay;
- (id)preferencesDelegate;
- (id)preferencesValueForKey:(id)arg1;
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;
- (long long)pushEnvironment;
- (unsigned long long)recentNumberOfPlayers;
- (unsigned long long)recentNumberOfPlayersForBundleID:(id)arg1;
- (id)recentNumberOfPlayersPerGame;
- (void)removeOverrideForKey:(id)arg1;
- (bool)restrictToAutomatch;
- (bool)restrictToTournamentPlayers;
- (bool)restrictionEnabledForKey:(id)arg1;
- (void)setAccessPointIsOnAutomatically:(bool)arg1;
- (void)setAccessPointLocation:(long long)arg1;
- (void)setAccessPointShowHighlights:(bool)arg1;
- (void)setActivityFeedTestFeedOnly:(bool)arg1;
- (void)setArcadeDashboardSection:(bool)arg1;
- (void)setBooleanValue:(bool)arg1 forKey:(id)arg2;
- (void)setCacheTTLOverride:(double)arg1;
- (void)setClipGestureEnabled:(bool)arg1;
- (void)setComprehensiveLoggingEnabled:(bool)arg1;
- (void)setCoreRecentMultiplier:(unsigned long long)arg1;
- (void)setCoreRecentUpperLimit:(unsigned long long)arg1;
- (void)setDashboardDeepLinkEnabled:(bool)arg1;
- (void)setDebugRequestTimeout:(double)arg1;
- (void)setDictionaryValue:(id)arg1 forKey:(id)arg2;
- (void)setEnterSandbox:(bool)arg1;
- (void)setEnvironment:(long long)arg1;
- (void)setExchangeDataMaximumSize:(unsigned long long)arg1;
- (void)setExchangeMaxInitiatedExchangesPerPlayer:(unsigned long long)arg1;
- (void)setFakeFriendRequestCount:(long long)arg1;
- (void)setForceDefaultContactsIntegrationConsent:(bool)arg1;
- (void)setForceDefaultNickname:(bool)arg1;
- (void)setForceDefaultPrivacy:(bool)arg1;
- (void)setForcePrivacyNotice:(bool)arg1;
- (void)setForceRelay:(bool)arg1;
- (void)setForceUnderage:(bool)arg1;
- (void)setGarbageCollectionInterval:(double)arg1;
- (void)setInboxContactsOnly:(bool)arg1;
- (void)setInboxContactsOnly:(bool)arg1 refresh:(bool)arg2;
- (void)setIntegerValue:(long long)arg1 forKey:(id)arg2;
- (void)setLogFilter:(unsigned int)arg1;
- (void)setLoginDisableThreshold:(unsigned long long)arg1;
- (void)setMaxGameStateSizeTurnBased:(unsigned long long)arg1;
- (void)setMaxPlayersHosted:(unsigned long long)arg1;
- (void)setMaxPlayersP2P:(unsigned long long)arg1;
- (void)setMaxPlayersTurnBased:(unsigned long long)arg1;
- (void)setMaxRecentPlayersCount:(unsigned long long)arg1;
- (void)setMaxRecentPlayersTime:(double)arg1;
- (void)setMescalSetupRetries:(unsigned long long)arg1;
- (void)setMinimumCacheTTL:(double)arg1;
- (void)setMultiplayerShouldAlwaysReloadCollectionView:(bool)arg1;
- (void)setNetworkManagerStateOverride:(long long)arg1;
- (void)setNetworkManagerUserOverride:(id)arg1;
- (void)setNotificationAlertsEnabled:(bool)arg1;
- (void)setNotificationBadgesEnabled:(bool)arg1;
- (void)setNotificationCenterEnabled:(bool)arg1;
- (void)setNotificationSoundsEnabled:(bool)arg1;
- (void)setOperationRetryCount:(unsigned long long)arg1;
- (void)setOperationRetryDelay:(double)arg1;
- (void)setOperationTimeout:(double)arg1;
- (void)setOverrideValues:(id)arg1;
- (void)setPipeliningSetting:(long long)arg1;
- (void)setPreemptiveRelay:(bool)arg1;
- (void)setPreferencesDelegate:(id)arg1;
- (void)setPushEnvironment:(long long)arg1;
- (void)setRecentNumberOfPlayers:(unsigned long long)arg1;
- (void)setRecentNumberOfPlayers:(unsigned long long)arg1 forBundleID:(id)arg2;
- (void)setRecentNumberOfPlayersPerGame:(id)arg1;
- (void)setRestrictToAutomatch:(bool)arg1;
- (void)setRestrictToTournamentPlayers:(bool)arg1;
- (void)setShouldAddPlayerInfoToAddressBook:(bool)arg1;
- (void)setShouldAllowNearbyMultiplayer:(bool)arg1;
- (void)setShouldAnnotateImageUsage:(bool)arg1;
- (void)setShouldLinkPlayerToFacebook:(bool)arg1;
- (void)setShouldLinkPlayerToICloud:(bool)arg1;
- (void)setShouldLinkPlayerToTwitter:(bool)arg1;
- (void)setShouldTrackAtlasImageUsage:(bool)arg1;
- (void)setShouldUseTestIcons:(bool)arg1;
- (void)setStoreBagURL:(id)arg1;
- (void)setStringValue:(id)arg1 forKey:(id)arg2;
- (void)setSupportsChallenges:(bool)arg1;
- (void)setTerminationInterval:(double)arg1;
- (void)setTestRunID:(id)arg1;
- (void)setTimeInterval:(double)arg1 forKey:(id)arg2;
- (void)setTournamentAutoDuration:(long long)arg1;
- (void)setTournamentCreationMethod:(long long)arg1;
- (void)setTournamentCustomDuration:(long long)arg1;
- (void)setTournamentCustomMaxPlayers:(long long)arg1;
- (void)setTournamentCustomMaxReplays:(long long)arg1;
- (void)setTournamentCustomMinPlayers:(long long)arg1;
- (void)setTournamentDemoModeEnabled:(bool)arg1;
- (void)setTournamentDuration:(long long)arg1;
- (void)setTournamentEndDate:(id)arg1;
- (void)setTournamentMaxPlayers:(long long)arg1;
- (void)setTournamentMaxReplays:(long long)arg1;
- (void)setTournamentMaxSimulatedFriends:(long long)arg1;
- (void)setTournamentMaxSimulatedPlayers:(long long)arg1;
- (void)setTournamentMinPlayers:(long long)arg1;
- (void)setTournamentParticipantState:(long long)arg1;
- (void)setTournamentPlayers:(long long)arg1;
- (void)setTournamentReplays:(long long)arg1;
- (void)setTournamentServer:(long long)arg1;
- (void)setTournamentStartDate:(id)arg1;
- (void)setTournamentState:(long long)arg1;
- (void)setTournamentUIAppearanceStyle:(long long)arg1;
- (void)setTournamentsDebuggingEnabled:(bool)arg1;
- (void)setUnsignedIntegerValue:(long long)arg1 forKey:(id)arg2;
- (void)setUseInternalHeader:(bool)arg1;
- (void)setUseSharePlayToExchangeData:(bool)arg1;
- (void)setUseTestProtocols:(bool)arg1;
- (void)setVerboseLogging:(bool)arg1;
- (void)setWebKitInspectElementEnabled:(bool)arg1;
- (void)set_shouldSynchronizeOnNextRead:(bool)arg1;
- (bool)shouldAddPlayerInfoToAddressBook;
- (bool)shouldAllowCustomCommunication;
- (bool)shouldAllowNearbyMultiplayer;
- (bool)shouldAllowSharing;
- (bool)shouldAnnotateImageUsage;
- (bool)shouldDisallowInvitesFromStrangers;
- (bool)shouldLinkPlayerToFacebook;
- (bool)shouldLinkPlayerToICloud;
- (bool)shouldLinkPlayerToTwitter;
- (bool)shouldTrackAtlasImageUsage;
- (bool)shouldUseTestIcons;
- (id)storeBagURL;
- (id)stringValueForKey:(id)arg1 defaultValue:(id)arg2;
- (bool)supportsChallenges;
- (void)synchronize;
- (double)terminationInterval;
- (id)testRunID;
- (double)timeIntervalForKey:(id)arg1 defaultValue:(double)arg2;
- (long long)tournamentAutoDuration;
- (long long)tournamentCreationMethod;
- (long long)tournamentCustomDuration;
- (long long)tournamentCustomMaxPlayers;
- (long long)tournamentCustomMaxReplays;
- (long long)tournamentCustomMinPlayers;
- (bool)tournamentDemoModeEnabled;
- (long long)tournamentDuration;
- (id)tournamentEndDate;
- (long long)tournamentMaxPlayers;
- (long long)tournamentMaxReplays;
- (long long)tournamentMaxSimulatedFriends;
- (long long)tournamentMaxSimulatedPlayers;
- (long long)tournamentMinPlayers;
- (long long)tournamentParticipantState;
- (long long)tournamentPlayers;
- (long long)tournamentReplays;
- (long long)tournamentServer;
- (id)tournamentStartDate;
- (long long)tournamentState;
- (long long)tournamentUIAppearanceStyle;
- (bool)tournamentsDebuggingEnabled;
- (long long)unsignedIntegerValueForKey:(id)arg1 defaultValue:(long long)arg2;
- (bool)useInternalHeader;
- (bool)useSharePlayToExchangeData;
- (bool)useTestProtocols;
- (id)valueRestrictionForKey:(id)arg1;
- (bool)verboseLogging;

// Image: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI

- (void)activeScreenTimeRemotePinUIWithHandler:(id /* block */)arg1;
- (bool)isScreenTimeRestrictionsPasscodeSet;
- (void)screenTimePINControllerDidFinish:(id)arg1;
- (id /* block */)screenTimePinCallback;
- (void)setScreenTimePinCallback:(id /* block */)arg1;
- (bool)shouldShowScreenTimePINController;

@end
