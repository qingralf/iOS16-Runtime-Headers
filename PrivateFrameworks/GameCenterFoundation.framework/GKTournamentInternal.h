/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation
 */

@interface GKTournamentInternal : GKInternalRepresentation {
    GKScoreInternal * _bestScore;
    GKPlayerInternal * _customTournamentCreator;
    double  _duration;
    NSURL * _inviteURLForMessages;
    GKLeaderboardInternal * _leaderboard;
    GKTournamentParticipantInternal * _localParticipant;
    long long  _maxPlayers;
    long long  _maxReplays;
    long long  _minPlayers;
    NSDate * _nextTournamentBeginDate;
    NSString * _nextTournamentID;
    long long  _playerCount;
    long long  _randomSeed;
    NSDate * _registrationBeginDate;
    NSDate * _registrationEndDate;
    long long  _scoringMethod;
    long long  _seedingMethod;
    NSDate * _tournamentBeginDate;
    GKTournamentDefinitionInternal * _tournamentDefinition;
    NSDate * _tournamentEndDate;
    long long  _tournamentError;
    NSString * _tournamentID;
    NSString * _tournamentName;
    long long  _tournamentNumber;
    long long  _tournamentState;
    GKPlayerInternal * _winningPlayer;
}

@property (nonatomic, retain) GKScoreInternal *bestScore;
@property (nonatomic, retain) GKPlayerInternal *customTournamentCreator;
@property (nonatomic) double duration;
@property (nonatomic, retain) NSURL *inviteURLForMessages;
@property (nonatomic, retain) GKLeaderboardInternal *leaderboard;
@property (nonatomic, retain) GKTournamentParticipantInternal *localParticipant;
@property (nonatomic) long long maxPlayers;
@property (nonatomic) long long maxReplays;
@property (nonatomic) long long minPlayers;
@property (nonatomic, retain) NSDate *nextTournamentBeginDate;
@property (nonatomic, retain) NSString *nextTournamentID;
@property (nonatomic) long long playerCount;
@property (nonatomic) long long randomSeed;
@property (nonatomic, retain) NSDate *registrationBeginDate;
@property (nonatomic, retain) NSDate *registrationEndDate;
@property (nonatomic) long long scoringMethod;
@property (nonatomic) long long seedingMethod;
@property (nonatomic, retain) NSDate *tournamentBeginDate;
@property (nonatomic, retain) GKTournamentDefinitionInternal *tournamentDefinition;
@property (nonatomic, retain) NSDate *tournamentEndDate;
@property (nonatomic) long long tournamentError;
@property (nonatomic, retain) NSString *tournamentID;
@property (nonatomic, retain) NSString *tournamentName;
@property (nonatomic) long long tournamentNumber;
@property (nonatomic) long long tournamentState;
@property (nonatomic, retain) GKPlayerInternal *winningPlayer;

+ (id)defaultCustomTournamentForTournamentDefinition:(id)arg1;
+ (id)secureCodedPropertyKeys;

- (void).cxx_destruct;
- (id)bestScore;
- (id)customTournamentCreator;
- (double)duration;
- (id)inviteURLForMessages;
- (id)leaderboard;
- (id)localParticipant;
- (long long)maxPlayers;
- (long long)maxReplays;
- (long long)minPlayers;
- (id)nextTournamentBeginDate;
- (id)nextTournamentID;
- (long long)playerCount;
- (long long)randomSeed;
- (id)registrationBeginDate;
- (id)registrationEndDate;
- (long long)scoringMethod;
- (long long)seedingMethod;
- (void)setBestScore:(id)arg1;
- (void)setCustomTournamentCreator:(id)arg1;
- (void)setDuration:(double)arg1;
- (void)setInviteURLForMessages:(id)arg1;
- (void)setLeaderboard:(id)arg1;
- (void)setLocalParticipant:(id)arg1;
- (void)setMaxPlayers:(long long)arg1;
- (void)setMaxReplays:(long long)arg1;
- (void)setMinPlayers:(long long)arg1;
- (void)setNextTournamentBeginDate:(id)arg1;
- (void)setNextTournamentID:(id)arg1;
- (void)setPlayerCount:(long long)arg1;
- (void)setRandomSeed:(long long)arg1;
- (void)setRegistrationBeginDate:(id)arg1;
- (void)setRegistrationEndDate:(id)arg1;
- (void)setScoringMethod:(long long)arg1;
- (void)setSeedingMethod:(long long)arg1;
- (void)setTournamentBeginDate:(id)arg1;
- (void)setTournamentDefinition:(id)arg1;
- (void)setTournamentEndDate:(id)arg1;
- (void)setTournamentError:(long long)arg1;
- (void)setTournamentID:(id)arg1;
- (void)setTournamentName:(id)arg1;
- (void)setTournamentNumber:(long long)arg1;
- (void)setTournamentState:(long long)arg1;
- (void)setWinningPlayer:(id)arg1;
- (id)tournamentBeginDate;
- (id)tournamentDefinition;
- (id)tournamentEndDate;
- (long long)tournamentError;
- (id)tournamentID;
- (id)tournamentName;
- (long long)tournamentNumber;
- (long long)tournamentState;
- (id)winningPlayer;

@end
