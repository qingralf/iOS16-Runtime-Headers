/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks
 */

@interface WBTabGroupManager : NSObject <WBSCRDTPositionGeneratorDelegate> {
    bool  _didFinishSetup;
    NSObject<OS_dispatch_queue> * _internalQueue;
    NSMutableDictionary * _localTabGroupsByUUID;
    NSMutableDictionary * _localTabsByUUID;
    NSPointerArray * _observers;
    WBSCRDTPositionGenerator * _positionGenerator;
    NSMutableSet * _recentlyAddedTabGroupsAwaitingFirstStartPage;
    WBSavedStateManager * _savedStateManager;
    id /* block */  _setupCompletionHandler;
    WBTabGroupSyncAgentProxy * _syncAgentProxy;
    NSMutableDictionary * _syncableTabGroupsByUUID;
    NSMutableDictionary * _syncableTabsByUUID;
    WBTabCollection * _tabCollection;
    <WBTabProvider> * _tabProvider;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSSet *recentlyAddedTabGroupsAwaitingFirstStartPage;
@property (readonly) Class superclass;
@property (nonatomic, readonly) WBTabCollection *tabCollection;
@property (nonatomic, readonly, copy) NSArray *tabGroups;
@property (nonatomic, readonly) <WBTabProvider> *tabProvider;

+ (id)ephemeralTabGroupManager;

- (void).cxx_destruct;
- (void)_cacheTabGroup:(id)arg1;
- (void)_didRemoveTabGroups:(id)arg1 updateTabGroups:(id)arg2;
- (id)_generatePositionAfterTabGroup:(id)arg1;
- (id)_localTabGroups;
- (long long)_nextInMemoryPositionChangeID;
- (void)_notifyScopedBookmarkChangesInFolderWithID:(int)arg1;
- (void)_reloadTabGroupsWithResultHandler:(id /* block */)arg1;
- (id)_tabCacheForTabGroup:(id)arg1;
- (id)_tabGroupCacheForTabGroup:(id)arg1;
- (void)_tabGroupSyncDidFinish:(id)arg1;
- (id)_tabGroupWithUUID:(id)arg1;
- (id)_tabGroups;
- (id)_tabWithUUID:(id)arg1;
- (void)_uncacheTabGroup:(id)arg1;
- (void)_updatePositionsForTabsInTabGroup:(id)arg1;
- (void)addTabGroupObserver:(id)arg1;
- (void)deleteScopedBookmarkWithUUID:(id)arg1;
- (void)deleteScopedBookmarkWithUUID:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)deviceIdentifierForPositionGenerator:(id)arg1;
- (id)initWithCollection:(id)arg1;
- (id)initWithTabProvider:(id)arg1 savedStateManager:(id)arg2;
- (void)insertScopedBookmark:(id)arg1 inScopedBookmarkFolderWithID:(int)arg2 afterBookmarkWithUUID:(id)arg3;
- (id)insertTabGroup:(id)arg1 afterTabGroup:(id)arg2;
- (void)moveTabGroup:(id)arg1 afterTabGroup:(id)arg2;
- (id)moveTabs:(id)arg1 toTabGroup:(id)arg2 afterTab:(id)arg3;
- (long long)nextChangeIDForPositionInPositionGenerator:(id)arg1;
- (void)notifyDidFinishSetup;
- (void)notifyDidPerformBlockUpdatesForTabGroup:(id)arg1;
- (void)notifyDidRemoveTabGroup:(id)arg1;
- (void)notifyDidUpdateScopedBookmarkList:(id)arg1;
- (void)notifyDidUpdateSyncableContent;
- (void)notifyDidUpdateTab:(id)arg1 userDriven:(bool)arg2;
- (void)notifyDidUpdateTabGroup:(id)arg1;
- (void)notifyDidUpdateTabGroups;
- (void)notifyDidUpdateTabsInTabGroup:(id)arg1;
- (void)notifyWillPerformBlockUpdatesForTabGroup:(id)arg1;
- (id)positionGenerator:(id)arg1 positionForRecordName:(id)arg2;
- (id)positionGenerator:(id)arg1 recordNameOfBookmarksAfterRecordWithName:(id)arg2;
- (id)positionGenerator:(id)arg1 recordNameOfBookmarksBeforeRecordWithName:(id)arg2;
- (void)recentlyAddedTabGroupIsAwaitingFirstStartPage:(id)arg1;
- (id)recentlyAddedTabGroupsAwaitingFirstStartPage;
- (void)registerWindowState:(id)arg1;
- (void)reloadTabGroupsFromDatabaseWithCompletionHandler:(id /* block */)arg1;
- (void)removeTabGroup:(id)arg1;
- (void)removeTabGroupObserver:(id)arg1;
- (void)reorderScopedBookmarkWithUUID:(id)arg1 afterBookmarkWithUUID:(id)arg2 notify:(bool)arg3;
- (id)scopedBookmarkListWithID:(int)arg1 filteredUsingString:(id)arg2;
- (id)tabCollection;
- (void)tabGroupHasDisplayedStartPage:(id)arg1;
- (id)tabGroupWithUUID:(id)arg1;
- (id)tabGroups;
- (id)tabProvider;
- (id)tabWithUUID:(id)arg1;
- (id)topScopedBookmarkListForTabGroup:(id)arg1;
- (void)updateScopedBookmarkWithUUID:(id)arg1 title:(id)arg2 address:(id)arg3;
- (id)updateTabGroupWithUUID:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)updateTabWithUUID:(id)arg1 persist:(bool)arg2 notify:(bool)arg3 usingBlock:(id /* block */)arg4;
- (id)updateTabsInTabGroupWithUUID:(id)arg1 usingBlock:(id /* block */)arg2;
- (void)waitForSetupWithCompletionHandler:(id /* block */)arg1;

@end
