/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ShareSheet.framework/ShareSheet
 */

@interface SUIHostActivityProxy : UIActivity {
    UIImage * _actionImage;
    UISUIActivityConfiguration * _activityConfiguration;
    UIImage * _activityImage;
    bool  _activitySupportsPromiseURLs;
    NSString * _activityTitle;
    NSString * _activityType;
    bool  _appIsDocumentTypeOwner;
    long long  _defaultSortGroup;
    NSString * _fallbackActivityType;
    NSUUID * _hostActivityUUID;
    NSString * _positionBeforeActivityType;
    struct CGSize { 
        double width; 
        double height; 
    }  _preferredThumbnailSize;
    NSString * _systemImageName;
}

@property (nonatomic, retain) UIImage *actionImage;
@property (nonatomic, retain) UISUIActivityConfiguration *activityConfiguration;
@property (nonatomic, retain) UIImage *activityImage;
@property (nonatomic) bool activitySupportsPromiseURLs;
@property (nonatomic, retain) NSString *activityTitle;
@property (nonatomic, retain) NSString *activityType;
@property (nonatomic, readonly) NSUUID *activityUUID;
@property (nonatomic) bool appIsDocumentTypeOwner;
@property (nonatomic) long long defaultSortGroup;
@property (nonatomic, retain) NSString *fallbackActivityType;
@property (nonatomic, retain) NSUUID *hostActivityUUID;
@property (nonatomic, retain) NSString *positionBeforeActivityType;
@property (nonatomic) struct CGSize { double x1; double x2; } preferredThumbnailSize;
@property (nonatomic, retain) NSString *systemImageName;

+ (id)activitiesForConfigurations:(id)arg1;
+ (Class)activityProxyClassForActivityCategory:(long long)arg1;
+ (id)newWithActivityConfiguration:(id)arg1;

- (void).cxx_destruct;
- (id)_actionImage;
- (bool)_activitySupportsPromiseURLs;
- (id)_activityTypeUsingFallbackActivityTypeIfNecessary;
- (bool)_appIsDocumentTypeOwner;
- (id)_beforeActivity;
- (long long)_defaultSortGroup;
- (id)_systemImageName;
- (struct CGSize { double x1; double x2; })_thumbnailSize;
- (id)actionImage;
- (id)activityConfiguration;
- (void)activityDidFinish:(bool)arg1;
- (id)activityImage;
- (bool)activitySupportsPromiseURLs;
- (id)activityTitle;
- (id)activityType;
- (id)activityUUID;
- (bool)appIsDocumentTypeOwner;
- (bool)canPerformWithActivityItems:(id)arg1;
- (id)debugDescription;
- (long long)defaultSortGroup;
- (id)fallbackActivityType;
- (id)hostActivityUUID;
- (id)initWithAttributesFromActivityConfiguration:(id)arg1;
- (void)performActivity;
- (id)positionBeforeActivityType;
- (struct CGSize { double x1; double x2; })preferredThumbnailSize;
- (void)prepareWithActivityItems:(id)arg1;
- (void)setActionImage:(id)arg1;
- (void)setActivityConfiguration:(id)arg1;
- (void)setActivityImage:(id)arg1;
- (void)setActivitySupportsPromiseURLs:(bool)arg1;
- (void)setActivityTitle:(id)arg1;
- (void)setActivityType:(id)arg1;
- (void)setAppIsDocumentTypeOwner:(bool)arg1;
- (void)setDefaultSortGroup:(long long)arg1;
- (void)setFallbackActivityType:(id)arg1;
- (void)setHostActivityUUID:(id)arg1;
- (void)setPositionBeforeActivityType:(id)arg1;
- (void)setPreferredThumbnailSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setSystemImageName:(id)arg1;
- (id)systemImageName;

@end
