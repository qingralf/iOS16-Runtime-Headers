/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
 */

@interface MRUserSettings : NSObject {
    bool  _externalDevicePairingAllowed;
    bool  _homepodDemoMode;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSUserDefaults * _userDefaults;
}

@property (nonatomic, readonly) double activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval;
@property (nonatomic, readonly) double airPlayOutputContextInitTimeoutDuration;
@property (nonatomic, readonly) bool allowAllClientUIConnections;
@property (nonatomic, readonly) double andromedaUpdateInterval;
@property (nonatomic, readonly) double bluetoothDeviceResumeDuration;
@property (nonatomic, readonly) double broadcastCommandWaitDuration;
@property (nonatomic, readonly) bool canHostMultiplayerStream;
@property (nonatomic, readonly) unsigned long long checkXPCConnectionStatusDefaultInterval;
@property (nonatomic, readonly) double checkXPCConnectionStatusDefaultResponseTimeout;
@property (nonatomic, readonly) bool computeNowPlayingApplication;
@property (nonatomic, readonly) bool connectToAllEndpointsWhenAnyEndpointBeginsPlayback;
@property (nonatomic, readonly) bool connectToAllEndpointsWhenInProximityToAnyDevice;
@property (nonatomic, readonly) bool connectToEndpointWhenBeginsPlayback;
@property (nonatomic, readonly) bool connectToUserSelectedEndpoint;
@property (nonatomic, retain) NSArray *connectedClientAuditTokens;
@property (nonatomic, readonly) NSArray *destinationResolverReconRetryIntervals;
@property (nonatomic, readonly) double deviceRecentlyUsedInterval;
@property (nonatomic, readonly) bool discoverCompanionDevices;
@property (nonatomic, readonly) double discoverEndpointTimeoutInterval;
@property (nonatomic, readonly) double endpointRecentlyUserSelectedInterval;
@property (nonatomic, retain) NSArray *expectedClientAuditTokens;
@property (nonatomic, readonly) double externalDeviceDisconnectSleepDuration;
@property (nonatomic, readonly) double externalDeviceDisconnectWaitDuration;
@property (nonatomic, readonly) double externalDeviceNowPlayingInfoArtworkCoalesceDuration;
@property (nonatomic, readonly) double externalDeviceNowPlayingInfoCoalesceDuration;
@property (getter=isExternalDevicePairingAllowed, nonatomic) bool externalDevicePairingAllowed;
@property (nonatomic, readonly) double externalDeviceSleepAssertionOnClientConnectDuration;
@property (nonatomic, readonly) long long externalDeviceSocketQOSLevel;
@property (nonatomic, readonly) double externalDeviceTimeoutDuration;
@property (nonatomic, readonly) bool forceDeviceInfoDiscovery;
@property (nonatomic, readonly) bool forceEnableCECVolume;
@property (nonatomic, readonly) bool forceFadeForEveryHandoff;
@property (nonatomic) bool hasClearedNonEphemeralSessions;
@property (nonatomic, readonly) bool hasExternalDeviceSocketQOSLevelSet;
@property (nonatomic) bool homepodDemoMode;
@property (nonatomic, readonly) NSArray *jsonClientUIDs;
@property (nonatomic, retain) NSString *lastBootUUID;
@property (nonatomic, readonly) double lastPlayingDeviceThresholdInterval;
@property (nonatomic, readonly) double launchApplicationTimeoutInterval;
@property (nonatomic, readonly) double lockScreenAPLRatio;
@property (nonatomic, readonly) double lockScreenAPLTarget;
@property (nonatomic, readonly) unsigned long long maxStreamCapacity;
@property (nonatomic, readonly) long long maxTransactionMemorySize;
@property (nonatomic, readonly) unsigned long long maximumNumberOfMediaSuggestions;
@property (nonatomic, readonly) double mediaRecentlyPlayedInterval;
@property (getter=isMultiplayerAware, nonatomic, readonly) bool multiplayerAware;
@property (nonatomic, readonly) bool needNowPlayingForegroundState;
@property (nonatomic, readonly) bool notifyDevicesInHomeThatPlaybackStarted;
@property (nonatomic, readonly) double nowPlayingApplicationTimeout;
@property (nonatomic, readonly) int nowPlayingControllerVersion;
@property (nonatomic, readonly) double nowPlayingObserverCoalesceInterval;
@property (nonatomic, readonly) double nowPlayingUIWakingPlayerEventAssertionDuration;
@property (nonatomic, readonly) double personalDeviceLockScreenTimeout;
@property (nonatomic, retain) NSDictionary *personalDeviceState;
@property (nonatomic) bool prefersExpandedLockScreenPlatter;
@property (nonatomic, readonly) float proximitySortingNearbyRadius;
@property (nonatomic, readonly) double queuedCommandsTimeoutInterval;
@property (nonatomic, readonly) double quickControlsInactiveTimeout;
@property (nonatomic, readonly) NSArray *remoteControlDiscoveryAllowList;
@property (nonatomic, readonly) NSArray *remoteControlDiscoveryDenyList;
@property (nonatomic, readonly) bool remoteDeviceIdleDisconnection;
@property (nonatomic, readonly) double remoteDeviceIdleDisconnectionInterval;
@property (nonatomic, readonly) bool removeLocalDevice;
@property (nonatomic, readonly) bool reserveSlotForLocal;
@property (nonatomic, readonly) bool sendLastPlayingDeviceToHome;
@property (nonatomic, readonly) double sendPlaybackSessionUpdateToCompanionCoalesceInterval;
@property (nonatomic, readonly) bool shouldConnectToLocalEndpoint;
@property (nonatomic, readonly) bool shouldInitializeGenericBonjourService;
@property (nonatomic, readonly) bool shouldInitializeIDSService;
@property (nonatomic, readonly) bool shouldInitializeRapportService;
@property (nonatomic, readonly) bool shouldInitializeTelevisionBonjourService;
@property (nonatomic, readonly) bool shouldLogArtwork;
@property (nonatomic, readonly) bool shouldLogPairingSetupCode;
@property (nonatomic, readonly) bool shouldWakeDeviceForRemoteControlCommands;
@property (nonatomic, readonly) bool showUncommitedDevices;
@property (nonatomic, readonly) bool supportCoordinatedVolume;
@property (nonatomic, readonly) bool supportExpanseMigration;
@property (nonatomic, readonly) bool supportIDSDiscovery;
@property (nonatomic, readonly) bool supportLastPlayingDevice;
@property (nonatomic, readonly) bool supportLockscreenPlatterDisplayForPersonalDevice;
@property (nonatomic, readonly) bool supportMigration;
@property (nonatomic, readonly) bool supportMultiplayerHost;
@property (nonatomic, readonly) bool supportNanoLinkAgent;
@property (nonatomic, readonly) bool supportNewMigrationArchitecture;
@property (nonatomic, readonly) bool supportNewMigrationBehaviorForProximity;
@property (nonatomic, readonly) bool supportNowPlayingPIP;
@property (nonatomic, readonly) bool supportOutOfProcessMigration;
@property (nonatomic, readonly) bool supportProactiveSuggestion;
@property (nonatomic, readonly) bool supportProximityMigration;
@property (nonatomic, readonly) bool supportProximityMigrationV2;
@property (nonatomic, readonly) bool supportRapportRemoteControlConnection;
@property (nonatomic, readonly) bool supportRapportRemoteControlTransport;
@property (nonatomic, readonly) bool takelockScreenAssertion;
@property (nonatomic, readonly) double transactionWaitDurationOnNetworkSend;
@property (nonatomic, readonly) double transactionWaitDurationOnOutOfMemory;
@property (nonatomic, readonly) double transactionWaitDurationOnXpcSend;
@property (nonatomic, readonly) bool useAPSyncAPI;
@property (nonatomic, readonly) bool useClusterDevices;
@property (nonatomic, readonly) bool useDebugAVRouteWithoutVolumeControl;
@property (nonatomic, readonly) bool useExternalDeviceSystemPairing;
@property (nonatomic, readonly) bool useGenericTransportForHostedEndpoints;
@property (nonatomic, readonly) bool useNoDelayOptionForExternalDeviceSockets;
@property (nonatomic, readonly) bool usePeerToPeerExternalDeviceConnections;
@property (nonatomic, readonly) bool useProactiveEndpoint;
@property (nonatomic, readonly) bool useSystemAudioContextForAirPlayTransport;
@property (nonatomic, readonly) bool verboseConnectionMonitorLogging;
@property (nonatomic, readonly) bool verboseHostedDiscoverySessionLogging;
@property (nonatomic, readonly) bool verboseHostedExternalDeviceClientLogging;
@property (nonatomic, readonly) bool verboseMRDMediaRemoteClientLogging;
@property (nonatomic, readonly) bool verboseNowPlayingControllerLogging;
@property (nonatomic, readonly) bool verboseNowPlayingStateObserver;
@property (nonatomic, readonly) bool verboseOriginClientLogging;
@property (nonatomic, readonly) bool verboseOriginForwarderLogging;
@property (nonatomic, readonly) bool verboseProtocolMessageLogging;
@property (nonatomic, readonly) bool verboseRemoteControlDiscoveryLogging;
@property (nonatomic, readonly) bool visuallyIdentifyProactiveSuggestion;
@property (nonatomic, readonly) double wakingPlayerPathAssertionDuration;

+ (id)currentSettings;

- (void).cxx_destruct;
- (double)activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval;
- (double)airPlayOutputContextInitTimeoutDuration;
- (bool)allowAllClientUIConnections;
- (double)andromedaUpdateInterval;
- (double)bluetoothDeviceResumeDuration;
- (double)broadcastCommandWaitDuration;
- (bool)canHostMultiplayerStream;
- (unsigned long long)checkXPCConnectionStatusDefaultInterval;
- (double)checkXPCConnectionStatusDefaultResponseTimeout;
- (bool)computeNowPlayingApplication;
- (bool)connectToAllEndpointsWhenAnyEndpointBeginsPlayback;
- (bool)connectToAllEndpointsWhenInProximityToAnyDevice;
- (bool)connectToEndpointWhenBeginsPlayback;
- (bool)connectToUserSelectedEndpoint;
- (id)connectedClientAuditTokens;
- (id)defaultSupportedCommandsData;
- (id)defaultSupportedCommandsDataForClient:(id)arg1;
- (id)destinationResolverReconRetryIntervals;
- (double)deviceRecentlyUsedInterval;
- (bool)discoverCompanionDevices;
- (double)discoverEndpointTimeoutInterval;
- (double)endpointRecentlyUserSelectedInterval;
- (id)expectedClientAuditTokens;
- (double)externalDeviceDisconnectSleepDuration;
- (double)externalDeviceDisconnectWaitDuration;
- (double)externalDeviceNowPlayingInfoArtworkCoalesceDuration;
- (double)externalDeviceNowPlayingInfoCoalesceDuration;
- (double)externalDeviceSleepAssertionOnClientConnectDuration;
- (long long)externalDeviceSocketQOSLevel;
- (double)externalDeviceTimeoutDuration;
- (bool)forceDeviceInfoDiscovery;
- (bool)forceEnableCECVolume;
- (bool)forceFadeForEveryHandoff;
- (bool)hasClearedNonEphemeralSessions;
- (bool)hasExternalDeviceSocketQOSLevelSet;
- (bool)homepodDemoMode;
- (id)init;
- (bool)isExternalDevicePairingAllowed;
- (bool)isMultiplayerAware;
- (id)jsonClientUIDs;
- (id)lastBootUUID;
- (double)lastPlayingDeviceThresholdInterval;
- (double)launchApplicationTimeoutInterval;
- (id)localLastPlayingDate;
- (unsigned int)localPlaybackState;
- (double)lockScreenAPLRatio;
- (double)lockScreenAPLTarget;
- (unsigned long long)maxStreamCapacity;
- (long long)maxTransactionMemorySize;
- (unsigned long long)maximumNumberOfMediaSuggestions;
- (double)mediaRecentlyPlayedInterval;
- (id)mostRecentlySelectedDeviceUID;
- (bool)needNowPlayingForegroundState;
- (bool)notifyDevicesInHomeThatPlaybackStarted;
- (double)nowPlayingApplicationTimeout;
- (int)nowPlayingControllerVersion;
- (double)nowPlayingObserverCoalesceInterval;
- (double)nowPlayingUIWakingPlayerEventAssertionDuration;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (double)personalDeviceLockScreenTimeout;
- (id)personalDeviceState;
- (bool)prefersExpandedLockScreenPlatter;
- (float)proximitySortingNearbyRadius;
- (double)queuedCommandsTimeoutInterval;
- (double)quickControlsInactiveTimeout;
- (id)remoteControlDiscoveryAllowList;
- (id)remoteControlDiscoveryDenyList;
- (bool)remoteDeviceIdleDisconnection;
- (double)remoteDeviceIdleDisconnectionInterval;
- (bool)removeLocalDevice;
- (bool)reserveSlotForLocal;
- (id)selectionDateForDeviceUID:(id)arg1;
- (bool)sendLastPlayingDeviceToHome;
- (double)sendPlaybackSessionUpdateToCompanionCoalesceInterval;
- (void)setConnectedClientAuditTokens:(id)arg1;
- (void)setExpectedClientAuditTokens:(id)arg1;
- (void)setExternalDevicePairingAllowed:(bool)arg1;
- (void)setHasClearedNonEphemeralSessions:(bool)arg1;
- (void)setHomepodDemoMode:(bool)arg1;
- (void)setLastBootUUID:(id)arg1;
- (void)setLocalLastPlayingDate:(id)arg1;
- (void)setLocalPlaybackState:(unsigned int)arg1;
- (void)setPersonalDeviceState:(id)arg1;
- (void)setPrefersExpandedLockScreenPlatter:(bool)arg1;
- (void)setSelectionDate:(id)arg1 forDeviceUID:(id)arg2;
- (bool)shouldConnectToLocalEndpoint;
- (bool)shouldInitializeGenericBonjourService;
- (bool)shouldInitializeIDSService;
- (bool)shouldInitializeRapportService;
- (bool)shouldInitializeTelevisionBonjourService;
- (bool)shouldLogArtwork;
- (bool)shouldLogPairingSetupCode;
- (bool)shouldWakeDeviceForRemoteControlCommands;
- (bool)showUncommitedDevices;
- (bool)supportCoordinatedVolume;
- (bool)supportExpanseMigration;
- (bool)supportIDSDiscovery;
- (bool)supportLastPlayingDevice;
- (bool)supportLockscreenPlatterDisplayForPersonalDevice;
- (bool)supportMigration;
- (bool)supportMultiplayerHost;
- (bool)supportNanoLinkAgent;
- (bool)supportNewMigrationArchitecture;
- (bool)supportNewMigrationBehaviorForProximity;
- (bool)supportNowPlayingPIP;
- (bool)supportOutOfProcessMigration;
- (bool)supportProactiveSuggestion;
- (bool)supportProximityMigration;
- (bool)supportProximityMigrationV2;
- (bool)supportRapportRemoteControlConnection;
- (bool)supportRapportRemoteControlTransport;
- (bool)takelockScreenAssertion;
- (double)transactionWaitDurationOnNetworkSend;
- (double)transactionWaitDurationOnOutOfMemory;
- (double)transactionWaitDurationOnXpcSend;
- (void)updateDefaultSupportedCommandsData:(id)arg1 forClient:(id)arg2;
- (bool)useAPSyncAPI;
- (bool)useClusterDevices;
- (bool)useDebugAVRouteWithoutVolumeControl;
- (bool)useExternalDeviceSystemPairing;
- (bool)useGenericTransportForHostedEndpoints;
- (bool)useNoDelayOptionForExternalDeviceSockets;
- (bool)usePeerToPeerExternalDeviceConnections;
- (bool)useProactiveEndpoint;
- (bool)useSystemAudioContextForAirPlayTransport;
- (bool)verboseConnectionMonitorLogging;
- (bool)verboseHostedDiscoverySessionLogging;
- (bool)verboseHostedExternalDeviceClientLogging;
- (bool)verboseMRDMediaRemoteClientLogging;
- (bool)verboseNowPlayingControllerLogging;
- (bool)verboseNowPlayingStateObserver;
- (bool)verboseOriginClientLogging;
- (bool)verboseOriginForwarderLogging;
- (bool)verboseProtocolMessageLogging;
- (bool)verboseRemoteControlDiscoveryLogging;
- (bool)visuallyIdentifyProactiveSuggestion;
- (double)wakingPlayerPathAssertionDuration;

@end
