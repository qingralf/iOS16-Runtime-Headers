/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CopresenceCore.framework/CopresenceCore
 */

@interface CPParticipantController : NSObject <CPLinkDelegate, CPLinkProtocol> {
    <CPConnectionProviding> * _connectionProvider;
    unsigned long long  _connectionRetryCount;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _connectionsLock;
    <CPParticipantDelegate> * _delegate;
    <CPLinkDelegate> * _linkDelegate;
    NSMutableDictionary * _links;
    CPLink * _modelSyncLink;
    NSObject<OS_dispatch_queue> * _networkQueue;
    CPParticipant * _participant;
    CPLink * _reliableLink;
    unsigned int  _reliableLinkPriority;
    CPLink * _reservedReliableLink;
    CPLink * _reservedUnreliableLink;
    CPLink * _unreliableLink;
    unsigned int  _unreliableLinkPriority;
    struct Fsm<States, States::Idle, Triggers> { 
        struct map<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>, std::less<States>, std::allocator<std::pair<const States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>>> { 
            struct __tree<std::__value_type<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>, std::__map_value_compare<States, std::__value_type<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>, std::less<States>, true>, std::allocator<std::__value_type<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>>> { 
                void *__begin_node_; 
                struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>, void *>>> { 
                    struct __tree_end_node<std::__tree_node_base<void *> *> { 
                        void *__left_; 
                    } __value_; 
                } __pair1_; 
                struct __compressed_pair<unsigned long, std::__map_value_compare<States, std::__value_type<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>, std::less<States>, true>> { 
                    unsigned long long __value_; 
                } __pair3_; 
            } __tree_; 
        } transitionsMap; 
        int currentState; 
        struct function<void (States, States, Triggers)>="__f_"{__value_func<void (States, States, Triggers)>="__buf_"{type="__lx"[24C] {} _debug_fn; 
        void *__f_; 
    }  fsm;
}

@property (nonatomic) <CPConnectionProviding> *connectionProvider;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CPParticipantDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) <CPLinkDelegate> *linkDelegate;
@property (nonatomic, readonly) CPLink *modelSyncLink;
@property (nonatomic, readonly) CPParticipant *participant;
@property (nonatomic, readonly) CPLink *reliableLink;
@property (nonatomic) unsigned int reliableLinkPriority;
@property (nonatomic, readonly) CPLink *reservedReliableLink;
@property (nonatomic, readonly) CPLink *reservedUnreliableLink;
@property (readonly) Class superclass;
@property (nonatomic, readonly) CPLink *unreliableLink;
@property (nonatomic) unsigned int unreliableLinkPriority;

- (id).cxx_construct;
- (void).cxx_destruct;
- (bool)_allLinksReady;
- (void)_cleanup;
- (void)_dumpConnectionState;
- (void)_initConnections;
- (void)_onError:(id)arg1;
- (void)_triggerAsyncFSMEvent:(int)arg1;
- (void)_triggerAsyncFSMEvent:(int)arg1 timeout:(unsigned long long)arg2;
- (void)close;
- (id)connectionProvider;
- (id)delegate;
- (void)didBecomeReady:(id)arg1;
- (void)didFailWithError:(id)arg1;
- (void)didReceiveData:(id)arg1 from:(id)arg2;
- (id)initWithParticipant:(id)arg1 connectionProvider:(id)arg2 delegate:(id)arg3 queue:(id)arg4;
- (bool)isReady;
- (id)linkDelegate;
- (id)modelSyncLink;
- (void)notifyAppLaunch;
- (id)participant;
- (id)reliableLink;
- (unsigned int)reliableLinkPriority;
- (id)reservedReliableLink;
- (id)reservedUnreliableLink;
- (void)sendUnicastData:(id)arg1 ofType:(unsigned char)arg2 completion:(id /* block */)arg3;
- (void)setConnectionProvider:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLinkDelegate:(id)arg1;
- (void)setReliableLinkPriority:(unsigned int)arg1;
- (void)setUnreliableLinkPriority:(unsigned int)arg1;
- (void)setupLinkOfType:(unsigned char)arg1 completion:(id /* block */)arg2;
- (id)unreliableLink;
- (unsigned int)unreliableLinkPriority;

@end
