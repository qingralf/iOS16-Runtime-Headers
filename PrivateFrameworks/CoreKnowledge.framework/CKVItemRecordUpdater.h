/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreKnowledge.framework/CoreKnowledge
 */

@interface CKVItemRecordUpdater : NSObject {
    NSMutableDictionary * _commandCache;
    NSObject<CKVDatabaseReadWriteAccess> * _database;
    unsigned int  _datasetItemCount;
    NSNumber * _datasetRowId;
    NSString * _deviceId;
    NSNumber * _itemTypeNumber;
    unsigned int  _modifiedRowCount;
    NSString * _originAppId;
    unsigned long long  _priorOptions;
    NSNumber * _priorValidityHash;
    unsigned long long  _priorVersion;
    NSString * _requestDescription;
    NSNumber * _startTimeMicros;
    NSNumber * _updateValidityHash;
    unsigned long long  _updateVersion;
    NSString * _userId;
    NSNumber * _versionNumber;
}

@property (nonatomic, readonly) unsigned int datasetItemCount;
@property (nonatomic, readonly) NSNumber *datasetRowId;
@property (nonatomic, readonly) unsigned int modifiedRowCount;
@property (nonatomic, readonly) unsigned long long priorOptions;
@property (nonatomic, readonly) NSNumber *priorValidityHash;
@property (nonatomic, readonly) unsigned long long priorVersion;
@property (nonatomic, readonly) NSNumber *updateValidityHash;
@property (nonatomic, readonly) unsigned long long updateVersion;

- (void).cxx_destruct;
- (id)_datasetRowIdCriterion;
- (bool)_insertDatasetReturningRowId:(id*)arg1;
- (bool)_insertItemMetaWithItemIdHash:(id)arg1 itemBufferHash:(id)arg2 recordId:(id)arg3 isDuplicate:(bool*)arg4 rank:(unsigned long long)arg5;
- (bool)_insertItemWithItemIdHash:(id)arg1 recordId:(id)arg2 itemBuffer:(id)arg3;
- (id)_itemCriterionWithItemIdHash:(id)arg1;
- (bool)_registerDataset;
- (bool)_selectDatasetItemCount:(id*)arg1;
- (bool)_selectDatasetRowId:(id*)arg1 version:(unsigned long long*)arg2 validityHash:(id*)arg3 options:(unsigned long long*)arg4;
- (bool)_updateDatasetVersionAndValidity;
- (bool)_updateItemMetaWithRowId:(id)arg1 recordId:(id)arg2 itemBufferHash:(id)arg3 rank:(unsigned long long)arg4;
- (bool)_updateItemWithItemIdHash:(id)arg1 recordId:(id)arg2 itemBuffer:(id)arg3;
- (unsigned int)datasetItemCount;
- (id)datasetRowId;
- (bool)deleteDataset:(bool)arg1;
- (bool)deleteItemMetaRowId:(id)arg1;
- (bool)deleteItemWithItemIdHash:(id)arg1 outRecordId:(id*)arg2;
- (id)description;
- (bool)enumerateDatasetRecordIdsUsingBlock:(id /* block */)arg1;
- (bool)enumerateUnmodifiedRecordsUsingBlock:(id /* block */)arg1;
- (id)initWithDatabase:(id)arg1 request:(id)arg2 startTimeMicros:(long long)arg3;
- (bool)insertItemWithItemIdHash:(id)arg1 recordId:(id)arg2 itemBuffer:(id)arg3 itemBufferHash:(id)arg4 isDuplicate:(bool*)arg5 rank:(unsigned long long)arg6;
- (unsigned int)modifiedRowCount;
- (unsigned long long)priorOptions;
- (id)priorValidityHash;
- (unsigned long long)priorVersion;
- (bool)selectWithItemIdHash:(id)arg1 outItemMetaRowId:(id*)arg2 outRecordId:(id*)arg3 outItemBufferHash:(id*)arg4 isDuplicate:(bool*)arg5;
- (bool)updateDatasetOptions:(unsigned long long)arg1;
- (bool)updateItemRankForItemMetaRowId:(id)arg1 rank:(unsigned long long)arg2;
- (bool)updateItemWithItemMetaRowId:(id)arg1 itemIdHash:(id)arg2 recordId:(id)arg3 itemBuffer:(id)arg4 itemBufferHash:(id)arg5 rank:(unsigned long long)arg6;
- (id)updateValidityHash;
- (unsigned long long)updateVersion;

@end
