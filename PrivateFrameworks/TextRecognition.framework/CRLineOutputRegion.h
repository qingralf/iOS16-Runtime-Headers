/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TextRecognition.framework/TextRecognition
 */

@interface CRLineOutputRegion : CRCompositeOutputRegion {
    unsigned long long  _lineWrappingType;
    bool  _useLineSeparatorAsLineBreak;
}

@property unsigned long long lineWrappingType;
@property (readonly) bool shouldWrapToNextLine;
@property bool useLineSeparatorAsLineBreak;

+ (id)_lineWithChildren:(id)arg1 confidence:(int)arg2 quad:(id)arg3 baselineAngle:(double)arg4;
+ (id)lineWithCharacters:(id)arg1 confidence:(int)arg2 quad:(id)arg3 baselineAngle:(double)arg4;
+ (id)lineWithText:(id)arg1 confidence:(int)arg2 quad:(id)arg3 baselineAngle:(double)arg4;
+ (id)lineWithTextFeature:(id)arg1 candidateIdx:(long long)arg2 subfeatureType:(unsigned long long)arg3 imageSize:(struct CGSize { double x1; double x2; })arg4 confidenceThresholdProvider:(id)arg5 injectSpaceCharacter:(bool)arg6;
+ (id)lineWithTextFeature:(id)arg1 subfeatureType:(unsigned long long)arg2 imageSize:(struct CGSize { double x1; double x2; })arg3 confidenceThresholdProvider:(id)arg4;
+ (id)lineWithTextFeature:(id)arg1 subfeatureType:(unsigned long long)arg2 imageSize:(struct CGSize { double x1; double x2; })arg3 confidenceThresholdProvider:(id)arg4 injectSpaceCharacter:(bool)arg5;
+ (id)lineWithWords:(id)arg1 confidence:(int)arg2 quad:(id)arg3 baselineAngle:(double)arg4;

- (id)contentBaselines;
- (id)copyWithZone:(struct _NSZone { }*)arg1 copyChildren:(bool)arg2 copyCandidates:(bool)arg3;
- (id)crCodableDataRepresentation;
- (id)initWithCRCodableDataRepresentation:(id)arg1 version:(long long)arg2 offset:(unsigned long long*)arg3;
- (bool)isEqual:(id)arg1;
- (id)joiningDelimiter;
- (unsigned long long)lineWrappingType;
- (void)setLineWrappingType:(unsigned long long)arg1;
- (void)setUseLineSeparatorAsLineBreak:(bool)arg1;
- (bool)shouldWrapToNextLine;
- (unsigned long long)type;
- (bool)useLineSeparatorAsLineBreak;
- (long long)wordCount;

@end
