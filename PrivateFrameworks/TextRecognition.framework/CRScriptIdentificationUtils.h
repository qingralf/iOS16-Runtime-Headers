/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TextRecognition.framework/TextRecognition
 */

@interface CRScriptIdentificationUtils : NSObject

+ (void)assignScriptCategory:(id)arg1 probability:(void*)arg2 assignedIndex:(long long)arg3 scriptCount:(struct vector<long, std::allocator<long>> { long long *x1; long long *x2; struct __compressed_pair<long *, std::allocator<long>> { long long *x_3_1_1; } x3; })arg4;
+ (void)checkUseSequenceScriptLocale:(id)arg1 probability:(void*)arg2 assignedIndex:(long long)arg3 size:(struct CGSize { double x1; double x2; })arg4;
+ (long long)computeAssignedIndex:(void*)arg1 scriptRatioThresholds:(id)arg2;
+ (void)computeSingleTextFeatureScriptCategory:(id)arg1 scriptMap:(const void*)arg2 scriptRatioThresholds:(id)arg3;
+ (void)computeTextFeatureScriptCategory:(id)arg1 scriptMap:(const void*)arg2 scriptMapFullTile:(const void*)arg3 withScaleIds:(const void*)arg4 scriptRatioThresholds:(id)arg5;
+ (struct vector<std::unique_ptr<CRImageBuffer>, std::allocator<std::unique_ptr<CRImageBuffer>>> { void *x1; void *x2; struct __compressed_pair<std::unique_ptr<CRImageBuffer> *, std::allocator<std::unique_ptr<CRImageBuffer>>> { void *x_3_1_1; } x3; })createMaps:(struct CGSize { double x1; double x2; })arg1 channels:(long long)arg2;
+ (struct vector<std::unique_ptr<CRImageBuffer>, std::allocator<std::unique_ptr<CRImageBuffer>>> { void *x1; void *x2; struct __compressed_pair<std::unique_ptr<CRImageBuffer> *, std::allocator<std::unique_ptr<CRImageBuffer>>> { void *x_3_1_1; } x3; })createMapsFromMLMultiArray:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 channels:(long long)arg3;
+ (struct vector<float *, std::allocator<float *>> { float **x1; float **x2; struct __compressed_pair<float **, std::allocator<float *>> { float **x_3_1_1; } x3; })getBufferData:(const void*)arg1;

@end
