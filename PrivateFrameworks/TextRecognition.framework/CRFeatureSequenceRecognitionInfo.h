/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TextRecognition.framework/TextRecognition
 */

@interface CRFeatureSequenceRecognitionInfo : NSObject <CRTextRecognizerFeatureInfo> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _bounds;
    struct CGSize { 
        double width; 
        double height; 
    }  _featureImageSize;
    long long  _orientationAdjustment;
    double  _orientationConfidence;
    NSString * _orientationOutputResult;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _rotatedROI;
    float  _scale;
    NSString * _sequenceScript;
    NSString * _sequenceScriptOutputResult;
    CRTextFeature * _textFeature;
    NSObject<CRTextRecognizerDecodingTransientResult> * _transientDecodingResult;
}

@property struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property struct CGSize { double x1; double x2; } featureImageSize;
@property (readonly) unsigned long long hash;
@property long long orientationAdjustment;
@property double orientationConfidence;
@property (retain) NSString *orientationOutputResult;
@property struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } rotatedROI;
@property float scale;
@property (retain) NSString *sequenceScript;
@property (retain) NSString *sequenceScriptOutputResult;
@property (readonly) Class superclass;
@property (retain) CRTextFeature *textFeature;
@property (retain) NSObject<CRTextRecognizerDecodingTransientResult> *transientDecodingResult;

+ (id)infoForFeature:(id)arg1 scale:(float)arg2 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 featureImageSize:(struct CGSize { double x1; double x2; })arg4 rotatedROI:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (struct CGSize { double x1; double x2; })featureImageSize;
- (long long)orientationAdjustment;
- (double)orientationConfidence;
- (id)orientationOutputResult;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rotatedROI;
- (float)scale;
- (id)sequenceScript;
- (id)sequenceScriptOutputResult;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFeatureImageSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setOrientationAdjustment:(long long)arg1;
- (void)setOrientationConfidence:(double)arg1;
- (void)setOrientationOutputResult:(id)arg1;
- (void)setRotatedROI:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setScale:(float)arg1;
- (void)setSequenceScript:(id)arg1;
- (void)setSequenceScriptOutputResult:(id)arg1;
- (void)setTextFeature:(id)arg1;
- (void)setTransientDecodingResult:(id)arg1;
- (id)textFeature;
- (id)transientDecodingResult;

@end
