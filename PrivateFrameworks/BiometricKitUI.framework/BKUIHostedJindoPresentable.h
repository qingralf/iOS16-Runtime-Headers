/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/BiometricKitUI.framework/BiometricKitUI
 */

@interface BKUIHostedJindoPresentable : UIViewController <BNHostedContentProviding, BNPresentable, BNPresentableObserving, SBUISystemApertureElement, SBUISystemApertureElementProviding> {
    long long  _activeLayoutMode;
    NSLayoutConstraint * _centerYAnchor;
    UIView * _contentView;
    long long  _destination;
    BKUIPearlEnrollView * _enrollView;
    double  _height;
    BNBannerSourceLayoutDescription * _layoutDescription;
    UIView<SBUISystemApertureAccessoryView> * _leadingView;
    <BKJindoPresentableObserving> * _observingDelegate;
    long long  _preferredLayoutMode;
    <BNPresentableContext> * _presentableContext;
    NSString * _requestIdentifier;
    UIViewController * _rootViewController;
    UIView<SBUISystemApertureAccessoryView> * _trailingView;
}

@property (nonatomic) long long activeLayoutMode;
@property (nonatomic, readonly, copy) NSString *associatedAppBundleIdentifier;
@property (nonatomic, readonly, copy) NSString *associatedScenePersistenceIdentifier;
@property (nonatomic) bool canRequestAlertingAssertion;
@property (nonatomic, retain) NSLayoutConstraint *centerYAnchor;
@property (nonatomic, readonly) long long contentRole;
@property (nonatomic, retain) UIView *contentView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long destination;
@property (getter=isDraggingDismissalEnabled, nonatomic, readonly) bool draggingDismissalEnabled;
@property (getter=isDraggingInteractionEnabled, nonatomic, readonly) bool draggingInteractionEnabled;
@property (nonatomic, readonly, copy) NSString *elementIdentifier;
@property (nonatomic, retain) BKUIPearlEnrollView *enrollView;
@property (readonly) unsigned long long hash;
@property (nonatomic) double height;
@property (nonatomic, readonly, copy) UIColor *keyColor;
@property (nonatomic, readonly, copy) NSURL *launchURL;
@property (nonatomic, retain) BNBannerSourceLayoutDescription *layoutDescription;
@property (nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *leadingView;
@property (nonatomic, readonly) long long maximumLayoutMode;
@property (nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *minimalView;
@property (nonatomic) unsigned long long minimalViewLayoutAxis;
@property (nonatomic, readonly) long long minimumLayoutMode;
@property (nonatomic) <BKJindoPresentableObserving> *observingDelegate;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } preferredCustomAspectRatio;
@property (nonatomic, readonly) long long preferredCustomLayout;
@property (nonatomic, readonly) double preferredHeightForBottomSafeArea;
@property (nonatomic) long long preferredLayoutMode;
@property (nonatomic, readonly) long long presentableBehavior;
@property (nonatomic) <BNPresentableContext> *presentableContext;
@property (nonatomic, readonly) long long presentableType;
@property (nonatomic, readonly) unsigned long long presentationBehaviors;
@property (nonatomic, readonly) bool preventsAutomaticDismissal;
@property (nonatomic, readonly) bool preventsInteractiveDismissal;
@property (nonatomic, readonly) bool providesHostedContent;
@property (nonatomic, readonly, copy) NSString *requestIdentifier;
@property (nonatomic, readonly, copy) NSString *requesterIdentifier;
@property (nonatomic) UIViewController *rootViewController;
@property (nonatomic, readonly) unsigned long long statusBarStyleOverridesToSuppress;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <SBUISystemApertureElement> *systemApertureElement;
@property (nonatomic, readonly) UIViewController<SBUISystemApertureElement> *systemApertureElementViewController;
@property (getter=isTouchOutsideDismissalEnabled, nonatomic, readonly) bool touchOutsideDismissalEnabled;
@property (nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *trailingView;
@property (nonatomic, readonly) UIViewController *viewController;

+ (id)_bundleID;

- (void).cxx_destruct;
- (long long)activeLayoutMode;
- (id)associatedScenePersistenceIdentifier;
- (id)centerYAnchor;
- (void)collapse;
- (long long)contentRole;
- (id)contentView;
- (long long)destination;
- (id)enrollView;
- (double)height;
- (id)initWithContentHeight:(double)arg1 enrollView:(id)arg2 destination:(long long)arg3;
- (bool)isTouchOutsideDismissalEnabled;
- (id)layoutDescription;
- (id)leadingView;
- (long long)maximumLayoutMode;
- (id)minimalView;
- (long long)minimumLayoutMode;
- (id)observingDelegate;
- (struct CGSize { double x1; double x2; })preferredCustomAspectRatio;
- (double)preferredHeightForBottomSafeArea;
- (long long)preferredLayoutMode;
- (id)presentableContext;
- (void)presentableDidAppearAsBanner:(id)arg1;
- (void)presentableDidDisappearAsBanner:(id)arg1 withReason:(id)arg2;
- (void)presentableWillAppearAsBanner:(id)arg1;
- (void)presentableWillDisappearAsBanner:(id)arg1 withReason:(id)arg2;
- (void)presentableWillNotAppearAsBanner:(id)arg1 withReason:(id)arg2;
- (bool)preventsInteractiveDismissal;
- (bool)providesHostedContent;
- (id)requestIdentifier;
- (id)requesterIdentifier;
- (void)revoke;
- (id)rootViewController;
- (void)setActiveLayoutMode:(long long)arg1;
- (void)setCenterYAnchor:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setEnrollView:(id)arg1;
- (void)setHeight:(double)arg1;
- (void)setLayoutDescription:(id)arg1;
- (void)setObservingDelegate:(id)arg1;
- (void)setPreferredLayoutMode:(long long)arg1;
- (void)setPresentableContext:(id)arg1;
- (void)setRootViewController:(id)arg1;
- (id)systemApertureElement;
- (id)systemApertureElementProvider;
- (id)systemApertureElementViewController;
- (id)trailingView;
- (id)userInfoForPosting;
- (id)viewController;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
