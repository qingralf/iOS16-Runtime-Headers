/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MetricKitCore.framework/MetricKitCore
 */

@interface MXSource : NSObject <MXSourceXPCServer, NSXPCListenerDelegate> {
    NSObject<OS_os_log> * _MXSourceLogHandle;
    NSFileManager * _fileManager;
    NSObject<OS_dispatch_queue> * _iVarQueue;
    NSObject<OS_dispatch_queue> * _requestQueue;
    NSMutableSet * _services;
    NSXPCListener * _xpcListener;
}

@property (retain) NSObject<OS_os_log> *MXSourceLogHandle;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (retain) NSFileManager *fileManager;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *iVarQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *requestQueue;
@property (readonly, retain) NSMutableSet *services;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSXPCListener *xpcListener;

+ (void)sanitizeDeviceMetadataForDiagnostic:(id)arg1;
+ (id)sharedSource;

- (void).cxx_destruct;
- (id)MXSourceLogHandle;
- (id)applicationContainerPathForBundleID:(id)arg1;
- (id)bundleIDFromPid:(int)arg1;
- (id)bundleIDFromURL:(id)arg1;
- (void)cleanDataDirectoryForSource:(long long)arg1;
- (void)cleanDiagnosticsDirectoryForSource:(long long)arg1 andClient:(id)arg2;
- (bool)createDirectoryAtPath:(id)arg1 forClient:(id)arg2 withError:(id*)arg3;
- (void)createServicesForClient:(id)arg1;
- (void)deliverDummyPayloadForClient:(id)arg1;
- (id)fileManager;
- (id)getDiagnosticPayloadForClient:(id)arg1 dateString:(id)arg2;
- (id)iVarQueue;
- (id)init;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)removeDeliveredDiagnosticsForSourceID:(long long)arg1 dateString:(id)arg2;
- (void)removeFilesForSourceID:(long long)arg1;
- (void)removeFilesForSourceID:(long long)arg1 andClient:(id)arg2;
- (id)requestQueue;
- (id)services;
- (void)setFileManager:(id)arg1;
- (void)setIVarQueue:(id)arg1;
- (void)setMXSourceLogHandle:(id)arg1;
- (void)setRequestQueue:(id)arg1;
- (void)setXpcListener:(id)arg1;
- (id)setupSourceDirectoryForSource:(long long)arg1 andClient:(id)arg2;
- (void)stopServices;
- (bool)validateHangTracerData:(id)arg1;
- (bool)validatePayload:(id)arg1;
- (bool)validatePowerlogData:(id)arg1;
- (bool)validateReportCrashData:(id)arg1;
- (bool)validateSpinTracerData:(id)arg1;
- (void)writeDiagnosticDataWithPayload:(id)arg1;
- (bool)writeDiagnosticReport:(id)arg1 atAppContainerPath:(id)arg2 forClient:(id)arg3 withError:(id*)arg4;
- (void)writeMetricDataWithPayload:(id)arg1;
- (id)xpcListener;

@end
