/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
 */

@interface AFPowerContextPolicy : NSObject <NSCopying, NSSecureCoding> {
    struct AFPowerContext { 
        unsigned long long cpuContext; 
        unsigned long long aneContext; 
        unsigned long long gpuContext; 
    }  _asrAssistantPolicy;
    struct AFPowerContext { 
        unsigned long long cpuContext; 
        unsigned long long aneContext; 
        unsigned long long gpuContext; 
    }  _asrDictationPolicy;
    struct AFPowerContext { 
        unsigned long long cpuContext; 
        unsigned long long aneContext; 
        unsigned long long gpuContext; 
    }  _ttsPolicy;
}

@property (nonatomic, readonly) struct AFPowerContext { unsigned long long x1; unsigned long long x2; unsigned long long x3; } asrAssistantPolicy;
@property (nonatomic, readonly) struct AFPowerContext { unsigned long long x1; unsigned long long x2; unsigned long long x3; } asrDictationPolicy;
@property (nonatomic, readonly) struct AFPowerContext { unsigned long long x1; unsigned long long x2; unsigned long long x3; } ttsPolicy;

+ (struct AFPowerContext { unsigned long long x1; unsigned long long x2; unsigned long long x3; })decodePowerContext:(unsigned long long)arg1;
+ (unsigned long long)encodePowerContext:(struct AFPowerContext { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1;
+ (bool)supportsSecureCoding;

- (struct AFPowerContext { unsigned long long x1; unsigned long long x2; unsigned long long x3; })asrAssistantPolicy;
- (struct AFPowerContext { unsigned long long x1; unsigned long long x2; unsigned long long x3; })asrDictationPolicy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)encodePolicy;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)initWithAsrAssistantPolicy:(struct AFPowerContext { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1 asrDictationPolicy:(struct AFPowerContext { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg2 ttsPolicy:(struct AFPowerContext { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithEncodedPolicy:(unsigned long long)arg1;
- (bool)isEqual:(id)arg1;
- (struct AFPowerContext { unsigned long long x1; unsigned long long x2; unsigned long long x3; })ttsPolicy;

@end
