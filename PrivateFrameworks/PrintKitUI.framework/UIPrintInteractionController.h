/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PrintKitUI.framework/PrintKitUI
 */

@interface UIPrintInteractionController : NSObject {
    UIPrintInfo * _activePrintInfo;
    unsigned long long  _backgroundTaskIdentifier;
    id /* block */  _completionHandler;
    long long  _currentPage;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _currentRange;
    long long  _currentRenderingQuality;
    <UIPrintInteractionControllerDelegate> * _delegate;
    UIPrintPageRenderer * _formatterRenderer;
    UIWindowScene * _hostingWindowScene;
    bool  _isContentManaged;
    bool  _manualPrintPageEnabled;
    NSURL * _nupFileURL;
    long long  _pageCount;
    long long  _pageCountWithRanges;
    NSArray * _pageRanges;
    long long  _pagesDrawn;
    UIPrintPaper * _paper;
    UIWindow * _passwordAlertWindow;
    NSString * _pdfPassword;
    NSOperationQueue * _previewQueue;
    NSMutableSet * _previewStates;
    <UIPrintInteractionControllerActivityDelegate> * _printActivityDelegate;
    UIPrintFormatter * _printFormatter;
    UIPrintInfo * _printInfo;
    int  _printInfoState;
    UIPrintPageRenderer * _printPageRenderer;
    UIPrintPanelViewController * _printPanelViewController;
    UIPrintPaper * _printPaper;
    PKPrintSettings * _printSettings;
    bool  _printStateActive;
    PKPrinter * _printer;
    id  _printingItem;
    NSArray * _printingItems;
    UIPrintingProgress * _printingProgress;
    NSURL * _saveFileURL;
    bool  _showPrintingProgress;
    bool  _showsNumberOfCopies;
    bool  _showsPageRange;
    bool  _showsPaperOrientation;
    bool  _showsPaperSelectionForLoadedPapers;
    bool  _showsScalingFactor;
    bool  _supressNotifyDismissed;
    NSURL * _tempPreviewFileURL;
    id  _temporaryRetainCycle;
}

@property (copy) id /* block */ _completionHandler;
@property (retain) UIPrintInfo *activePrintInfo;
@property long long currentPage;
@property struct _NSRange { unsigned long long x1; unsigned long long x2; } currentRange;
@property (nonatomic) <UIPrintInteractionControllerDelegate> *delegate;
@property (retain) UIPrintPageRenderer *formatterRenderer;
@property (nonatomic, retain) UIWindowScene *hostingWindowScene;
@property (nonatomic) bool isContentManaged;
@property bool manualPrintPageEnabled;
@property (nonatomic) long long pageCount;
@property long long pageCountWithRanges;
@property (nonatomic, retain) NSArray *pageRanges;
@property long long pagesDrawn;
@property (nonatomic, retain) UIPrintPaper *paper;
@property (retain) NSString *pdfPassword;
@property (retain) NSMutableSet *previewStates;
@property (nonatomic) <UIPrintInteractionControllerActivityDelegate> *printActivityDelegate;
@property (nonatomic, retain) UIPrintFormatter *printFormatter;
@property (nonatomic, retain) UIPrintInfo *printInfo;
@property int printInfoState;
@property (nonatomic, retain) UIPrintPageRenderer *printPageRenderer;
@property (retain) UIPrintPanelViewController *printPanelViewController;
@property (nonatomic, readonly) UIPrintPaper *printPaper;
@property (retain) PKPrintSettings *printSettings;
@property bool printStateActive;
@property (nonatomic, retain) PKPrinter *printer;
@property (nonatomic, copy) id printingItem;
@property (nonatomic, copy) NSArray *printingItems;
@property (retain) UIPrintingProgress *printingProgress;
@property (retain) NSURL *saveFileURL;
@property bool showPrintingProgress;
@property (nonatomic) bool showsNumberOfCopies;
@property (nonatomic) bool showsPageRange;
@property (nonatomic) bool showsPaperOrientation;
@property (nonatomic) bool showsPaperSelectionForLoadedPapers;
@property (nonatomic) bool showsScalingFactor;
@property bool supressNotifyDismissed;
@property (retain) NSURL *tempPreviewFileURL;

+ (bool)canPrintData:(id)arg1;
+ (bool)canPrintURL:(id)arg1;
+ (bool)isPrintingAvailable;
+ (id)printableUTIs;
+ (id)sharedPrintController;

- (void).cxx_destruct;
- (void)_addPDFWithData:(id)arg1 toContext:(struct CGContext { }*)arg2;
- (bool)_canPrintPDFData:(id)arg1;
- (bool)_canPrintPDFURL:(id)arg1;
- (bool)_canShowAnnotations;
- (bool)_canShowColor;
- (bool)_canShowCopies;
- (bool)_canShowDuplex;
- (bool)_canShowLayout;
- (bool)_canShowOrientation;
- (bool)_canShowPageRange;
- (bool)_canShowPaperList;
- (bool)_canShowPreview;
- (bool)_canShowPunch;
- (bool)_canShowScaling;
- (bool)_canShowStaple;
- (void)_cancelAllPreviewGeneration;
- (void)_cancelManualPrintPage;
- (void)_cancelPreviewQueue:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)_cleanPrintState;
- (void)_completePrintPageWithError:(id)arg1;
- (id /* block */)_completionHandler;
- (id)_convertToPrintableItem:(id)arg1;
- (id)_currentPrintInfo;
- (void)_drawPageWithItem:(id)arg1 toContext:(struct CGContext { }*)arg2;
- (void)_enableManualPrintPage:(bool)arg1;
- (void)_endPrintJobWithAction:(long long)arg1 error:(id)arg2;
- (void)_ensurePDFIsUnlockedFirstAttempt:(bool)arg1 completionHandler:(id /* block */)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_fullPagesRange;
- (bool)_fullRangeNeeded;
- (void)_generatePDFForQuickLookCompletion:(id /* block */)arg1;
- (void)_generatePDFInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 useFullRange:(bool)arg2 withQuality:(long long)arg3 completion:(id /* block */)arg4;
- (void)_generatePDFWithNupForPrintingCompletion:(id /* block */)arg1;
- (void)_generatePrintPreview:(id /* block */)arg1;
- (void)_generatePrintPreviewWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 useFullRange:(bool)arg2 completion:(id /* block */)arg3;
- (id)_getChosenPaperFromDelegateForPaperList:(id)arg1;
- (double)_getCutLengthFromDelegateForPaper:(id)arg1;
- (bool)_isPageCancelled:(id)arg1;
- (void)_manualPrintPage;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_mediaRect;
- (id)_newPDFURLWithPath:(id)arg1 isContentManaged:(bool)arg2;
- (struct CGContext { }*)_newSaveContext:(id)arg1 withMediaRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)_pageRendererAvailable;
- (id)_paperForContentType:(long long)arg1;
- (id)_paperForPDFItem:(id)arg1 withDuplexMode:(long long)arg2;
- (void)_preparePrintInfo;
- (bool)_presentAnimated:(bool)arg1 hostingScene:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_printItemAsync:(id)arg1 completionHandler:(id /* block */)arg2;
- (struct CGSize { double x1; double x2; })_printItemContentSize;
- (void)_printPage;
- (id)_printPageRenderer:(id)arg1;
- (void)_printPageWithDelay:(double)arg1;
- (void)_printPanelDidDismissWithAction:(long long)arg1;
- (void)_printPanelDidPresent;
- (void)_printPanelWillDismissWithAction:(long long)arg1;
- (struct CGSize { double x1; double x2; })_printablePDFDataSize:(id)arg1;
- (struct CGSize { double x1; double x2; })_printablePDFURLSize:(id)arg1;
- (bool)_printingItemIsReallyTallPDF;
- (id)_printingItemPrintablePDFURL;
- (void)_setPrintInfoState:(int)arg1;
- (bool)_setupPrintPanel:(id /* block */)arg1;
- (bool)_setupPrintPanel:(id /* block */)arg1 forPDFGenerationOnly:(bool)arg2;
- (void)_startPrinting;
- (id)_tempFilePath;
- (void)_updateCutterBehavior;
- (void)_updatePageCount;
- (void)_updatePrintInfoWithAnnotations;
- (void)_updatePrintPaper;
- (void)_updateRendererWithQuality:(long long)arg1;
- (id)activePrintInfo;
- (long long)currentPage;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })currentRange;
- (void)dealloc;
- (id)delegate;
- (void)dismissAnimated:(bool)arg1;
- (id)drawPagesWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withExistsURL:(id)arg2 withPreviewState:(id)arg3;
- (id)formatterRenderer;
- (id)hostingWindowScene;
- (id)init;
- (bool)isContentManaged;
- (bool)manualPrintPageEnabled;
- (bool)needRedrawWithNUp;
- (long long)pageCount;
- (long long)pageCountWithRanges;
- (id)pageRanges;
- (long long)pagesDrawn;
- (id)paper;
- (id)pdfPassword;
- (bool)presentAnimated:(bool)arg1 completionHandler:(id /* block */)arg2;
- (bool)presentAnimated:(bool)arg1 hostingScene:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)presentFromBarButtonItem:(id)arg1 animated:(bool)arg2 completionHandler:(id /* block */)arg3;
- (bool)presentFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2 animated:(bool)arg3 completionHandler:(id /* block */)arg4;
- (id)previewStates;
- (id)printActivityDelegate;
- (id)printFormatter;
- (id)printInfo;
- (int)printInfoState;
- (id)printPageRenderer;
- (id)printPanelViewController;
- (id)printPaper;
- (id)printSettings;
- (bool)printStateActive;
- (bool)printToPrinter:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)printer;
- (id)printingItem;
- (id)printingItems;
- (id)printingProgress;
- (id)redrawPDFwithPageRange:(id)arg1;
- (void)removeFileAtURL:(id)arg1;
- (id)rendererToUse;
- (id)saveFileURL;
- (bool)savePDFToURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)savePDFToURL:(id)arg1 showProgress:(bool)arg2 completionHandler:(id /* block */)arg3;
- (bool)savePDFToURL:(id)arg1 showProgress:(bool)arg2 hostingScene:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)setActivePrintInfo:(id)arg1;
- (void)setCurrentPage:(long long)arg1;
- (void)setCurrentRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setFormatterRenderer:(id)arg1;
- (void)setHostingWindowScene:(id)arg1;
- (void)setIsContentManaged:(bool)arg1;
- (void)setManualPrintPageEnabled:(bool)arg1;
- (void)setPageCount:(long long)arg1;
- (void)setPageCountWithRanges:(long long)arg1;
- (void)setPageRanges:(id)arg1;
- (void)setPagesDrawn:(long long)arg1;
- (void)setPaper:(id)arg1;
- (void)setPdfPassword:(id)arg1;
- (void)setPreviewStates:(id)arg1;
- (void)setPrintActivityDelegate:(id)arg1;
- (void)setPrintFormatter:(id)arg1;
- (void)setPrintInfo:(id)arg1;
- (void)setPrintInfoState:(int)arg1;
- (void)setPrintPageRenderer:(id)arg1;
- (void)setPrintPanelViewController:(id)arg1;
- (void)setPrintSettings:(id)arg1;
- (void)setPrintStateActive:(bool)arg1;
- (void)setPrinter:(id)arg1;
- (void)setPrintingItem:(id)arg1;
- (void)setPrintingItems:(id)arg1;
- (void)setPrintingProgress:(id)arg1;
- (void)setSaveFileURL:(id)arg1;
- (void)setShowPrintingProgress:(bool)arg1;
- (void)setShowsNumberOfCopies:(bool)arg1;
- (void)setShowsPageRange:(bool)arg1;
- (void)setShowsPaperOrientation:(bool)arg1;
- (void)setShowsPaperSelectionForLoadedPapers:(bool)arg1;
- (void)setShowsScalingFactor:(bool)arg1;
- (void)setSupressNotifyDismissed:(bool)arg1;
- (void)setTempPreviewFileURL:(id)arg1;
- (void)set_completionHandler:(id /* block */)arg1;
- (bool)showPrintingProgress;
- (bool)showsNumberOfCopies;
- (bool)showsPageRange;
- (bool)showsPaperOrientation;
- (bool)showsPaperSelectionForLoadedPapers;
- (bool)showsScalingFactor;
- (bool)supressNotifyDismissed;
- (id)tempPreviewFileURL;

@end
