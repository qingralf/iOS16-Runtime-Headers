/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerUI.framework/PowerUI
 */

@interface PowerUICECPredictedTimeManager : NSObject <PowerUISignalMonitorDelegate> {
    <_CDLocalContext> * _context;
    NSDate * _deadline;
    NSUserDefaults * _defaults;
    id /* block */  _handler;
    <_DKKnowledgeQuerying> * _knowledgeStore;
    NSObject<OS_os_log> * _log;
    NSDate * _modelDeadline;
    NSArray * _monitors;
    _OSChargingPredictor * _pluggedInPredictor;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _tBypassSignals;
    NSDate * _tModelPredition;
    PowerUITrialManager * _trialManager;
}

@property (nonatomic, retain) <_CDLocalContext> *context;
@property (nonatomic, retain) NSDate *deadline;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSUserDefaults *defaults;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ handler;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <_DKKnowledgeQuerying> *knowledgeStore;
@property (nonatomic, retain) NSObject<OS_os_log> *log;
@property (nonatomic, retain) NSDate *modelDeadline;
@property (nonatomic, retain) NSArray *monitors;
@property (nonatomic, retain) _OSChargingPredictor *pluggedInPredictor;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;
@property (nonatomic) bool tBypassSignals;
@property (nonatomic, retain) NSDate *tModelPredition;
@property (nonatomic, retain) PowerUITrialManager *trialManager;

+ (id)managerWithKnowledgeStore:(id)arg1 withContextStore:(id)arg2 withHandler:(id /* block */)arg3;

- (void).cxx_destruct;
- (id)context;
- (id)deadline;
- (id)deadlineFromMonitors;
- (void)debug;
- (id)defaults;
- (id /* block */)handler;
- (bool)hasSufficientTimeForFullCharge;
- (id)initWithKnowledgeStore:(id)arg1 withContextStore:(id)arg2 withHandler:(id /* block */)arg3;
- (id)knowledgeStore;
- (id)log;
- (id)modelDeadline;
- (void)monitor:(id)arg1 maySuggestNewFullChargeDeadline:(id)arg2;
- (id)monitors;
- (id)pluggedInPredictor;
- (id)predictedUnplugTime;
- (id)queue;
- (void)resetState;
- (void)setContext:(id)arg1;
- (void)setDeadline:(id)arg1;
- (void)setDefaults:(id)arg1;
- (void)setHandler:(id /* block */)arg1;
- (void)setKnowledgeStore:(id)arg1;
- (void)setLog:(id)arg1;
- (void)setModelDeadline:(id)arg1;
- (void)setMonitors:(id)arg1;
- (void)setPluggedInPredictor:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setTBypassSignals:(bool)arg1;
- (void)setTModelPredition:(id)arg1;
- (void)setTrialManager:(id)arg1;
- (void)startAllMonitoring;
- (void)stopAllMonitoring;
- (bool)tBypassSignals;
- (id)tModelPredition;
- (double)timeToFullChargeFromBatteryLevel:(unsigned long long)arg1;
- (id)trialManager;

@end
