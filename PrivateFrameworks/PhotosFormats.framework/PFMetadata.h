/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats
 */

@interface PFMetadata : NSObject <PFMetadata> {
    PFMetadataCore * _internalMetadata;
}

@property (nonatomic, readonly) NSNumber *GIFDelayTime;
@property (nonatomic, readonly) NSNumber *altitude;
@property (nonatomic, readonly) NSString *artworkContentDescription;
@property (nonatomic, readonly) NSNumber *audioDataRate;
@property (nonatomic, readonly) NSNumber *audioSampleRate;
@property (nonatomic, readonly) NSNumber *audioTrackFormat;
@property (nonatomic, readonly) NSNumber *audioTrackFormatFlags;
@property (nonatomic, readonly) NSString *author;
@property (nonatomic, readonly) NSNumber *brightness;
@property (nonatomic, readonly) NSString *burstUuid;
@property (nonatomic, readonly) NSString *cameraMake;
@property (nonatomic, readonly) NSString *cameraModel;
@property (nonatomic, readonly) NSString *cameraSerialNumber;
@property (nonatomic, readonly) NSString *captionAbstract;
@property (nonatomic, readonly) NSString *captureMode;
@property (nonatomic, readonly) struct CGImageMetadata { }*cgImageMetadata;
@property (nonatomic, readonly) NSDictionary *cgImageProperties;
@property (nonatomic, readonly) NSString *codecFourCharCode;
@property (nonatomic, readonly) NSNumber *colorSpace;
@property (nonatomic, readonly) UTType *contentType;
@property (nonatomic, readonly) UTType *contentTypeFromFastModernizeVideoMedia;
@property (nonatomic, readonly) NSDate *creationDate;
@property (nonatomic, readonly) long long creationDateSource;
@property (nonatomic, readonly) NSString *creationDateString;
@property (nonatomic, readonly) long long customRendered;
@property (nonatomic, readonly) NSString *defaultProfileName;
@property (nonatomic, readonly) NSString *deferredPhotoProcessingIdentifier;
@property (nonatomic, readonly) unsigned char detail;
@property (nonatomic, readonly) NSNumber *digitalZoomRatio;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } duration;
@property (nonatomic, readonly) NSNumber *durationTimeInterval;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } exifPixelSize;
@property (nonatomic, readonly) NSNumber *exposureBias;
@property (nonatomic, readonly) NSNumber *exposureTime;
@property (nonatomic, readonly) NSNumber *fNumber;
@property (nonatomic, readonly) NSDate *fileCreationDate;
@property (nonatomic, readonly) NSDate *fileModificationDate;
@property (nonatomic, readonly) unsigned long long fileSize;
@property (nonatomic, readonly) NSDictionary *fileSystemProperties;
@property (nonatomic, readonly) NSURL *fileURL;
@property (nonatomic, readonly) NSString *firmware;
@property (nonatomic, readonly) NSNumber *flashCompensation;
@property (nonatomic, readonly) bool flashFired;
@property (nonatomic, readonly) NSNumber *flashValue;
@property (nonatomic, readonly) NSNumber *focalLength;
@property (nonatomic, readonly) NSNumber *focalLengthIn35mm;
@property (nonatomic, readonly) NSNumber *focusDistance;
@property (nonatomic, readonly) NSNumber *focusMode;
@property (nonatomic, readonly) NSArray *focusPoints;
@property (nonatomic, readonly) NSDate *gpsDateTime;
@property (nonatomic, readonly) NSNumber *gpsHPositioningError;
@property (nonatomic, readonly) CLLocation *gpsLocation;
@property (nonatomic, readonly) NSString *groupingUuid;
@property (nonatomic, readonly) bool hasCustomRendered;
@property (nonatomic, readonly) bool hasHDRGainMap;
@property (nonatomic, readonly) NSNumber *hdrGain;
@property (nonatomic, readonly) id hdrGainMap;
@property (nonatomic, readonly) NSNumber *hdrGainMapPercentageValue;
@property (nonatomic, readonly) NSString *imageCaptureRequestIdentifier;
@property (nonatomic, readonly) NSData *imageData;
@property (nonatomic, readonly) NSNumber *imageDirection;
@property (nonatomic, readonly) NSString *imageDirectionRef;
@property (nonatomic, readonly) struct CGImageSource { }*imageSource;
@property (nonatomic, readonly) bool isAutoLivePhoto;
@property (nonatomic, readonly) bool isAutoloop;
@property (nonatomic, readonly) bool isCinematicVideo;
@property (nonatomic, readonly) bool isDeferredPhotoProxy;
@property (nonatomic, readonly) bool isFrontFacingCamera;
@property (nonatomic, readonly) bool isHDR;
@property (nonatomic, readonly) bool isImage;
@property (nonatomic, readonly) bool isLongExposure;
@property (nonatomic, readonly) bool isMirror;
@property (nonatomic, readonly) bool isMonoskiMedia;
@property (nonatomic, readonly) bool isMovie;
@property (nonatomic, readonly) bool isPhotoBooth;
@property (nonatomic, readonly) bool isPortrait;
@property (nonatomic, readonly) bool isProRes;
@property (nonatomic, readonly) bool isSDOF;
@property (nonatomic, readonly) bool isScreenshot;
@property (nonatomic, readonly) bool isSloMo;
@property (nonatomic, readonly) bool isSpatialOverCapture;
@property (nonatomic, readonly) bool isSyndicationOriginated;
@property (nonatomic, readonly) bool isTimelapse;
@property (nonatomic, readonly) NSNumber *iso;
@property (nonatomic, readonly) NSArray *keywords;
@property (nonatomic, readonly) NSNumber *latitude;
@property (nonatomic, readonly) NSString *lensMake;
@property (nonatomic, readonly) NSNumber *lensMaximumMM;
@property (nonatomic, readonly) NSNumber *lensMinimumMM;
@property (nonatomic, readonly) NSString *lensModel;
@property (nonatomic, readonly) NSNumber *lightSource;
@property (nonatomic, readonly) NSNumber *livePhotoMinimumClientVersion;
@property (nonatomic, readonly) NSString *livePhotoPairingIdentifier;
@property (nonatomic, readonly) float livePhotoVitalityScore;
@property (nonatomic, readonly) NSNumber *longitude;
@property (nonatomic, readonly) NSNumber *meteringMode;
@property (nonatomic, readonly) NSString *montageString;
@property (nonatomic, readonly) NSNumber *nominalFrameRate;
@property (nonatomic, readonly) long long orientation;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } orientedPixelSize;
@property (nonatomic, readonly) NSString *originalFileName;
@property (nonatomic, readonly) NSString *originatingAssetIdentifier;
@property (nonatomic, readonly) NSString *ownerName;
@property (nonatomic, readonly) unsigned long long photoProcessingFlags;
@property (nonatomic, readonly) NSString *photoProcessingIdentifier;
@property (nonatomic, readonly) NSNumber *playbackVariation;
@property (nonatomic, readonly) NSString *portraitInLandscapeCamera;
@property (nonatomic, readonly) NSString *profileName;
@property (nonatomic, readonly) NSString *renderOriginatingAssetIdentifier;
@property (nonatomic, readonly) NSNumber *semanticStylePreset;
@property (nonatomic, readonly) NSNumber *semanticStyleRenderingVersion;
@property (nonatomic, readonly) NSNumber *semanticStyleToneBias;
@property (nonatomic, readonly) NSNumber *semanticStyleWarmthBias;
@property (nonatomic, readonly) long long sourceType;
@property (nonatomic, readonly) NSString *spatialOverCaptureIdentifier;
@property (nonatomic, readonly) NSNumber *speed;
@property (nonatomic, readonly) NSString *speedRef;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } stillImageDisplayTime;
@property (nonatomic, readonly) NSDictionary *syndicationProperties;
@property (nonatomic, readonly) NSTimeZone *timeZone;
@property (nonatomic, readonly) PFTimeZoneLookup *timeZoneLookup;
@property (nonatomic, readonly) NSString *timeZoneName;
@property (nonatomic, readonly) NSNumber *timeZoneOffset;
@property (nonatomic, readonly) NSString *title;
@property (nonatomic, readonly) NSString *userComment;
@property (nonatomic, readonly) NSDate *utcCreationDate;
@property (nonatomic, readonly) NSString *videoCodecName;
@property (nonatomic, readonly) NSNumber *videoDataRate;
@property (nonatomic, readonly) NSNumber *videoDynamicRange;
@property (nonatomic, readonly) NSNumber *whiteBalance;
@property (nonatomic, readonly) NSNumber *whiteBalanceIndex;

+ (struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; })audioStreamBasicDescriptionForAsset:(id)arg1;
+ (id)defaultOptionsForCGImageSource;
+ (id)exifTimezoneOffsetFromDateString:(id)arg1 offsetInSeconds:(long long*)arg2;
+ (struct opaqueCMFormatDescription { }*)formatDescriptionForAsset:(id)arg1;
+ (bool)parseISO6709String:(id)arg1 outLatitude:(double*)arg2 outLongitude:(double*)arg3;
+ (id)primaryAudioTrackForAsset:(id)arg1;
+ (id)primaryVideoTrackForAsset:(id)arg1;

- (void).cxx_destruct;
- (bool)_respondsToSelector:(SEL)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)exifAuxDictionary;
- (id)exifDictionary;
- (void)fixupGPSWithDate:(id)arg1 time:(id)arg2;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)gpsDictionary;
- (id)initForLimitedPropertiesWithPath:(id)arg1;
- (id)initWithAVAsset:(id)arg1 detail:(unsigned char)arg2 timeZoneLookup:(id)arg3;
- (id)initWithAVProxyData:(id)arg1 timeZoneLookup:(id)arg2;
- (id)initWithAVURL:(id)arg1 detail:(unsigned char)arg2 timeZoneLookup:(id)arg3;
- (id)initWithEncodedImagePropertyData:(id)arg1 contentType:(id)arg2 timeZoneLookup:(id)arg3;
- (id)initWithImageCaptureMovieProperties:(id)arg1 contentType:(id)arg2 timeZoneLookup:(id)arg3;
- (id)initWithImageData:(id)arg1 contentType:(id)arg2 options:(id)arg3 detail:(unsigned char)arg4 timeZoneLookup:(id)arg5 cacheImageSource:(bool)arg6 cacheImageData:(bool)arg7;
- (id)initWithImageProperties:(id)arg1 contentType:(id)arg2 timeZoneLookup:(id)arg3;
- (id)initWithImageSource:(struct CGImageSource { }*)arg1 contentType:(id)arg2 options:(id)arg3 detail:(unsigned char)arg4 timeZoneLookup:(id)arg5 cacheImageSource:(bool)arg6;
- (id)initWithImageURL:(id)arg1 contentType:(id)arg2 options:(id)arg3 detail:(unsigned char)arg4 timeZoneLookup:(id)arg5 cacheImageSource:(bool)arg6 cacheImageData:(bool)arg7;
- (id)initWithMediaURL:(id)arg1 detail:(unsigned char)arg2 timeZoneLookup:(id)arg3 shouldCache:(bool)arg4;
- (id)initWithPropertyListRepresentationData:(id)arg1 timeZoneLookup:(id)arg2;
- (id)initWithSyndicationProperties:(id)arg1;
- (id)iptcDictionary;
- (bool)isEqual:(id)arg1;
- (id)jsonDictionary;
- (id)jsonFormattedDescriptionWithError:(id*)arg1;
- (id)makerAppleDictionary;
- (id)makerCanonDictionary;
- (id)makerNikonDictionary;
- (id)plistForEncoding;
- (id)propertyListRepresentationData;
- (bool)respondsToSelector:(SEL)arg1;
- (void)setFileSystemProperties:(id)arg1;
- (void)setKeysAndValues:(id)arg1 inDictionary:(id)arg2;
- (id)sourceTypeName;
- (id)tiffDictionary;

@end
