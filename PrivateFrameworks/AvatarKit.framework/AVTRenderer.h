/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit
 */

@interface AVTRenderer : SCNRenderer <SCNSceneRendererDelegate, _SCNSceneCommandBufferStatusMonitor, _SCNSceneRendererDelegateSPI, _SCNSceneRendererResourceManagerMonitor> {
    unsigned long long  _antialiasingMode;
    AVTARMaskRenderer * _arMaskRenderer;
    bool  _arMaskRendererHasFlippedDepth;
    SCNTechnique * _arMaskTechnique;
    bool  _arMode;
    AVTAvatar * _avatar;
    SCNNode * _avatarNode;
    AVTAvatarEnvironment * _environment;
    AVTFaceTracker * _faceTracker;
    NSLock * _lock;
    bool  _pauseSimulation;
}

@property (nonatomic) bool arMode;
@property (nonatomic, retain) AVTAvatar *avatar;
@property (nonatomic) unsigned long long avt_antialiasingMode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) AVTFaceTracker *faceTracker;
@property (nonatomic, copy) NSString *framingMode;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool pauseSimulation;
@property (readonly) Class superclass;

+ (id)renderer;

- (void).cxx_destruct;
- (void)__setAvatar:(id)arg1;
- (void)_avtSetupWithOptions:(id)arg1;
- (void)_detachAvatarFromRenderer;
- (id)_initWithOptions:(id)arg1 isPrivateRenderer:(bool)arg2 privateRendererOwner:(id)arg3 clearsOnDraw:(bool)arg4 context:(void*)arg5 renderingAPI:(unsigned long long)arg6;
- (void)_renderer:(id)arg1 didApplyAnimationsAtTime:(double)arg2;
- (void)_renderer:(id)arg1 didBuildSubdivDataForHash:(id)arg2 dataProvider:(id /* block */)arg3;
- (id)_renderer:(id)arg1 subdivDataForHash:(id)arg2;
- (void)_renderer:(id)arg1 updateAtTime:(double)arg2;
- (void)_setAvatar:(id)arg1;
- (void)_updateAvatarForARMode;
- (bool)arMode;
- (id)avatar;
- (void)avatarDidChange;
- (unsigned long long)avt_antialiasingMode;
- (id)capturedDepth;
- (void)dealloc;
- (bool)enableDepthMask;
- (id)faceTracker;
- (void)faceTrackerDidUpdate:(id)arg1 trackingInfo:(id)arg2;
- (void)fadePuppetToWhite:(float)arg1;
- (id)framingMode;
- (bool)pauseSimulation;
- (void)renderAtTime:(double)arg1 viewport:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 commandBuffer:(id)arg3 passDescriptor:(id)arg4;
- (void)renderWithViewport:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 commandBuffer:(id)arg2 passDescriptor:(id)arg3;
- (void)renderer:(id)arg1 commandBufferDidCompleteWithError:(id)arg2;
- (void)renderer:(id)arg1 didFallbackToDefaultTextureForSource:(id)arg2 message:(id)arg3;
- (void)setArMode:(bool)arg1;
- (void)setAvatar:(id)arg1;
- (void)setAvt_antialiasingMode:(unsigned long long)arg1;
- (void)setCapturedDepth:(id)arg1;
- (void)setEnableDepthMask:(bool)arg1;
- (void)setEnableDepthMask:(bool)arg1 withFlippedDepth:(bool)arg2;
- (void)setFaceTracker:(id)arg1;
- (void)setFramingMode:(id)arg1;
- (void)setPauseSimulation:(bool)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)updateProjectionMatrixForARModeIfNeeded:(struct CGSize { double x1; double x2; })arg1;

@end
