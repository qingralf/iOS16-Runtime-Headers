/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Portrait.framework/Portrait
 */

@interface PTEffectRelighting : NSObject {
    SingleColorCubeCorrectionStage * _colorCube;
    int  _colorCubeType;
    <MTLCommandQueue> * _commandQueue;
    <MTLComputePipelineState> * _createLightMask;
    <MTLDevice> * _device;
    PTMTLDropHints * _dropHints;
    float  _eyeRadiusFactor;
    <MTLComputePipelineState> * _fgBgForDebug;
    <MTLComputePipelineState> * _filterLightGainApplyToRGB;
    int  _frameIndex;
    <MTLTexture> * _lightGainMapFiltered;
    <MTLTexture> * _lightGainMapLowRes;
    <MTLTexture> * _lightGainMapLowResFiltered;
    float  _lightGainMapScale;
    <MTLComputePipelineState> * _lightMaskForDebug;
    <MTLComputePipelineState> * _lightMaskOutline;
    <MTLTexture> * _lightMasks;
    PTMSRResize * _msrColorPyramid;
    struct RelightingParam { 
        float bgLightIntensity[3]; 
        float bgVignetteLightIntensity[3]; 
        float bgVignetteFalloff; 
        float fgOffsetFactorNear; 
        float fgOffsetFactorFar; 
        float bgThresholdDisparity; 
        float bgEffectThresholdDisparity; 
        float fgLightDesaturation; 
        float fgLightColor[3]; 
        float bgToneCurveReciprocal[3]; 
    }  _parameters;
    <MTLTexture> * _quarterSizeRGBA;
    <MTLComputePipelineState> * _relightFullsizeInput;
    <MTLTexture> * _relightSizeRGBA;
    struct SmoothFaceRectData { 
        float aspect; 
        float lightMaskExponent; 
        float preumbraBendFactor; 
        float lightMaskWidth; 
        float lightMaskFaceOffsetY; 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void*faceEyeWeight; 
    }  _smoothFaceRects;
    <MTLComputePipelineState> * _studioLight;
    <MTLComputePipelineState> * _studioLightDebug;
    PTSyntheticLight * _syntheticLight;
    PTUtil * _util;
    float  _weightHeadEye;
}

- (void).cxx_destruct;
- (id)colorCube;
- (int)commaSeparatedString:(id)arg1 toFloatArray:(float*)arg2 maxCount:(int)arg3;
- (void)computeSmoothFaceRect:(id)arg1 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg2;
- (void)estimateLightIntensity:(id)arg1 inChroma:(id)arg2 inFaceRects:(/* Warning: Unrecognized filer type: '3' using 'void*' */ void**)arg3 numberOfFaceRects:(int)arg4 focusFaceIndex:(id)arg5 humanDetections:(id)arg6 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg7;
- (void)fgBgForDebug:(id)arg1 inDisparity:(id)arg2 inNormal:(id)arg3 inFocusObject:(id)arg4 outMask:(id)arg5 debugType:(long long)arg6;
- (int)filterLightGainApplyToRGB:(id)arg1 inRGB:(id)arg2 outRGB:(id)arg3 filterLightGainMapLowres:(bool)arg4;
- (id)gainMap;
- (void)initRelightingParam;
- (id)initWithDevice:(id)arg1 library:(id)arg2 pipelineLibrary:(id)arg3 commandQueue:(id)arg4 faceAttributesNetwork:(id)arg5 effectUtil:(id)arg6 util:(id)arg7 prewarmOnly:(bool)arg8 colorSize:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg9 msrColorPyramid:(id)arg10 sharedResources:(id)arg11;
- (void)lightMaskDebug:(id)arg1 msrColorPyramid:(id)arg2 outFaceMask:(id)arg3;
- (void)reset;
- (struct SmoothFaceRectData { float x1; float x2; float x3; float x4; float x5; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_6_1_1[2]; } x6; }*)smoothFaceRects;
- (void)studioLight:(id)arg1 inLuma:(id)arg2 inChroma:(id)arg3 inNormal:(id)arg4 inDisparity:(id)arg5 inFocusObject:(id)arg6 outPTTexture:(id)arg7 outRgbaPyramid:(id)arg8 colorTransferFunction:(int)arg9 colorYCbCrMatrix:(int)arg10;
- (id)syntheticLight;
- (void)updateColorCube;
- (void)updateParamters;

@end
