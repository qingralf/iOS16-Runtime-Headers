/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoverSheetKit.framework/CoverSheetKit
 */

@interface CSProminentDisplayViewController : UIViewController {
    NSString * _alternateCalendarIdentifier;
    NSLocale * _alternateCalendarLocale;
    BSUIVibrancyLUT * _alternativeVibrancyEffectLUT;
    long long  _backgroundType;
    UIFont * _baseFont;
    UIViewController * _complicationContainerViewController;
    double  _complicationRowAlpha;
    CSProminentDisplayInteractiveTransition * _currentTransition;
    NSDate * _displayDate;
    long long  _effectType;
    NSString * _groupName;
    NSString * _numberingSystem;
    bool  _shouldApplyVibrancyToComplications;
    UIViewController * _subtitleComplicationViewController;
    UIColor * _textColor;
    double  _timeAlpha;
    BSUIVibrancyConfiguration * _vibrancyConfiguration;
    long long  _vibrancyContentType;
    unsigned long long  _visibleElements;
}

@property (nonatomic, copy) NSString *alternateCalendarIdentifier;
@property (nonatomic, retain) NSLocale *alternateCalendarLocale;
@property (nonatomic, readonly) BSUIVibrancyLUT *alternativeVibrancyEffectLUT;
@property (nonatomic) long long backgroundType;
@property (nonatomic, readonly) UIView *backgroundView;
@property (nonatomic, retain) UIFont *baseFont;
@property (nonatomic, retain) UIViewController *complicationContainerViewController;
@property (nonatomic) double complicationRowAlpha;
@property (nonatomic, retain) CSProminentDisplayInteractiveTransition *currentTransition;
@property (nonatomic, retain) NSDate *displayDate;
@property (nonatomic) long long effectType;
@property (nonatomic, copy) NSString *groupName;
@property (nonatomic, copy) NSString *numberingSystem;
@property (nonatomic) bool shouldApplyVibrancyToComplications;
@property (nonatomic, retain) UIViewController *subtitleComplicationViewController;
@property (nonatomic, retain) UIColor *textColor;
@property (nonatomic) double timeAlpha;
@property (nonatomic) bool usesEditingLayout;
@property (nonatomic) bool usesLandscapeTimeFontVariant;
@property (nonatomic) bool usesLightTimeFontVariant;
@property (nonatomic, readonly) BSUIVibrancyConfiguration *vibrancyConfiguration;
@property (nonatomic) long long vibrancyContentType;
@property (nonatomic) unsigned long long visibleElements;

// Image: /System/Library/PrivateFrameworks/CoverSheetKit.framework/CoverSheetKit

+ (Class)viewClass;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (void)_createOrDestoryVibrancyShadowViewIfNecessary;
- (void)_createOrDestroyComplicationRowElementIfNecessary;
- (void)_createOrDestroySubtitleComplicationElementIfNecessary;
- (void)_createOrDestroySubtitleElementIfNecessary;
- (void)_createOrDestroyTimeElementIfNecessary;
- (id)_customSubtitleGlyphWithName:(id)arg1;
- (id)_displayView;
- (id)_displayViewIfLoaded;
- (bool)_elements:(unsigned long long)arg1 containElement:(unsigned long long)arg2;
- (id)_fallbackDate;
- (bool)_isShowingAnySubtitle;
- (bool)_isShowingComplicationRow;
- (bool)_isShowingElement:(unsigned long long)arg1;
- (bool)_isShowingSubtitle;
- (bool)_isShowingSubtitleComplication;
- (bool)_isShowingTime;
- (bool)_isShowingTransientSubtitle;
- (void)_updateElements;
- (void)_updateViewColors;
- (id)alternateCalendarIdentifier;
- (id)alternateCalendarLocale;
- (id)alternativeVibrancyEffectLUT;
- (long long)backgroundType;
- (id)backgroundView;
- (id)baseFont;
- (id)beginInteractiveTransitionToBaseFont:(id)arg1 textColor:(id)arg2;
- (id)beginInteractiveTransitionToBaseFont:(id)arg1 vibrancyConfiguration:(id)arg2;
- (id)complicationContainerViewController;
- (double)complicationRowAlpha;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentBoundingBox;
- (id)currentTransition;
- (id)displayDate;
- (long long)effectType;
- (id)effectiveTextColor;
- (id)groupName;
- (id)init;
- (id)initWithElements:(unsigned long long)arg1 baseFont:(id)arg2 date:(id)arg3 textColor:(id)arg4;
- (id)initWithElements:(unsigned long long)arg1 date:(id)arg2 textColor:(id)arg3;
- (void)interactiveTransition:(id)arg1 didFinishSuccessfully:(bool)arg2;
- (void)interactiveTransition:(id)arg1 didUpdate:(double)arg2;
- (void)loadView;
- (id)numberingSystem;
- (void)setAlternateCalendarIdentifier:(id)arg1;
- (void)setAlternateCalendarIdentifier:(id)arg1 locale:(id)arg2;
- (void)setAlternateCalendarLocale:(id)arg1;
- (void)setAlternativeVibrancyEffectLUTIdentifier:(id)arg1 alternativeVibrancyEffectLUTBundleURL:(id)arg2;
- (void)setBackgroundType:(long long)arg1;
- (void)setBaseFont:(id)arg1;
- (void)setComplicationContainerViewController:(id)arg1;
- (void)setComplicationRowAlpha:(double)arg1;
- (void)setContentAlpha:(double)arg1;
- (void)setContentAlpha:(double)arg1 forElements:(unsigned long long)arg2;
- (void)setCurrentTransition:(id)arg1;
- (void)setCustomSubtitleWithText:(id)arg1 glyphName:(id)arg2;
- (void)setDisplayDate:(id)arg1;
- (void)setEffectType:(long long)arg1;
- (void)setGroupName:(id)arg1;
- (void)setNumberingSystem:(id)arg1;
- (void)setShouldApplyVibrancyToComplications:(bool)arg1;
- (void)setSubtitleComplicationViewController:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)setTimeAlpha:(double)arg1;
- (void)setTransientSubtitleText:(id)arg1;
- (void)setTransientSubtitleText:(id)arg1 withTimeout:(double)arg2;
- (void)setUsesEditingLayout:(bool)arg1;
- (void)setUsesLandscapeTimeFontVariant:(bool)arg1;
- (void)setUsesLightTimeFontVariant:(bool)arg1;
- (void)setVibrancyContentType:(long long)arg1;
- (void)setVisibleElements:(unsigned long long)arg1;
- (bool)shouldApplyVibrancyToComplications;
- (id)subtitleComplicationViewController;
- (id)textColor;
- (double)timeAlpha;
- (void)updateCustomSubtitleWithText:(id)arg1;
- (bool)usesEditingLayout;
- (bool)usesLandscapeTimeFontVariant;
- (bool)usesLightTimeFontVariant;
- (id)vibrancyConfiguration;
- (long long)vibrancyContentType;
- (void)viewDidLoad;
- (unsigned long long)visibleElements;

// Image: /System/Library/PrivateFrameworks/PosterKit.framework/PosterKit

- (void)_pr_updateAlternateCalendarIdentifier;
- (void)pr_setAlternateDateEnabled:(bool)arg1;
- (void)pr_setStylingFromTitleStyleConfiguration:(id)arg1 extensionBundleURL:(id)arg2;
- (void)pr_setSubtitleHidden:(bool)arg1;
- (void)pr_setTitleColor:(id)arg1 timeFont:(id)arg2 timeNumberingSystem:(id)arg3 alternateDateEnabled:(bool)arg4 groupName:(id)arg5 extensionBundleURL:(id)arg6;

@end
