/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreChart.framework/CoreChart
 */

@interface CCVegaMarkItem : NSObject <CCVegaMarkItemInterface> {
    JSValue * _items;
    JSValue * mark;
}

@property (readonly) NSString *align;
@property (readonly) double angle;
@property (readonly) NSString *baseline;
@property (nonatomic, retain) CALayer *caLayer;
@property (readonly) bool clip;
@property (readonly) double cornerRadius;
@property (readonly) double dx;
@property (readonly) double dy;
@property (readonly) NSObject<CCVegaColorOrGradientInterface> *fill;
@property (readonly) double fillOpacity;
@property (readonly) NSString *font;
@property (readonly) double fontSize;
@property (readonly) NSString *fontStyle;
@property (readonly) NSString *fontWeight;
@property (readonly) double height;
@property (readonly) NSString *interpolate;
@property (nonatomic) bool isDirty;
@property (nonatomic, readonly) unsigned long long itemCount;
@property (retain) JSValue *mark;
@property (readonly) double opacity;
@property (readonly) NSString *orient;
@property (readonly) NSString *path;
@property (readonly) double radius;
@property (readonly) NSString *shape;
@property (readonly) double size;
@property (readonly) NSObject<CCVegaColorOrGradientInterface> *stroke;
@property (readonly) NSString *strokeCap;
@property (readonly) NSArray *strokeDash;
@property (readonly) NSString *strokeJoin;
@property (readonly) double strokeMiterLimit;
@property (readonly) double strokeOpacity;
@property (readonly) double strokeWidth;
@property (readonly) double theta;
@property (readonly) double width;
@property (readonly) double x;
@property (readonly) double x2;
@property (readonly) double y;
@property (readonly) double y2;
@property (readonly) double zindex;

- (void).cxx_destruct;
- (id)align;
- (double)angle;
- (id)baseline;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (id)caLayer;
- (bool)clip;
- (double)cornerRadius;
- (bool)defined;
- (double)dx;
- (double)dy;
- (id)fill;
- (double)fillOpacity;
- (id)font;
- (double)fontSize;
- (id)fontStyle;
- (id)fontWeight;
- (bool)getBoolean:(id)arg1 defaultValue:(bool)arg2;
- (double)getDouble:(id)arg1 defaultValue:(double)arg2;
- (id)getObject:(id)arg1 defaultValue:(id)arg2;
- (id)getString:(id)arg1 defaultValue:(id)arg2;
- (id)getText;
- (double)height;
- (id)initWithJSValue:(id)arg1;
- (id)interpolate;
- (bool)isDirty;
- (bool)isEqual:(id)arg1;
- (id)itemAtIndex:(unsigned long long)arg1;
- (unsigned long long)itemCount;
- (id)mark;
- (struct CGPath { }*)newPathByCallingShapeFunction;
- (double)opacity;
- (id)orient;
- (id)path;
- (double)radius;
- (void)setCaLayer:(id)arg1;
- (void)setIsDirty:(bool)arg1;
- (void)setMark:(id)arg1;
- (id)shape;
- (double)size;
- (id)stroke;
- (id)strokeCap;
- (id)strokeDash;
- (id)strokeJoin;
- (double)strokeMiterLimit;
- (double)strokeOpacity;
- (double)strokeWidth;
- (double)theta;
- (double)width;
- (double)x;
- (double)x2;
- (double)y;
- (double)y2;
- (double)zindex;

@end
