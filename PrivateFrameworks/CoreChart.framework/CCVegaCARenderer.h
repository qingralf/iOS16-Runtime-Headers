/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreChart.framework/CoreChart
 */

@interface CCVegaCARenderer : NSObject <CCVegaCARendererDelegateInterface> {
    CCVegaAccessibilityHelper * _accessibilityHelper;
    struct CGSize { 
        double width; 
        double height; 
    }  _containerSize;
    CALayer * _contentLayer;
    struct CGPoint { 
        double x; 
        double y; 
    }  _currentTranslate;
    bool  _dirty;
    bool  _dirtyAll;
    double  _height;
    NSMutableDictionary * _imageCache;
    bool  _initialized;
    NSDictionary * _marks;
    double  _originX;
    double  _originY;
    bool  _pendingUpdate;
    bool  _pendingUpdateDirtyAll;
    CCVegaRenderer * _renderer;
    CALayer * _rootLayer;
    bool  _updateFromBackground;
    double  _width;
    NSArray * accessibilityElements;
    NSString * backgroundColor;
    struct CGSize { 
        double width; 
        double height; 
    }  containerSize;
    JSContext * context;
    double  pixelRatio;
    JSManagedValue * scenegraphRoot;
    double  zoomFactor;
}

@property (readonly) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } _currentCombinedCTM;
@property (retain) NSArray *accessibilityElements;
@property (retain) NSString *backgroundColor;
@property struct CGSize { double x1; double x2; } containerSize;
@property JSContext *context;
@property double pixelRatio;
@property CALayer *rootLayer;
@property (retain) JSManagedValue *scenegraphRoot;
@property double zoomFactor;

- (void).cxx_destruct;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_currentCombinedCTM;
- (id)accessibilityElements;
- (void)applyClip:(id)arg1 onLayer:(id)arg2;
- (id)backgroundColor;
- (void)callFromJSFunction:(id /* block */)arg1;
- (id)compositingFilterForItem:(id)arg1;
- (struct CGSize { double x1; double x2; })containerSize;
- (id)context;
- (void)dealloc;
- (void)dirty;
- (void)dirtyAll;
- (void)drawMark:(id)arg1 parentGroup:(id)arg2 into:(id)arg3 dirtyAll:(bool)arg4;
- (id)drawMark:(id)arg1 parentGroup:(id)arg2 item:(id)arg3 into:(id)arg4 dirtyAll:(bool)arg5;
- (id)fontOptions;
- (id)initWithRenderer:(id)arg1 context:(id)arg2 rootLayer:(id)arg3 updateFromBackground:(bool)arg4;
- (void)invalidateCaches;
- (id)marks;
- (struct CGColor { }*)newColorFromCSSString:(id)arg1;
- (struct CGColor { }*)newColorFromCSSString:(id)arg1 alpha:(double)arg2;
- (struct CGImage { }*)newImageFromURL:(id)arg1;
- (double)pixelRatio;
- (void)render:(id)arg1;
- (void)resizeWidth:(double)arg1 height:(double)arg2 originX:(double)arg3 originY:(double)arg4;
- (id)rootLayer;
- (id)scenegraphRoot;
- (void)setAccessibilityElements:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setContainerSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setContext:(id)arg1;
- (void)setPixelRatio:(double)arg1;
- (void)setRootLayer:(id)arg1;
- (void)setScenegraphRoot:(id)arg1;
- (void)setZoomFactor:(double)arg1;
- (void)updateCALayers;
- (void)updateCALayers:(id)arg1 dirtyAll:(bool)arg2;
- (double)zoomFactor;

@end
