/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreChart.framework/CoreChart
 */

@interface CCVegaAccessibilityHelper : NSObject {
    NSMutableArray * _children;
    struct { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        bool ariaHidden; 
    }  _currentState;
    NSMutableArray * _elementCache;
    NSMutableArray * _groupStack;
    NSMutableArray * _rootAccessibilityElements;
    struct stack<CCVegaAccessibilityHelperState, std::deque<CCVegaAccessibilityHelperState>> { 
        struct deque<CCVegaAccessibilityHelperState, std::allocator<CCVegaAccessibilityHelperState>> { 
            struct __split_buffer<CCVegaAccessibilityHelperState *, std::allocator<CCVegaAccessibilityHelperState *>> { 
                struct { /* ? */ } **__first_; 
                struct { /* ? */ } **__begin_; 
                struct { /* ? */ } **__end_; 
                struct __compressed_pair<CCVegaAccessibilityHelperState **, std::allocator<CCVegaAccessibilityHelperState *>> { 
                    struct { /* ? */ } **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::allocator<CCVegaAccessibilityHelperState>> { 
                unsigned long long __value_; 
            } __size_; 
        } c; 
    }  _stateStack;
    id  container;
}

@property id container;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addElementWithLabel:(id)arg1 roleDescription:(id)arg2 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (id)container;
- (void)enterGroupWithLabel:(id)arg1 roleDescription:(id)arg2 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)exitGroup;
- (id)getElements;
- (id)initWithElements:(id)arg1;
- (void)markAriaHidden;
- (id)newAccessibilityElementWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)restoreState;
- (void)saveState;
- (void)setContainer:(id)arg1;
- (void)translateX:(double)arg1 Y:(double)arg2;

@end
