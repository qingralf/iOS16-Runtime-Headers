/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreChart.framework/CoreChart
 */

@interface CCTextLayer : CALayer {
    int  _align;
    int  _baseline;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _combinedCTMHint;
    id  _fillColor;
    id  _font;
    NSArray * _lineContents;
    double  _lineHeight;
    NSArray * _lines;
    id  _strokeColor;
    double  _strokeWidth;
    double  _textAngle;
    struct CGPoint { 
        double x; 
        double y; 
    }  _textPosition;
}

@property (nonatomic) int align;
@property (nonatomic) int baseline;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } combinedCTMHint;
@property (nonatomic, retain) id fillColor;
@property (nonatomic, retain) id font;
@property (nonatomic) double lineHeight;
@property (nonatomic, retain) NSArray *lines;
@property (nonatomic, retain) id strokeColor;
@property (nonatomic) double strokeWidth;
@property (nonatomic) double textAngle;
@property (nonatomic) struct CGPoint { double x1; double x2; } textPosition;

+ (id)layer;

- (void).cxx_destruct;
- (int)align;
- (int)baseline;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })combinedCTMHint;
- (void)drawInContext:(struct CGContext { }*)arg1;
- (id)fillColor;
- (id)font;
- (id)init;
- (double)lineHeight;
- (id)lines;
- (void)renderInContext:(struct CGContext { }*)arg1;
- (void)setAlign:(int)arg1;
- (void)setBaseline:(int)arg1;
- (void)setCombinedCTMHint:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setFillColor:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setLineHeight:(double)arg1;
- (void)setLines:(id)arg1;
- (void)setStrokeColor:(id)arg1;
- (void)setStrokeWidth:(double)arg1;
- (void)setTextAngle:(double)arg1;
- (void)setTextPosition:(struct CGPoint { double x1; double x2; })arg1;
- (id)strokeColor;
- (double)strokeWidth;
- (double)textAngle;
- (struct CGPoint { double x1; double x2; })textPosition;
- (void)updateTextContents;

@end
