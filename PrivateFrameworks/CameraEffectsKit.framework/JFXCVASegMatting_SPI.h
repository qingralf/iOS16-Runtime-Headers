/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraEffectsKit.framework/CameraEffectsKit
 */

@interface JFXCVASegMatting_SPI : JFXMatting {
    struct __CVPixelBufferPool { } * _alphaMattePool;
    JFXGuidedUpscaler * _calmFilter;
    int  _cameraType;
    unsigned long long  _currentMattingStatus;
    struct __CVPixelBufferPool { } * _flipColorPool;
    struct __CVBuffer { } * _foregroundColorEstimateBuffer;
    JFXGuidedFilter * _guidedFilter;
    JFXImageScaler * _imageScaler;
    long long  _interfaceOrientation;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _largestFaceRect;
    NSObject<OS_dispatch_queue> * _matteGenQ;
    int  _mode;
    unsigned long long  _previousMattingStatus;
    struct __CVPixelBufferPool { } * _rotColorPool;
    struct __CVPixelBufferPool { } * _rotMattePool;
    struct __CVBuffer { } * _segmentationBuffer;
    struct CVASegmentation { } * _segmenter;
    struct __CVPixelBufferPool { } * _smallAlphaMattePool;
    struct __CVPixelBufferPool { } * _smallForegroundColorPool;
    struct __CVPixelBufferPool { } * _tinyAlphaMattePool;
    bool  _visualizeFaceRect;
}

+ (bool)_defaultMatteGeneratorPrefersDepth;
+ (id)segmentationOptionsForDepth:(struct __CVBuffer { }*)arg1 rotColor:(struct __CVBuffer { }*)arg2 pts:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 cameraType:(int)arg4;

- (void).cxx_destruct;
- (void)alphaMatteForFrameSet:(id)arg1 mattingPerfState:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)combineInnerAndOuterMattes:(struct __CVBuffer { }*)arg1 dilatedOuterMatte:(struct __CVBuffer { }*)arg2;
- (void)dealloc;
- (int)depthThresholdForDepthMap:(struct __CVBuffer { }*)arg1 processData:(struct DepthProcessingDataRGBD { int *x1; int *x2; int *x3; unsigned long long x4; unsigned long long x5; struct __CVBuffer {} *x6; char *x7; id x8; unsigned long long x9; unsigned long long x10; char *x11; char *x12; char *x13; int x14; int x15; int x16; }*)arg2 largestFaceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 interfaceOrientation:(long long)arg4;
- (struct __CVBuffer { }*)dilateImage:(struct __CVBuffer { }*)arg1 toImage:(struct __CVBuffer { }*)arg2 kernelSize:(unsigned long long)arg3;
- (void)erodeImage:(struct __CVBuffer { }*)arg1 toImage:(struct __CVBuffer { }*)arg2 kernelSize:(unsigned long long)arg3;
- (struct __CVBuffer { }*)garbageMatteForFrameSet:(id)arg1 matte:(struct __CVBuffer { }*)arg2 erodedMatteOut:(struct __CVBuffer { }*)arg3;
- (int)getFaceDepth:(struct DepthProcessingDataRGBD { int *x1; int *x2; int *x3; unsigned long long x4; unsigned long long x5; struct __CVBuffer {} *x6; char *x7; id x8; unsigned long long x9; unsigned long long x10; char *x11; char *x12; char *x13; int x14; int x15; int x16; }*)arg1 largestFaceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)initForFrameSet:(id)arg1;
- (struct __CVBuffer { }*)invertImage:(struct __CVBuffer { }*)arg1;
- (struct __CVBuffer { }*)invertImageAndApplyGarbageMatte:(struct __CVBuffer { }*)arg1 garbageMatte:(struct __CVBuffer { }*)arg2 erodedMatte:(struct __CVBuffer { }*)arg3;
- (struct __CVBuffer { }*)invertImageAndApplyGarbageMatteForLandscapeOrientation:(struct __CVBuffer { }*)arg1 garbageMatte:(struct __CVBuffer { }*)arg2 erodedMatte:(struct __CVBuffer { }*)arg3;
- (struct __CVBuffer { }*)invertImageAndApplyGarbageMatteForPortraitOrientation:(struct __CVBuffer { }*)arg1 garbageMatte:(struct __CVBuffer { }*)arg2 erodedMatte:(struct __CVBuffer { }*)arg3;
- (struct __CVBuffer { }*)invertImageAndApplyGarbageMatteForPortraitUpsideDownOrientation:(struct __CVBuffer { }*)arg1 garbageMatte:(struct __CVBuffer { }*)arg2 erodedMatte:(struct __CVBuffer { }*)arg3;
- (bool)isValidForCameraFrameSet:(id)arg1;
- (struct __CVBuffer { }*)largeColorImageWithSmallForegroundEstimate:(struct __CVBuffer { }*)arg1 rawAlpha:(struct __CVBuffer { }*)arg2 color:(struct __CVBuffer { }*)arg3;
- (void)requestMattingStatus;

@end
