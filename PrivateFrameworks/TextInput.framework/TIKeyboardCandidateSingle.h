/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TextInput.framework/TextInput
 */

@interface TIKeyboardCandidateSingle : TIKeyboardCandidate {
    NSString * _altDSID;
    NSString * _applicationBundleId;
    NSString * _applicationKey;
    NSString * _candidate;
    long long  _cursorMovement;
    bool  _extensionCandidate;
    NSString * _input;
    NSString * _lexiconLocale;
    NSString * _rawInput;
}

@property (nonatomic, copy) NSString *altDSID;
@property (nonatomic, copy) NSString *applicationBundleId;
@property (nonatomic, copy) NSString *applicationKey;
@property (nonatomic, copy) NSString *candidate;
@property (nonatomic) long long cursorMovement;
@property (getter=isExtensionCandidate, nonatomic) bool extensionCandidate;
@property (nonatomic, copy) NSString *input;
@property (nonatomic, copy) NSString *lexiconLocale;
@property (nonatomic, copy) NSString *rawInput;

+ (id)candidateWithCandidate:(id)arg1 forInput:(id)arg2;
+ (id)candidateWithCandidate:(id)arg1 forInput:(id)arg2 cursorMovement:(long long)arg3;
+ (id)candidateWithCandidate:(id)arg1 forInput:(id)arg2 customInfoType:(unsigned long long)arg3;
+ (id)candidateWithCandidate:(id)arg1 forInput:(id)arg2 extensionCandidate:(bool)arg3;
+ (id)candidateWithUnchangedInput:(id)arg1;
+ (id)secureCandidateForInput:(id)arg1 slotID:(unsigned int)arg2;
+ (id)secureCandidateForInput:(id)arg1 slotID:(unsigned int)arg2 customInfoType:(unsigned long long)arg3;
+ (id)secureCandidateForInput:(id)arg1 slotID:(unsigned int)arg2 customInfoType:(unsigned long long)arg3 applicationKey:(id)arg4 applicationBundleId:(id)arg5 altDSID:(id)arg6;
+ (bool)supportsSecureCoding;
+ (int)type;

- (void).cxx_destruct;
- (id)altDSID;
- (id)applicationBundleId;
- (id)applicationKey;
- (id)candidate;
- (id)candidateByReplacingWithCandidate:(id)arg1;
- (id)candidateByReplacingWithCandidate:(id)arg1 input:(id)arg2;
- (id)candidateByReplacingWithCandidate:(id)arg1 input:(id)arg2 rawInput:(id)arg3;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (long long)cursorMovement;
- (void)encodeWithCandidateResultSetCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCandidate:(id)arg1;
- (id)initWithCandidate:(id)arg1 forInput:(id)arg2;
- (id)initWithCandidate:(id)arg1 forInput:(id)arg2 rawInput:(id)arg3;
- (id)initWithCandidate:(id)arg1 forInput:(id)arg2 rawInput:(id)arg3 extensionCandidate:(bool)arg4;
- (id)initWithCandidateResultSetCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithResponseCandidate:(id)arg1;
- (id)initWithUnchangedInput:(id)arg1;
- (id)input;
- (bool)isAutocorrectionIgnoringCaseAndDiacriticsAndSupplementalItemPrefix;
- (bool)isAutocorrectionIgnoringCaseAndSupplementalItemPrefix;
- (bool)isExtensionCandidate;
- (bool)isHideMyEmailType;
- (id)lexiconLocale;
- (id)rawInput;
- (void)setAltDSID:(id)arg1;
- (void)setApplicationBundleId:(id)arg1;
- (void)setApplicationKey:(id)arg1;
- (void)setCandidate:(id)arg1;
- (void)setCursorMovement:(long long)arg1;
- (void)setExtensionCandidate:(bool)arg1;
- (void)setInput:(id)arg1;
- (void)setLexiconLocale:(id)arg1;
- (void)setRawInput:(id)arg1;

@end
