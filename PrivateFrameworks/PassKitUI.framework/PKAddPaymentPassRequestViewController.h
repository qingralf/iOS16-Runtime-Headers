/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI
 */

@interface PKAddPaymentPassRequestViewController : UITableViewController {
    PKAddPaymentPassRequest * _addRequest;
    PKAddPaymentPassRequestConfiguration * _configuration;
    NSObject<OS_dispatch_source> * _datasourceTimeout;
    <PKAddPaymentPassRequestViewControllerDelegate> * _delegate;
    NSArray * _details;
    long long  _headerState;
    PKTableHeaderView * _headerView;
    bool  _hidePrivacy;
    struct CGSize { 
        double width; 
        double height; 
    }  _lastBoundsSize;
    <NSObject> * _notificationToken;
    double  _offsetForTextfield;
    bool  _offsetForTextfieldWasCalculated;
    CLInUseAssertion * _passbookForegroundAssertion;
    PKPasscodeUpgradeFlowController * _passcodeUpgradeFlowController;
    bool  _preconditionsValidated;
    OBPrivacyLinkController * _privacyController;
    PKPaymentProvisioningController * _provisioningController;
    PKPaymentProvisioningTracker * _provisioningTracker;
    bool  _sentViewHasAppearedEvent;
    <PKPaymentSetupViewControllerDelegate> * _setupDelegate;
    bool  _singleTarget;
    NSString * _subtitle;
    RemoteUIController * _termsController;
    NSString * _title;
    bool  _viewAppearing;
    PKPaymentWebService * _webService;
}

@property (nonatomic) <PKAddPaymentPassRequestViewControllerDelegate> *delegate;
@property (nonatomic) bool hidePrivacy;
@property (nonatomic) <PKPaymentSetupViewControllerDelegate> *setupDelegate;
@property (nonatomic) bool singleTarget;
@property (nonatomic, readonly) PKPaymentWebService *webService;

// Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI

+ (id)backgroundColor;

- (void).cxx_destruct;
- (void)_applyHeaderState;
- (void)_cancelDatasourceTimeout;
- (void)_displayTermsForEligibilityResponse:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)_fetchAddRequestWithCertificatesResponse:(id)arg1;
- (void)_fetchCertificates;
- (void)_handleAdd:(id)arg1;
- (bool)_handleRawResponseData:(id)arg1 error:(id)arg2;
- (void)_performEligibility;
- (void)_performMoreInfoItemPush;
- (void)_performNextProvisioningStep;
- (void)_performPasscodeUpgradeIfNeeded;
- (void)_performPreconditionValidation;
- (void)_performProvisioning:(id)arg1;
- (void)_performTerms:(id)arg1;
- (void)_presentDisplayableError:(id)arg1;
- (void)_presentDisplayableError:(id)arg1 allowEarlyExit:(bool)arg2;
- (void)_promptHSA2Required;
- (void)_provisioningLocalizedProgressDescriptionDidChange:(id)arg1;
- (void)_setHeaderState:(long long)arg1;
- (void)_setNavigationBarEnabled:(bool)arg1;
- (void)_setupTermsControllerHandlerWithNavigationController:(id)arg1 forCompletion:(id /* block */)arg2;
- (void)_showEligibilityIssueForStatus:(long long)arg1 learnMoreURL:(id)arg2 completion:(id /* block */)arg3;
- (id)_titleForCurrentHeaderState;
- (void)_updateHeaderSize;
- (void)_updateHeaderWithSubtitle:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (bool)hidePrivacy;
- (void)hostApplicationDidEnterBackground;
- (id)initWithPaymentWebService:(id)arg1 configuration:(id)arg2;
- (void)loadView;
- (void)noteNavigationUserInterfaceDidDisappear;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHidePrivacy:(bool)arg1;
- (void)setSetupDelegate:(id)arg1;
- (void)setSingleTarget:(bool)arg1;
- (id)setupDelegate;
- (bool)singleTarget;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (id)webService;

// Image: /System/Library/AccessibilityBundles/PassKitUI.axbundle/PassKitUI

+ (Class)safeCategoryBaseClass;

- (void)_accessibilityConfigureCell:(id)arg1 atIndexPath:(id)arg2;
- (void)_accessibilityLoadAccessibilityInformation;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;

@end
