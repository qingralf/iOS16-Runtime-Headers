/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaExperience.framework/MediaExperience
 */

@interface MXSession : NSObject <MXSessionProtocol> {
    bool  mAudioToolboxIsPlaying;
    NSString * mBestAvailableContentType;
    bool  mClientIsPlaying;
    int  mClientType;
    MXCoreSession * mCoreSession;
    unsigned long long  mCoreSessionID;
    bool  mCurrentlyPlayingContentIsEligibleForSpatialization;
    NSDictionary * mCurrentlyPlayingSourceFormatInfo;
    NSString * mDescription;
    bool  mDoesntActuallyPlayAudio;
    bool  mIAmPiP;
    unsigned long long  mID;
    bool  mIsMuted;
    bool  mIsPlaying;
    bool  mIsRecording;
    NSString * mMutePriority;
    NSString * mPreferredAudioHardwareFormat;
    unsigned int  mPreferredNumberOfOutputChannels;
    double  mPreferredOutputSampleRate;
    NSDictionary * mSourceFormatInfo;
}

+ (bool)_isSessionMuted:(unsigned long long)arg1;
+ (id)copyMXSessionForID:(unsigned long long)arg1;
+ (unsigned int)getResolvedPreferredNumberOfOutputChannels:(id)arg1;
+ (bool)isCoreSessionFormatValidForMaxOutputChannels:(id)arg1;
+ (bool)isNonSerializedCopyProperty:(id)arg1;
+ (bool)isNonSerializedSetProperty:(id)arg1;
+ (bool)isSessionMuted:(unsigned long long)arg1;
+ (int)updateDoesntActuallyPlayAudio:(id)arg1;
+ (int)updateIsPlaying:(id)arg1;
+ (int)updateIsRecording:(id)arg1;
+ (int)updatePreferredAudioHardwareFormat:(id)arg1 withMaxOutputChannels:(unsigned int)arg2 andCalledFromDealloc:(bool)arg3;
+ (int)updatePreferredNumberOfOutputChannels:(id)arg1;
+ (int)updatePreferredOutputSampleRate:(id)arg1;

- (int)_addResource:(const struct __CFString { }*)arg1 resourceInfo:(const struct __CFDictionary { }*)arg2 token:(struct OpaqueCMSessionResourceToken {}**)arg3;
- (int)_beginInterruptionWithSecTask:(struct __SecTask { }*)arg1 flags:(long long)arg2;
- (int)_copyPropertyForKey:(id)arg1 valueOut:(id*)arg2;
- (void)_dealloc;
- (int)_endInterruptionWithSecTask:(struct __SecTask { }*)arg1 interruptionStatus:(const struct __CFString { }*)arg2;
- (id)_initWithSession:(struct opaqueCMSession { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; id x2; unsigned char x3; }*)arg1;
- (int)_removeResourceWithToken:(struct OpaqueCMSessionResourceToken { }*)arg1;
- (int)_setPropertyForKey:(id)arg1 value:(id)arg2;
- (int)copyPropertyForKey:(id)arg1 valueOut:(id*)arg2;
- (int)copyPropertyForKeyInternal:(id)arg1 valueOut:(id*)arg2;
- (void)dealloc;
- (void)dumpInfo;
- (bool)getActuallyPlaysAudio;
- (id)getBestAvailableContentType;
- (int)getClientType;
- (id)getClientTypeAsString;
- (id)getCoreSession;
- (bool)getCurrentlyPlayingContentIsEligibleForSpatialization;
- (id)getCurrentlyPlayingSourceFormatInfo;
- (bool)getDoesntActuallyPlayAudio;
- (bool)getIAmPiP;
- (unsigned long long)getID;
- (bool)getIsMuted;
- (bool)getIsPlaying;
- (bool)getIsRecording;
- (id)getMutePriority;
- (id)getPreferredAudioHardwareFormat;
- (unsigned int)getPreferredNumberOfOutputChannels;
- (double)getPreferredOutputSampleRate;
- (id)getSourceFormatInfo;
- (id)info;
- (id)initWithSession:(id)arg1;
- (void)mute;
- (void)postIsMutedDidChange;
- (int)resetIsPlayingStates;
- (int)setBestAvailableContentType:(id)arg1;
- (int)setClientType:(int)arg1;
- (int)setCurrentlyPlayingContentIsEligibleForSpatialization:(bool)arg1;
- (int)setCurrentlyPlayingSourceFormatInfo:(id)arg1;
- (int)setDoesntActuallyPlayAudio:(bool)arg1;
- (int)setIAmPiP:(bool)arg1;
- (int)setID:(unsigned long long)arg1;
- (int)setIsMuted:(bool)arg1;
- (int)setIsPlaying:(bool)arg1;
- (int)setIsRecording:(bool)arg1;
- (int)setMutePriority:(id)arg1;
- (int)setPreferredAudioHardwareFormat:(id)arg1;
- (int)setPreferredNumberOfOutputChannels:(unsigned int)arg1;
- (int)setPreferredOutputSampleRate:(double)arg1;
- (int)setPropertyForKey:(id)arg1 value:(id)arg2;
- (int)setPropertyForKeyInternal:(id)arg1 value:(id)arg2;
- (int)setSourceFormatInfo:(id)arg1;
- (void)unmute;

@end
