/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VisionKitCore.framework/VisionKitCore
 */

@interface VKCImageSubjectBaseView : VKCImageBaseOverlayView {
    NSObject<OS_dispatch_queue> * _backgroundQueue;
    <VKCImageSubjectBaseViewDelegate> * _baseSubjectDelegate;
    NSValue * _burstPoint;
    CALayer * _colorLayer;
    UIImage * _customImageForRemoveBackground;
    VKCImageSubjectGlowLayer * _glowLayer;
    bool  _glowLayerActive;
    CALayer * _imageHighlightLayer;
    CALayer * _imageHighlightLayerContainer;
    CALayer * _imageHighlightLayerContainerShadow;
    long long  _imageOrientation;
    VKCRemoveBackgroundResult * _imageRemoveBackgroundResult;
    struct CGSize { 
        double width; 
        double height; 
    }  _imageSize;
    bool  _loadImageRequested;
    unsigned long long  _loadMaskIndex;
    bool  _loadMaskRequested;
    CIContext * _maskLoadContext;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _maskNormalizedCropRect;
    VKCRemoveBackgroundResult * _maskRemoveBackgroundResult;
    UIBezierPath * _normalizedSubjectPath;
    CAPackage * _pulsePackage;
    VKCRemoveBackgroundRequestHandler * _removeBackgroundRequestHandler;
    bool  _subjectHighlightFeatureFlagEnabled;
    UIImage * _subjectImage;
    struct __CVBuffer { } * _subjectMaskBuffer;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _subjectNormalizedCropRect;
    unsigned long long  _subjectPathIndex;
}

@property (nonatomic, readonly) VKCImageAnalysisResult *analysisResult;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *backgroundQueue;
@property (nonatomic) <VKCImageSubjectBaseViewDelegate> *baseSubjectDelegate;
@property (nonatomic, retain) NSValue *burstPoint;
@property (nonatomic, retain) CALayer *colorLayer;
@property (nonatomic, retain) UIImage *customImageForRemoveBackground;
@property (nonatomic, retain) VKCImageSubjectGlowLayer *glowLayer;
@property (nonatomic) bool glowLayerActive;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } imageBounds;
@property (nonatomic, retain) CALayer *imageHighlightLayer;
@property (nonatomic, retain) CALayer *imageHighlightLayerContainer;
@property (nonatomic, retain) CALayer *imageHighlightLayerContainerShadow;
@property (nonatomic) long long imageOrientation;
@property (nonatomic, retain) VKCRemoveBackgroundResult *imageRemoveBackgroundResult;
@property (nonatomic) struct CGSize { double x1; double x2; } imageSize;
@property (nonatomic) bool loadImageRequested;
@property (nonatomic) unsigned long long loadMaskIndex;
@property (nonatomic) bool loadMaskRequested;
@property (retain) CIContext *maskLoadContext;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } maskNormalizedCropRect;
@property (nonatomic, retain) VKCRemoveBackgroundResult *maskRemoveBackgroundResult;
@property (nonatomic, retain) UIBezierPath *normalizedSubjectPath;
@property (nonatomic, readonly) CALayer *pulseLayer;
@property (nonatomic, retain) CAPackage *pulsePackage;
@property (nonatomic, retain) VKCRemoveBackgroundRequestHandler *removeBackgroundRequestHandler;
@property (readonly) bool subjectAnalysisInProgress;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } subjectFrame;
@property (nonatomic) bool subjectHighlightFeatureFlagEnabled;
@property (nonatomic, retain) UIImage *subjectImage;
@property (nonatomic) struct __CVBuffer { }*subjectMaskBuffer;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } subjectNormalizedCropRect;
@property (nonatomic, readonly) UIBezierPath *subjectPathInBoundsCoordinates;
@property (nonatomic) unsigned long long subjectPathIndex;

- (void).cxx_destruct;
- (id)analysisResult;
- (id)backgroundQueue;
- (id)baseSubjectDelegate;
- (void)beginImageSubjectAnalysisWithDelayIfNecessary;
- (id)burstPoint;
- (id)colorLayer;
- (void)configurePulseAnimationWithViewScale:(double)arg1;
- (struct CGPoint { double x1; double x2; })convertViewPointToImagePixels:(struct CGPoint { double x1; double x2; })arg1 isInImageBounds:(bool*)arg2;
- (id)customImageForRemoveBackground;
- (void)dealloc;
- (id)glowLayer;
- (bool)glowLayerActive;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageBounds;
- (id)imageHighlightLayer;
- (id)imageHighlightLayerContainer;
- (id)imageHighlightLayerContainerShadow;
- (long long)imageOrientation;
- (id)imageRemoveBackgroundResult;
- (struct CGSize { double x1; double x2; })imageSize;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)loadImageRequested;
- (void)loadImageSubjectIfNecessaryWithCompletion:(id /* block */)arg1;
- (unsigned long long)loadMaskIndex;
- (bool)loadMaskRequested;
- (id)loadPulsePackage;
- (void)loadSubjectMaskIfNecessary;
- (id)maskLoadContext;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })maskNormalizedCropRect;
- (id)maskRemoveBackgroundResult;
- (id)normalizedSubjectPath;
- (void)processPath;
- (id)pulseLayer;
- (id)pulsePackage;
- (id)removeBackgroundRequestHandler;
- (void)sendSubjectAnalyticsEventWithEventType:(long long)arg1 interactionType:(long long)arg2 subjectFound:(bool)arg3 processingDuration:(double)arg4;
- (void)setBackgroundQueue:(id)arg1;
- (void)setBaseSubjectDelegate:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setBurstPoint:(id)arg1;
- (void)setColorLayer:(id)arg1;
- (void)setContentsRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCustomImageForRemoveBackground:(id)arg1;
- (void)setGlowLayer:(id)arg1;
- (void)setGlowLayerActive:(bool)arg1;
- (void)setHidden:(bool)arg1;
- (void)setImageHighlightLayer:(id)arg1;
- (void)setImageHighlightLayerContainer:(id)arg1;
- (void)setImageHighlightLayerContainerShadow:(id)arg1;
- (void)setImageOrientation:(long long)arg1;
- (void)setImageRemoveBackgroundResult:(id)arg1;
- (void)setImageSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setLoadImageRequested:(bool)arg1;
- (void)setLoadMaskIndex:(unsigned long long)arg1;
- (void)setLoadMaskRequested:(bool)arg1;
- (void)setMaskLoadContext:(id)arg1;
- (void)setMaskNormalizedCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setMaskRemoveBackgroundResult:(id)arg1;
- (void)setNormalizedSubjectPath:(id)arg1;
- (void)setPulsePackage:(id)arg1;
- (void)setRecognitionResult:(id)arg1;
- (void)setRemoveBackgroundRequestHandler:(id)arg1;
- (void)setSubjectHighlightFeatureFlagEnabled:(bool)arg1;
- (void)setSubjectImage:(id)arg1;
- (void)setSubjectMaskBuffer:(struct __CVBuffer { }*)arg1;
- (void)setSubjectNormalizedCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setSubjectPathIndex:(unsigned long long)arg1;
- (void)showPulseAnimationWithViewScale:(double)arg1;
- (bool)subjectAnalysisInProgress;
- (bool)subjectExistsAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })subjectFrame;
- (bool)subjectHighlightFeatureFlagEnabled;
- (id)subjectImage;
- (struct __CVBuffer { }*)subjectMaskBuffer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })subjectNormalizedCropRect;
- (id)subjectPathInBoundsCoordinates;
- (unsigned long long)subjectPathIndex;
- (void)updateForImageBoundsChange;

@end
