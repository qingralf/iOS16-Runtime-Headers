/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VisionKitCore.framework/VisionKitCore
 */

@interface VKCImageSubjectHighlightView : VKCImageSubjectBaseView <UIDragInteractionDelegate, UIGestureRecognizerDelegate> {
    bool  _analysisDelayTimerActive;
    NSDate * _calloutStartTime;
    struct CGImage { } * _colorMaskImage;
    CALayer * _colorMaskLayer;
    UIImageView * _currentLiftImageView;
    VKCSubjectLiftView * _currentLiftView;
    <VKCImageSubjectHighlightViewDelegate> * _delegate;
    UIDragInteraction * _dragInteraction;
    struct CGPoint { 
        double x; 
        double y; 
    }  _dragInteractionStartLocation;
    double  _dragInteractionStartTime;
    UISelectionFeedbackGenerator * _feedbackGenerator;
    unsigned long long  _glowLayerIndex;
    bool  _isHidingMenuController;
    bool  _isLiftingEmptyItemArray;
    bool  _isLivePhoto;
    bool  _isLivePhotoCheckCompleted;
    UILongPressGestureRecognizer * _livePhotoPlayGR;
    NSDate * _livePhotoStartTime;
    bool  _shouldShowCalloutOnDragCancel;
    bool  _subjectAnalysisCompleteWhenTouchesBegan;
    unsigned long long  _subjectHighlightState;
    UITapGestureRecognizer * _tapGR;
}

@property (nonatomic) bool analysisDelayTimerActive;
@property (nonatomic, retain) NSDate *calloutStartTime;
@property (nonatomic) struct CGImage { }*colorMaskImage;
@property (nonatomic, retain) CALayer *colorMaskLayer;
@property (nonatomic) UIImageView *currentLiftImageView;
@property (nonatomic) VKCSubjectLiftView *currentLiftView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VKCImageSubjectHighlightViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIDragInteraction *dragInteraction;
@property (nonatomic) struct CGPoint { double x1; double x2; } dragInteractionStartLocation;
@property (nonatomic) double dragInteractionStartTime;
@property (nonatomic, retain) UISelectionFeedbackGenerator *feedbackGenerator;
@property (nonatomic) unsigned long long glowLayerIndex;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isHidingMenuController;
@property (nonatomic) bool isLiftingEmptyItemArray;
@property (nonatomic) bool isLivePhoto;
@property (nonatomic) bool isLivePhotoCheckCompleted;
@property (nonatomic, retain) UILongPressGestureRecognizer *livePhotoPlayGR;
@property (nonatomic, retain) NSDate *livePhotoStartTime;
@property (nonatomic) bool shouldShowCalloutOnDragCancel;
@property (nonatomic) bool subjectAnalysisCompleteWhenTouchesBegan;
@property (nonatomic, readonly) bool subjectHighlightActive;
@property (nonatomic) unsigned long long subjectHighlightState;
@property (readonly) Class superclass;
@property (nonatomic, retain) UITapGestureRecognizer *tapGR;

// Image: /System/Library/PrivateFrameworks/VisionKitCore.framework/VisionKitCore

- (void).cxx_destruct;
- (void)_dragInteractionDidCancelLiftWithoutDragging:(id)arg1;
- (void)_share;
- (void)_share:(id)arg1;
- (bool)analysisDelayTimerActive;
- (id)animationWithDuration:(double)arg1 fromValue:(id)arg2 toValue:(id)arg3 key:(id)arg4;
- (void)beginImageSubjectAnalysisWithDelayIfNecessary;
- (id)calloutStartTime;
- (bool)canBecomeFirstResponder;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (struct CGImage { }*)colorMaskImage;
- (id)colorMaskLayer;
- (void)copy:(id)arg1;
- (id)createItemProvider;
- (id)currentLiftImageView;
- (id)currentLiftView;
- (void)dealloc;
- (id)delegate;
- (void)didMoveToWindow;
- (void)didTap:(id)arg1;
- (id)dragInteraction;
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (bool)dragInteraction:(id)arg1 prefersFullSizePreviewsForSession:(id)arg2;
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 willEndWithOperation:(unsigned long long)arg3;
- (bool)dragInteraction:(id)arg1 sessionAllowsMoveOperation:(id)arg2;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;
- (struct CGPoint { double x1; double x2; })dragInteractionStartLocation;
- (double)dragInteractionStartTime;
- (id)feedbackGenerator;
- (unsigned long long)glowLayerIndex;
- (void)handleCancelForUndraggedLiftForInteraction:(id)arg1;
- (void)hideCalloutMenuIfNecessary;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isHidingMenuController;
- (bool)isLiftingEmptyItemArray;
- (bool)isLivePhoto;
- (bool)isLivePhotoCheckCompleted;
- (void)livePhotoLongPress:(id)arg1;
- (id)livePhotoPlayGR;
- (id)livePhotoStartTime;
- (void)menuControllerWillHide:(id)arg1;
- (void)setAnalysisDelayTimerActive:(bool)arg1;
- (void)setCalloutStartTime:(id)arg1;
- (void)setColorMaskImage:(struct CGImage { }*)arg1;
- (void)setColorMaskLayer:(id)arg1;
- (void)setCurrentLiftImageView:(id)arg1;
- (void)setCurrentLiftView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDragInteraction:(id)arg1;
- (void)setDragInteractionStartLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)setDragInteractionStartTime:(double)arg1;
- (void)setFeedbackGenerator:(id)arg1;
- (void)setGlowLayerIndex:(unsigned long long)arg1;
- (void)setHidden:(bool)arg1;
- (void)setIsHidingMenuController:(bool)arg1;
- (void)setIsLiftingEmptyItemArray:(bool)arg1;
- (void)setIsLivePhoto:(bool)arg1;
- (void)setIsLivePhotoCheckCompleted:(bool)arg1;
- (void)setLivePhotoPlayGR:(id)arg1;
- (void)setLivePhotoStartTime:(id)arg1;
- (void)setMaskRemoveBackgroundResult:(id)arg1;
- (void)setNormalizedVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setRecognitionResult:(id)arg1;
- (void)setShouldShowCalloutOnDragCancel:(bool)arg1;
- (void)setSubjectAnalysisCompleteWhenTouchesBegan:(bool)arg1;
- (void)setSubjectHighlightState:(unsigned long long)arg1;
- (void)setSubjectHighlightState:(unsigned long long)arg1 animated:(bool)arg2;
- (void)setTapGR:(id)arg1;
- (bool)shouldShowCalloutOnDragCancel;
- (void)showCalloutMenuAtLocation:(struct CGPoint { double x1; double x2; })arg1 showPulse:(bool)arg2;
- (id)stringForHighlightState:(unsigned long long)arg1;
- (bool)subjectAnalysisCompleteWhenTouchesBegan;
- (bool)subjectHighlightActive;
- (unsigned long long)subjectHighlightState;
- (id)tapGR;
- (id)targetedPreviewForCurrentSubject;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

// Image: /System/Library/AccessibilityBundles/VisionKitCore.axbundle/VisionKitCore

+ (Class)safeCategoryBaseClass;

- (id)accessibilityDragSourceDescriptors;
- (id)accessibilityLabel;
- (unsigned long long)accessibilityTraits;
- (bool)isAccessibilityElement;

@end
