/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SoftwareUpdateServices.framework/SoftwareUpdateServices
 */

@interface SUState : NSObject <NSKeyedUnarchiverDelegate> {
    SUCoreDescriptor * _alternateLastScannedCoreDescriptor;
    SUDescriptor * _alternateLastScannedDescriptor;
    NSDate * _appliedTime;
    bool  _autodownloadNeedsOneTimeRetry;
    NSArray * _failedPatchDescriptors;
    SUInstallPolicy * _installPolicy;
    NSString * _lastAssetAudience;
    _SUAutoInstallOperationModel * _lastAutoInstallOperationModel;
    NSString * _lastDeletedSUAssetID;
    SUDownload * _lastDownload;
    NSString * _lastProductBuild;
    NSString * _lastProductType;
    NSString * _lastProductVersion;
    NSString * _lastReleaseType;
    NSDate * _lastScanDate;
    SUScanOptions * _lastScannedDescriptorScanOptions;
    NSString * _lastSplatRestoreVersion;
    NSDictionary * _mandatoryUpdateDict;
    SUManagedDeviceUpdateDelay * _mdmDelay;
    SUCorePersistedState * _persistedState;
    SUCoreDescriptor * _preferredLastScannedCoreDescriptor;
    SUDescriptor * _preferredLastScannedDescriptor;
    NSDate * _scheduledAutodownloadPolicyChangeTime;
    NSDate * _scheduledAutodownloadWifiPeriodEndTime;
    NSDate * _scheduledManualDownloadWifiPeriodEndTime;
    NSString * _sessionID;
    bool  _stashbagPersisted;
    NSObject<OS_dispatch_queue> * _stateQueue;
    bool  _underExclusiveControl;
    NSDictionary * _unlockCallbacks;
    NSDictionary * _updateDiscoveryDates;
}

@property (nonatomic, copy) SUCoreDescriptor *alternateLastScannedCoreDescriptor;
@property (nonatomic, copy) SUDescriptor *alternateLastScannedDescriptor;
@property (nonatomic, retain) NSDate *appliedTime;
@property (nonatomic) bool autodownloadNeedsOneTimeRetry;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSArray *failedPatchDescriptors;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SUInstallPolicy *installPolicy;
@property (nonatomic, retain) NSString *lastAssetAudience;
@property (nonatomic, retain) _SUAutoInstallOperationModel *lastAutoInstallOperationModel;
@property (nonatomic, retain) NSString *lastDeletedSUAssetID;
@property (nonatomic, copy) SUDownload *lastDownload;
@property (nonatomic, retain) NSString *lastProductBuild;
@property (nonatomic, retain) NSString *lastProductType;
@property (nonatomic, retain) NSString *lastProductVersion;
@property (nonatomic, retain) NSString *lastReleaseType;
@property (nonatomic, retain) NSDate *lastScanDate;
@property (nonatomic, retain) SUScanOptions *lastScannedDescriptorScanOptions;
@property (nonatomic, retain) NSString *lastSplatRestoreVersion;
@property (nonatomic, retain) NSDictionary *mandatoryUpdateDict;
@property (nonatomic, retain) SUManagedDeviceUpdateDelay *mdmDelay;
@property (nonatomic, copy) SUCoreDescriptor *preferredLastScannedCoreDescriptor;
@property (nonatomic, copy) SUDescriptor *preferredLastScannedDescriptor;
@property (nonatomic, retain) NSDate *scheduledAutodownloadPolicyChangeTime;
@property (nonatomic, retain) NSDate *scheduledAutodownloadWifiPeriodEndTime;
@property (nonatomic, retain) NSDate *scheduledManualDownloadWifiPeriodEndTime;
@property (nonatomic, retain) NSString *sessionID;
@property (nonatomic) bool stashbagPersisted;
@property (readonly) Class superclass;
@property (nonatomic) bool underExclusiveControl;
@property (nonatomic, retain) NSDictionary *unlockCallbacks;
@property (nonatomic, retain) NSDictionary *updateDiscoveryDates;

+ (id)currentState;
+ (id)statePath;

- (void).cxx_destruct;
- (void)_queue_addFailedPatchDescriptor:(id)arg1;
- (id)_stateAsDictionary;
- (void)addFailedPatchDescriptor:(id)arg1;
- (id)alternateLastScannedCoreDescriptor;
- (id)alternateLastScannedDescriptor;
- (id)appliedTime;
- (bool)autodownloadNeedsOneTimeRetry;
- (id)description;
- (id)failedPatchDescriptors;
- (id)init;
- (id)installPolicy;
- (id)lastAssetAudience;
- (id)lastAutoInstallOperationModel;
- (id)lastDeletedSUAssetID;
- (id)lastDownload;
- (id)lastProductBuild;
- (id)lastProductType;
- (id)lastProductVersion;
- (id)lastReleaseType;
- (id)lastScanDate;
- (id)lastScannedDescriptorScanOptions;
- (id)lastSplatRestoreVersion;
- (void)load;
- (void)loadPersistedFailedPatchDescriptors;
- (id)mandatoryUpdateDict;
- (id)mdmDelay;
- (void)persistFailedPatchDescriptors;
- (id)preferredLastScannedCoreDescriptor;
- (id)preferredLastScannedDescriptor;
- (void)resetAllHistory;
- (void)resetDownloadAndScanHistory;
- (void)save;
- (id)scheduledAutodownloadPolicyChangeTime;
- (id)scheduledAutodownloadWifiPeriodEndTime;
- (id)scheduledManualDownloadWifiPeriodEndTime;
- (id)sessionID;
- (void)setAlternateLastScannedCoreDescriptor:(id)arg1;
- (void)setAlternateLastScannedDescriptor:(id)arg1;
- (void)setAppliedTime:(id)arg1;
- (void)setAutodownloadNeedsOneTimeRetry:(bool)arg1;
- (void)setFailedPatchDescriptors:(id)arg1;
- (void)setInstallPolicy:(id)arg1;
- (void)setLastAssetAudience:(id)arg1;
- (void)setLastAutoInstallOperationModel:(id)arg1;
- (void)setLastDeletedSUAssetID:(id)arg1;
- (void)setLastDownload:(id)arg1;
- (void)setLastProductBuild:(id)arg1;
- (void)setLastProductType:(id)arg1;
- (void)setLastProductVersion:(id)arg1;
- (void)setLastReleaseType:(id)arg1;
- (void)setLastScanDate:(id)arg1;
- (void)setLastScannedDescriptorScanOptions:(id)arg1;
- (void)setLastSplatRestoreVersion:(id)arg1;
- (void)setMandatoryUpdateDict:(id)arg1;
- (void)setMdmDelay:(id)arg1;
- (void)setPreferredLastScannedCoreDescriptor:(id)arg1;
- (void)setPreferredLastScannedDescriptor:(id)arg1;
- (void)setScheduledAutodownloadPolicyChangeTime:(id)arg1;
- (void)setScheduledAutodownloadWifiPeriodEndTime:(id)arg1;
- (void)setScheduledManualDownloadWifiPeriodEndTime:(id)arg1;
- (void)setSessionID:(id)arg1;
- (void)setStashbagPersisted:(bool)arg1;
- (void)setUnderExclusiveControl:(bool)arg1;
- (void)setUnlockCallbacks:(id)arg1;
- (void)setUpdateDiscoveryDates:(id)arg1;
- (bool)stashbagPersisted;
- (Class)unarchiver:(id)arg1 cannotDecodeObjectOfClassName:(id)arg2 originalClasses:(id)arg3;
- (bool)underExclusiveControl;
- (id)unlockCallbacks;
- (id)updateDiscoveryDates;

@end
