/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@interface CKDDeviceIDManager : NSObject {
    NSMutableDictionary * _deviceIDsByContainerIdentifierByContainerEnvironment;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _useLegacyKeychain;
}

@property (nonatomic, retain) NSMutableDictionary *deviceIDsByContainerIdentifierByContainerEnvironment;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic) bool useLegacyKeychain;

+ (id)sharedManager;

- (void).cxx_destruct;
- (void)_deleteDeviceIdentifierForContainer:(id)arg1;
- (id)_perServicelookupKeyForContainer:(id)arg1;
- (void)_saveDeviceIdentifier:(id)arg1 forContainer:(id)arg2;
- (void)_saveDeviceIdentifierToDefaults:(id)arg1 forContainer:(id)arg2;
- (id)_savedDeviceIdentifierForContainer:(id)arg1;
- (id)_serviceForContainer:(id)arg1;
- (struct __CFDictionary { }*)createQueryForDeviceIdentifierInContainer:(id)arg1;
- (id)deviceIDsByContainerIdentifierByContainerEnvironment;
- (id)deviceIDsByContainerIdentifierInContainerEnvironment:(long long)arg1;
- (id)deviceIdentifierForContainer:(id)arg1;
- (id)deviceIdentifierForContainer:(id)arg1 skipInMemoryCache:(bool)arg2 createIfNecessary:(bool)arg3;
- (id)init;
- (id)queue;
- (void)setDeviceIDsByContainerIdentifierByContainerEnvironment:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setUseLegacyKeychain:(bool)arg1;
- (bool)useLegacyKeychain;

@end
