/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IconServices.framework/IconServices
 */

@interface ISResourceProvider : NSObject <ISCompositorResourceProvider> {
    ISCustomRecipe * _customRecipe;
    NSDictionary * _decorationResources;
    unsigned long long  _iconShape;
    bool  _isGenericProvider;
    unsigned long long  _lsDatabaseSequenceNumber;
    NSUUID * _lsDatabaseUUID;
    bool  _onlySupportsGraphicIcons;
    unsigned long long  _options;
    bool  _placeholder;
    NSData * _resourceToken;
    NSMutableDictionary * _resourcesByResourceKey;
    NSArray * _sourceRecordIdentifiers;
    bool  _supportsGraphicIcons;
    <ISCompositorResource> * _templateIconResource;
}

@property (retain) ISCustomRecipe *customRecipe;
@property (readonly) ISCustomRecipe *customRecipe;
@property (readonly, copy) NSString *debugDescription;
@property (retain) NSDictionary *decorationResources;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (retain) <ISCompositorResource> *iconResource;
@property unsigned long long iconShape;
@property (readonly) bool isDocumentBadge;
@property bool isGenericProvider;
@property (readonly) bool isPrecomposed;
@property unsigned long long lsDatabaseSequenceNumber;
@property (retain) NSUUID *lsDatabaseUUID;
@property (readonly) bool onlySupportsGraphicIcons;
@property unsigned long long options;
@property bool placeholder;
@property (retain) NSData *resourceToken;
@property (readonly) NSMutableDictionary *resourcesByResourceKey;
@property (retain) NSArray *sourceRecordIdentifiers;
@property (readonly) Class superclass;
@property (readonly) bool supportsGraphicIcons;
@property (readonly) IFSymbol *symbol;
@property (readonly) <ISCompositorResource> *templateIconResource;
@property (readonly) NSData *validationToken;

+ (id)defaultIconResourceProvider;
+ (id)resourceProviderWithLSIconReource:(id)arg1;
+ (id)resourceProviderWithRecord:(id)arg1 options:(unsigned long long)arg2;
+ (id)resourceProviderWithTypeIdentifier:(id)arg1 options:(unsigned long long)arg2;
+ (id)resourceWithBundleURL:(id)arg1 iconDictionary:(id)arg2 options:(unsigned long long)arg3;
+ (id)resourceWithRecord:(id)arg1 options:(unsigned long long)arg2;
+ (id)resourceWithTypeCode:(unsigned int)arg1 options:(unsigned long long)arg2;
+ (id)resourceWithTypeIdentifier:(id)arg1 options:(unsigned long long)arg2;

- (void).cxx_destruct;
- (bool)_isAppleResource;
- (id)customRecipe;
- (id)decorationResources;
- (id)iconResource;
- (unsigned long long)iconShape;
- (id)init;
- (id)initWithResource:(id)arg1 templateResource:(id)arg2;
- (id)initWithResources:(id)arg1;
- (bool)isDocumentBadge;
- (bool)isGenericProvider;
- (bool)isPrecomposed;
- (unsigned long long)lsDatabaseSequenceNumber;
- (id)lsDatabaseUUID;
- (bool)onlySupportsGraphicIcons;
- (unsigned long long)options;
- (bool)placeholder;
- (id)resourceForKey:(id)arg1;
- (id)resourceNamed:(id)arg1;
- (id)resourceToken;
- (id)resourcesByResourceKey;
- (void)setCustomRecipe:(id)arg1;
- (void)setDecorationResources:(id)arg1;
- (void)setIconResource:(id)arg1;
- (void)setIconShape:(unsigned long long)arg1;
- (void)setIsGenericProvider:(bool)arg1;
- (void)setLsDatabaseSequenceNumber:(unsigned long long)arg1;
- (void)setLsDatabaseUUID:(id)arg1;
- (void)setOptions:(unsigned long long)arg1;
- (void)setPlaceholder:(bool)arg1;
- (void)setResourceToken:(id)arg1;
- (void)setSourceRecordIdentifiers:(id)arg1;
- (id)sourceRecordIdentifiers;
- (bool)supportsGraphicIcons;
- (id)symbol;
- (id)templateIconResource;
- (id)validationToken;

@end
