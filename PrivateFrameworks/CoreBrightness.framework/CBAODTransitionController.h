/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreBrightness.framework/CoreBrightness
 */

@interface CBAODTransitionController : CBModule {
    float  _brightnessFactor;
    <CBBrightnessProxy> * _brtCtl;
    float  _currentAAPFactor;
    float  _currentBrightnessLimit;
    float  _currentDisplayNits;
    float  _currentEDRHeadroom;
    struct { 
        unsigned int ID; 
        bool brightness_set; 
        float brightness; 
        bool whitepoint_set; 
        float whitepoint[3][3]; 
        bool pccfactor_set; 
        float pccfactor; 
        bool brightnessLimit_set; 
        float brightnessLimit; 
        unsigned char reserved[5]; 
    }  _currentFlipBookEntry;
    struct { 
        unsigned char version; 
        unsigned int sizeOfHeader; 
        unsigned int sizeOfEntry; 
        unsigned int numberOfUpdates; 
        unsigned short frequency; 
        float length; 
        float ambient; 
    }  _currentFlipBookHeader;
    int  _currentFrequency;
    float  _currentLowAmbientAdaptationScaler;
    float  _currentMatrix;
    float  _currentSDRBrightness;
    id  _currentState;
    id  _currentTarget;
    float  _currentTrustedLux;
    unsigned long long  _displayID;
    bool  _displayON;
    float  _edrRampDurationPerStop;
    CBAPEndpoint * _endpoint;
    struct vector<CBFlipBookEntry, std::allocator<CBFlipBookEntry>> { 
        struct { /* ? */ } *__begin_; 
        struct { /* ? */ } *__end_; 
        struct __compressed_pair<CBFlipBookEntry *, std::allocator<CBFlipBookEntry>> { 
            struct { /* ? */ } *__value_; 
        } __end_cap_; 
    }  _flipBookEntries;
    NSObject<OS_dispatch_source> * _lastUpdateSwappedTimer;
    bool  _liveUpdatesOverride;
    float  _maxNits;
    float  _minNits;
    float  _nitsCap;
    float  _nitsOverride;
    id  _pendingState;
    id /* block */  _rampCanceledCallback;
    id /* block */  _rampDoneCallback;
    CBRampManager * _rampManager;
    float  _remainingTransitionLength;
    float  _targetAAPFactor;
    float  _targetBrightnessLimit;
    float  _targetEDRHeadroom;
    float  _targetLowAmbientAdaptationScaler;
    float  _targetMatrix;
    float  _targetSDRBrightness;
    CBAODThresholdModule * _thresholdModule;
    struct ColorEffects { } * cfx;
}

@property (nonatomic) float brightnessFactor;
@property (nonatomic) float currentDisplayNits;
@property (nonatomic) bool displayON;
@property bool liveUpdates;
@property bool liveUpdatesOverride;
@property float nitsCap;
@property float nitsOverride;
@property float remainingTransitionLength;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)activateLastUpdateSwappedTimerWithTimeout:(float)arg1;
- (void)addFlipBookEntry:(struct { unsigned int x1; bool x2; float x3; bool x4; float x5[3][3]; bool x6; float x7; bool x8; float x9; unsigned char x10[5]; })arg1;
- (bool)applyPendingUpdates;
- (float)brightnessFactor;
- (float)brightnessLimitProgressCallback:(float)arg1 rampContext:(id)arg2;
- (float)calculateSigmoidProgressForLinearProgress:(float)arg1;
- (float)calculateSpringProgressForLinearProgress:(float)arg1;
- (bool)cancelDCPTransition;
- (bool)cancelTransition;
- (void)checkBootArgsConfiguration;
- (struct { float x1; float x2; })chromaticityForMatrix:(float)arg1;
- (void)clockUpdateHandler:(id)arg1;
- (void)colorMatrix:(float)arg1 fromState:(id)arg2;
- (void)colorRampRoutine:(const struct { float x1; float x2[9]; unsigned int x3; float x4; struct { float x_5_1_1; float x_5_1_2; } x5; int x6; double x7; }*)arg1;
- (bool)commitBrightness:(float)arg1 force:(bool)arg2;
- (void)constructFlipBookData:(char **)arg1 size:(unsigned int*)arg2;
- (id)copyColourRampStatsWithLength:(float)arg1 frequency:(float)arg2 origin:(struct { float x1; float x2; })arg3 target:(struct { float x1; float x2; })arg4;
- (id)copyContext;
- (id)copyRampStatsWithLength:(float)arg1 frequency:(float)arg2 origin:(float)arg3 target:(float)arg4;
- (float)currentDisplayNits;
- (int)currentTransitionUpdateID;
- (void)dealloc;
- (bool)displayON;
- (void)enableDCPFlipBookUpdates:(bool)arg1;
- (bool)flipBookEntryForID:(int)arg1 entry:(struct { unsigned int x1; bool x2; float x3; bool x4; float x5[3][3]; bool x6; float x7; bool x8; float x9; unsigned char x10[5]; }*)arg2;
- (float)getFloatValueFrom:(id)arg1 key:(id)arg2;
- (float)getFloatValueFrom:(id)arg1 key:(id)arg2 subkey:(id)arg3;
- (bool)initAPEndpoint;
- (void)initColorEffects;
- (id)initWithCBBrtControl:(id)arg1 andQueue:(id)arg2;
- (id)initWithCBBrtControl:(id)arg1 andThresholdModule:(id)arg2 andQueue:(id)arg3;
- (bool)liveUpdates;
- (bool)liveUpdatesOverride;
- (void)logTransitionParameters:(struct { bool x1; bool x2; float x3; bool x4; float x5; bool x6; float x7; bool x8; float x9; bool x10; float x11; bool x12; float x13; bool x14; float x15; })arg1;
- (float)nitsCap;
- (float)nitsOverride;
- (void)processInitialColorMatrixFromState:(id)arg1;
- (void)rampsDoneCallback:(id)arg1;
- (void)releaseCallbacks;
- (void)releaseLastUpdateSwappedTimer;
- (float)remainingTransitionLength;
- (bool)requestColorRampTransitionStop;
- (bool)requestTransitionStopForIdentifier:(id)arg1;
- (float)sdrBrightnessProgressCallback:(float)arg1 rampContext:(id)arg2;
- (float)sdrBrightnessProgressCallback:(float)arg1 rampContext:(id)arg2 profile:(unsigned long long)arg3;
- (bool)sendCurrentFlipBook;
- (void)sendNotificationForKey:(id)arg1 andValue:(id)arg2;
- (void)setBrightnessFactor:(float)arg1;
- (void)setCurrentDisplayNits:(float)arg1;
- (void)setDisplayON:(bool)arg1;
- (void)setDurationOfEDRRamp:(float)arg1;
- (void)setInitialState:(id)arg1;
- (void)setLiveUpdates:(bool)arg1;
- (void)setLiveUpdatesOverride:(bool)arg1;
- (void)setNitsCap:(float)arg1;
- (void)setNitsOverride:(float)arg1;
- (void)setRemainingTransitionLength:(float)arg1;
- (void)setUpFlipBookHeaderWithLength:(float)arg1 frequency:(int)arg2 lux:(float)arg3;
- (bool)shallUpdateWhitepointFrom:(float)arg1 target:(float)arg2;
- (float)sigmoidFunction:(float)arg1;
- (bool)startTransition:(id)arg1 length:(float)arg2 forceUpdate:(bool)arg3 rampDoneCallback:(id /* block */)arg4 rampCanceledCallback:(id /* block */)arg5;
- (bool)startTransition:(id)arg1 transitionParameters:(struct { bool x1; bool x2; float x3; bool x4; float x5; bool x6; float x7; bool x8; float x9; bool x10; float x11; bool x12; float x13; bool x14; float x15; })arg2 rampDoneCallback:(id /* block */)arg3 rampCanceledCallback:(id /* block */)arg4;
- (float)transitionDurationFromCurrent:(float)arg1 toTarget:(float)arg2;
- (void)updateAAPFactor:(float)arg1 rampDuration:(double)arg2;
- (void)updateAmbient:(float)arg1;
- (void)updateBrightnessLimit:(float)arg1;
- (void)updateColorRamp:(id)arg1;
- (void)updateEDRHeadroom:(float)arg1;
- (void)updateFlipBookEntryWithAAPFactor:(float)arg1;
- (void)updateFlipBookEntryWithBrightness:(float)arg1;
- (void)updateFlipBookEntryWithBrightnessLimit:(float)arg1;
- (void)updateLowAmbientAdaptationScaler:(float)arg1;
- (void)updateSDRBrightness:(float)arg1;

@end
