/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HDRProcessing.framework/HDRProcessing
 */

@interface DolbyVisionDM4 : NSObject {
    float  ITP2LMS;
    float  ITPRedInSaturation;
    float  ITPRedOutSaturation;
    float  LMS2ITP;
    float  LMS2RGB;
    float  RGB2LMS;
    float  RGB2YUV;
    unsigned int  Rgb2YuvOffset;
    float  SRGB2LMS;
    float  TRGB2LMS;
    float  YUV2RGB;
    unsigned int  Yuv2RgbOffset;
    float  bHigh;
    float  bLow;
    struct { 
        float Lw; 
        float Lb; 
        float a; 
        float b; 
        float gamma; 
        float aR; 
        float gammaR; 
    }  bt1886Param;
    float  cHigh;
    float  cLow;
    float  clipI;
    float  clipIPred;
    float  clipIPred2TmIRatio;
    float  clipSat;
    float  clipSatPred;
    float  clipSatPred2SmISatRatio;
    float  clipSlope;
    float  clipSmI;
    float  clipTmI;
    struct { 
        float trimSlope; 
        float trimOffset; 
        float trimPower; 
        float trimChromaWeight; 
        float trimSaturationGain; 
        float msWeight; 
        float targetMidContrast; 
        float clipTrim; 
        float saturationVector[6]; 
        float hueVector[6]; 
    }  codeBias2;
    struct { 
        float trimSlope; 
        float trimOffset; 
        float trimPower; 
        float trimChromaWeight; 
        float trimSaturationGain; 
        float msWeight; 
        float targetMidContrast; 
        float clipTrim; 
        float saturationVector[6]; 
        float hueVector[6]; 
    }  codeBias8;
    float  crushSlope;
    struct { 
        float trimSlope; 
        float trimOffset; 
        float trimPower; 
        float trimChromaWeight; 
        float trimSaturationGain; 
        float msWeight; 
        float targetMidContrast; 
        float clipTrim; 
        float saturationVector[6]; 
        float hueVector[6]; 
    }  default2;
    struct { 
        float trimSlope; 
        float trimOffset; 
        float trimPower; 
        float trimChromaWeight; 
        float trimSaturationGain; 
        float msWeight; 
        float targetMidContrast; 
        float clipTrim; 
        float saturationVector[6]; 
        float hueVector[6]; 
    }  default8;
    unsigned int  dmAlgVerInCm;
    unsigned int  inColorPrimaries;
    unsigned int  inColorSpace;
    unsigned int  inputRange;
    float  mHigh;
    float  mLow;
    float  midSlope;
    unsigned int  outColorPrimaries;
    unsigned int  outColorSpace;
    unsigned int  outTransferFunction;
    unsigned int  outputRange;
    int  powerAdj;
    struct { 
        float min_PQ_offset; 
        float max_PQ_offset; 
        float avg_PQ_offset; 
    }  pqOffset;
    float  sClipPq;
    float  sCrushPq;
    float  sMaxPq;
    float  sMaxPqTm;
    float  sMaxTm;
    float  sMidPq;
    float  sMinPq;
    float  sMinPqTm;
    float  sMinTm;
    int  satGainAdj;
    int  slopeAdj;
    float * smLutI;
    float * smLutS;
    float  sms_change;
    float  tClipPq;
    float  tCrushPq;
    float  tMaxLinear;
    float  tMaxPq;
    float  tMaxPqTm;
    float  tMaxTm;
    int  tMidContrastAdj;
    float  tMidPq;
    float  tMinPq;
    float  tMinPqTm;
    float  tMinTm;
    float * tmLutI;
    float * tmLutS;
    unsigned long long  tmLutSize;
    float  tms_change;
    struct { 
        float trimSlope; 
        float trimOffset; 
        float trimPower; 
        float trimChromaWeight; 
        float trimSaturationGain; 
        float msWeight; 
        float targetMidContrast; 
        float clipTrim; 
        float saturationVector[6]; 
        float hueVector[6]; 
    }  trimData;
    struct { 
        float trimSlope; 
        float trimOffset; 
        float trimPower; 
        float trimChromaWeight; 
        float trimSaturationGain; 
        float msWeight; 
        float targetMidContrast; 
        float clipTrim; 
        float saturationVector[6]; 
        float hueVector[6]; 
    }  trimData2;
    struct { 
        float trimSlope; 
        float trimOffset; 
        float trimPower; 
        float trimChromaWeight; 
        float trimSaturationGain; 
        float msWeight; 
        float targetMidContrast; 
        float clipTrim; 
        float saturationVector[6]; 
        float hueVector[6]; 
    }  trimData8;
    struct { 
        float trimSlope; 
        float trimOffset; 
        float trimPower; 
        float trimChromaWeight; 
        float trimSaturationGain; 
        float msWeight; 
        float targetMidContrast; 
        float clipTrim; 
        float saturationVector[6]; 
        float hueVector[6]; 
    }  valueAdj2;
}

- (void)BuildChromaXInfo:(double)arg1 TrimSetAct:(int)arg2 Luma:(double*)arg3 Idxa:(int*)arg4 IdxMax:(int*)arg5 X2Interp:(double*)arg6 DmMetaData:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; int x5[9]; unsigned int x6[3]; int x7[9]; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; struct { unsigned short x_22_1_1; unsigned short x_22_1_2; unsigned short x_22_1_3; unsigned short x_22_1_4; } x22; struct { unsigned short x_23_1_1; unsigned short x_23_1_2; unsigned short x_23_1_3; unsigned short x_23_1_4; unsigned short x_23_1_5; unsigned short x_23_1_6; unsigned short x_23_1_7; short x_23_1_8; } x23[16]; struct { unsigned short x_24_1_1; unsigned short x_24_1_2; unsigned short x_24_1_3; unsigned short x_24_1_4; } x24; struct { unsigned short x_25_1_1; unsigned short x_25_1_2; unsigned short x_25_1_3; } x25; struct { unsigned short x_26_1_1; unsigned short x_26_1_2; unsigned short x_26_1_3; unsigned short x_26_1_4; unsigned short x_26_1_5; } x26; }*)arg7;
- (int)BuildInterpInfo:(int)arg1 Xa:(double*)arg2 Idxa:(int*)arg3 TIdxMax:(int)arg4 X2Interp:(double)arg5 Alpha:(double*)arg6 U16a:(void*)arg7 U16L:(void**)arg8 U16R:(void**)arg9 DmMetaData:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; int x5[9]; unsigned int x6[3]; int x7[9]; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; struct { unsigned short x_22_1_1; unsigned short x_22_1_2; unsigned short x_22_1_3; unsigned short x_22_1_4; } x22; struct { unsigned short x_23_1_1; unsigned short x_23_1_2; unsigned short x_23_1_3; unsigned short x_23_1_4; unsigned short x_23_1_5; unsigned short x_23_1_6; unsigned short x_23_1_7; short x_23_1_8; } x23[16]; struct { unsigned short x_24_1_1; unsigned short x_24_1_2; unsigned short x_24_1_3; unsigned short x_24_1_4; } x24; struct { unsigned short x_25_1_1; unsigned short x_25_1_2; unsigned short x_25_1_3; } x25; struct { unsigned short x_26_1_1; unsigned short x_26_1_2; unsigned short x_26_1_3; unsigned short x_26_1_4; unsigned short x_26_1_5; } x26; }*)arg10;
- (void)BuildLumaXInfo:(double)arg1 TrimSetAct:(int)arg2 Luma:(double*)arg3 Idxa:(int*)arg4 IdxMax:(int*)arg5 X2Interp:(double*)arg6 DmMetaData:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; int x5[9]; unsigned int x6[3]; int x7[9]; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; struct { unsigned short x_22_1_1; unsigned short x_22_1_2; unsigned short x_22_1_3; unsigned short x_22_1_4; } x22; struct { unsigned short x_23_1_1; unsigned short x_23_1_2; unsigned short x_23_1_3; unsigned short x_23_1_4; unsigned short x_23_1_5; unsigned short x_23_1_6; unsigned short x_23_1_7; short x_23_1_8; } x23[16]; struct { unsigned short x_24_1_1; unsigned short x_24_1_2; unsigned short x_24_1_3; unsigned short x_24_1_4; } x24; struct { unsigned short x_25_1_1; unsigned short x_25_1_2; unsigned short x_25_1_3; } x25; struct { unsigned short x_26_1_1; unsigned short x_26_1_2; unsigned short x_26_1_3; unsigned short x_26_1_4; unsigned short x_26_1_5; } x26; }*)arg7;
- (int)DecodeL2L8:(struct { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9[6]; float x10[6]; }*)arg1 CodeBias2:(struct { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9[6]; float x10[6]; }*)arg2 TrimData8:(struct { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9[6]; float x10[6]; }*)arg3 CodeBias8:(struct { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9[6]; float x10[6]; }*)arg4 Default8:(struct { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9[6]; float x10[6]; }*)arg5 UseDftLuma:(unsigned char)arg6 UseDftChroma:(unsigned char)arg7;
- (void)DmProcess:(int)arg1 Height:(int)arg2 bufI:(float*)arg3 bufU:(float*)arg4 bufV:(float*)arg5;
- (bool)GetPrimaries:(unsigned int)arg1 Primaries:(int*)arg2 Count:(int)arg3;
- (void)InputMapping:(float*)arg1 pX1:(float*)arg2 pX2:(float*)arg3;
- (void)OutputMapping:(float*)arg1 pX1:(float*)arg2 pX2:(float*)arg3;
- (void)SetL2L8L10:(struct { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9[6]; float x10[6]; }*)arg1 TrimData8:(struct { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9[6]; float x10[6]; }*)arg2 Default8:(struct { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9[6]; float x10[6]; }*)arg3 UseDftLuma:(unsigned char)arg4 UseDftChroma:(unsigned char)arg5;
- (void)ToneMapping:(float*)arg1 pX1:(float*)arg2 pX2:(float*)arg3 pAdm:(float*)arg4;
- (void)ToneMappingInCtrl:(float*)arg1 pX1:(float*)arg2 pX2:(float*)arg3 pAdm:(float*)arg4;
- (void)applyL3:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; int x5[9]; unsigned int x6[3]; int x7[9]; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; struct { unsigned short x_22_1_1; unsigned short x_22_1_2; unsigned short x_22_1_3; unsigned short x_22_1_4; } x22; struct { unsigned short x_23_1_1; unsigned short x_23_1_2; unsigned short x_23_1_3; unsigned short x_23_1_4; unsigned short x_23_1_5; unsigned short x_23_1_6; unsigned short x_23_1_7; short x_23_1_8; } x23[16]; struct { unsigned short x_24_1_1; unsigned short x_24_1_2; unsigned short x_24_1_3; unsigned short x_24_1_4; } x24; struct { unsigned short x_25_1_1; unsigned short x_25_1_2; unsigned short x_25_1_3; } x25; struct { unsigned short x_26_1_1; unsigned short x_26_1_2; unsigned short x_26_1_3; unsigned short x_26_1_4; unsigned short x_26_1_5; } x26; }*)arg1 srcCrushPQ:(float*)arg2 srcMidPQ:(float*)arg3 srcClipPQ:(float*)arg4;
- (void)calcToneMapParams;
- (void)createTmLuts:(float*)arg1 tLutS:(float*)arg2 sLutI:(float*)arg3 sLutS:(float*)arg4 tLutISize:(unsigned long long)arg5 tLutSSize:(unsigned long long)arg6 sLutISize:(unsigned long long)arg7 sLutSSize:(unsigned long long)arg8;
- (void)createTmLutsEx:(float*)arg1 tLutS:(float*)arg2 sLutI:(float*)arg3 sLutS:(float*)arg4 tLutISize:(unsigned long long)arg5 tLutSSize:(unsigned long long)arg6 sLutISize:(unsigned long long)arg7 sLutSSize:(unsigned long long)arg8 TmParam:(const struct _DoViTMParam { bool x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; float x27; float x28; float x29; float x30; float x31; float x32; float x33; }*)arg9 EdrAdaptationParam:(const struct _EdrAdaptationParam { bool x1; unsigned short x2; float x3[3]; float x4[3]; float x5[3]; bool x6; }*)arg10 AmbAdaptationParam:(const struct _AmbAdaptationParam { bool x1; unsigned short x2; float x3[3]; float x4[3]; float x5[3]; float x6; float x7; bool x8; }*)arg11 IsDoVi84:(bool)arg12 HlgOOTFCombined:(bool)arg13;
- (void)createToneCurve:(float)arg1 srcMaxPQ:(float)arg2 tgtMinPQ:(float)arg3 tgtMaxPQ:(float)arg4 srcCrushPQ:(float)arg5 srcMidPQ:(float)arg6 srcClipPQ:(float)arg7 targetMaxLinear:(float)arg8 DM_MetaData:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; int x5[9]; unsigned int x6[3]; int x7[9]; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; struct { unsigned short x_22_1_1; unsigned short x_22_1_2; unsigned short x_22_1_3; unsigned short x_22_1_4; } x22; struct { unsigned short x_23_1_1; unsigned short x_23_1_2; unsigned short x_23_1_3; unsigned short x_23_1_4; unsigned short x_23_1_5; unsigned short x_23_1_6; unsigned short x_23_1_7; short x_23_1_8; } x23[16]; struct { unsigned short x_24_1_1; unsigned short x_24_1_2; unsigned short x_24_1_3; unsigned short x_24_1_4; } x24; struct { unsigned short x_25_1_1; unsigned short x_25_1_2; unsigned short x_25_1_3; } x25; struct { unsigned short x_26_1_1; unsigned short x_26_1_2; unsigned short x_26_1_3; unsigned short x_26_1_4; unsigned short x_26_1_5; } x26; }*)arg9 usePseudoTrim:(bool)arg10;
- (void)dealloc;
- (void)debugDMMetaData2:(const struct { unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; short x8; }*)arg1;
- (void)debugDMMetaData8:(const struct { unsigned short x1; unsigned short x2; unsigned char x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; unsigned short x9; unsigned short x10; unsigned short x11; unsigned char x12[6]; unsigned char x13[6]; }*)arg1;
- (void)debugTrimData2:(const struct { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9[6]; float x10[6]; }*)arg1;
- (void)debugTrimData8:(const struct { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9[6]; float x10[6]; }*)arg1;
- (void)dumpConfigData:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1;
- (void)dumpConfigDataToFile:(int)arg1;
- (bool)hasDM4TonemapConfigChanged:(const struct { float x1; float x2; unsigned int x3; float x4; float x5; float x6; float x7; unsigned int x8; float x9; float x10; float x11; float x12; unsigned int x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; unsigned int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; float x42; float x43; float x44; float x45; bool x46; float x47; float x48; bool x49; float x50; int x51; bool x52; int x53; int x54; float x55; int x56; struct _DpcParam { float x_57_1_1; float x_57_1_2; float x_57_1_3; float x_57_1_4; bool x_57_1_5; } x57; int x58; unsigned short x59; bool x60; float x61; bool x62; bool x63; bool x64; }*)arg1 TonemapConfig:(const struct { float x1; float x2; float x3; struct _HDR10TMParam { bool x_4_1_1; float x_4_1_2; float x_4_1_3; float x_4_1_4; float x_4_1_5; float x_4_1_6; float x_4_1_7; float x_4_1_8; float x_4_1_9; float x_4_1_10; float x_4_1_11; float x_4_1_12; float x_4_1_13; float x_4_1_14; float x_4_1_15; float x_4_1_16; float x_4_1_17; float x_4_1_18; float x_4_1_19; float x_4_1_20; float x_4_1_21; struct _TMCurveParam { int x_22_2_1; union { struct _splCurveParam { unsigned short x_1_4_1; float x_1_4_2[6]; float x_1_4_3[6]; float x_1_4_4[6]; } x_2_3_1; struct _ebzCurveParam { unsigned short x_2_4_1; float x_2_4_2[6]; float x_2_4_3[6]; float x_2_4_4[6]; unsigned short x_2_4_5[5]; float x_2_4_6[5][14]; } x_2_3_2; struct _doviCurveParam { float x_3_4_1; float x_3_4_2; float x_3_4_3; float x_3_4_4; } x_2_3_3; } x_22_2_2; } x_4_1_22; float x_4_1_23; float x_4_1_24; } x4; struct _EdrAdaptationParam { bool x_5_1_1; unsigned short x_5_1_2; float x_5_1_3[3]; float x_5_1_4[3]; float x_5_1_5[3]; bool x_5_1_6; } x5; struct _AmbAdaptationParam { bool x_6_1_1; unsigned short x_6_1_2; float x_6_1_3[3]; float x_6_1_4[3]; float x_6_1_5[3]; float x_6_1_6; float x_6_1_7; bool x_6_1_8; } x6; }*)arg2 EdrAdaptationParam:(const struct _EdrAdaptationParam { bool x1; unsigned short x2; float x3[3]; float x4[3]; float x5[3]; bool x6; }*)arg3 AmbAdaptationParam:(const struct _AmbAdaptationParam { bool x1; unsigned short x2; float x3[3]; float x4[3]; float x5[3]; float x6; float x7; bool x8; }*)arg4;
- (id)init:(unsigned long long)arg1;
- (void)initBt1886Param;
- (void)initColorSpace:(unsigned int)arg1 OutClrSpace:(unsigned int)arg2 OutTrfFunction:(unsigned int)arg3;
- (void)initDmAlgVerInCm:(unsigned int)arg1;
- (void)initToneMapMatrices:(unsigned int)arg1 outbits:(unsigned int)arg2 srcRgb2Lms:(float*)arg3 tgtRgb2Lms:(float*)arg4;
- (void)initToneMapMatrices:(float*)arg1 tgtRgb2Lms:(float*)arg2;
- (void)initToneMapParams:(float)arg1 srcMaxPQ:(float)arg2 tgtMinPQ:(float)arg3 tgtMaxPQ:(float)arg4 srcCrushPQ:(float)arg5 srcMidPQ:(float)arg6 srcClipPQ:(float)arg7 targetMaxLinear:(float)arg8 DM_MetaData:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; int x5[9]; unsigned int x6[3]; int x7[9]; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; struct { unsigned short x_22_1_1; unsigned short x_22_1_2; unsigned short x_22_1_3; unsigned short x_22_1_4; } x22; struct { unsigned short x_23_1_1; unsigned short x_23_1_2; unsigned short x_23_1_3; unsigned short x_23_1_4; unsigned short x_23_1_5; unsigned short x_23_1_6; unsigned short x_23_1_7; short x_23_1_8; } x23[16]; struct { unsigned short x_24_1_1; unsigned short x_24_1_2; unsigned short x_24_1_3; unsigned short x_24_1_4; } x24; struct { unsigned short x_25_1_1; unsigned short x_25_1_2; unsigned short x_25_1_3; } x25; struct { unsigned short x_26_1_1; unsigned short x_26_1_2; unsigned short x_26_1_3; unsigned short x_26_1_4; unsigned short x_26_1_5; } x26; }*)arg9;
- (void)initTrimData:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; int x5[9]; unsigned int x6[3]; int x7[9]; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; struct { unsigned short x_22_1_1; unsigned short x_22_1_2; unsigned short x_22_1_3; unsigned short x_22_1_4; } x22; struct { unsigned short x_23_1_1; unsigned short x_23_1_2; unsigned short x_23_1_3; unsigned short x_23_1_4; unsigned short x_23_1_5; unsigned short x_23_1_6; unsigned short x_23_1_7; short x_23_1_8; } x23[16]; struct { unsigned short x_24_1_1; unsigned short x_24_1_2; unsigned short x_24_1_3; unsigned short x_24_1_4; } x24; struct { unsigned short x_25_1_1; unsigned short x_25_1_2; unsigned short x_25_1_3; } x25; struct { unsigned short x_26_1_1; unsigned short x_26_1_2; unsigned short x_26_1_3; unsigned short x_26_1_4; unsigned short x_26_1_5; } x26; }*)arg1;
- (float)satMapI:(float)arg1 Adm:(float)arg2;
- (float)satMapS:(float)arg1;
- (void)setPseudoTrimDataForHLG:(float)arg1;
- (float)toneMapI:(float)arg1;
- (float)toneMapInterpI:(float)arg1;
- (float)toneMapS:(float)arg1;
- (void)updateDM4TonemapConfig:(struct { float x1; float x2; float x3; struct _HDR10TMParam { bool x_4_1_1; float x_4_1_2; float x_4_1_3; float x_4_1_4; float x_4_1_5; float x_4_1_6; float x_4_1_7; float x_4_1_8; float x_4_1_9; float x_4_1_10; float x_4_1_11; float x_4_1_12; float x_4_1_13; float x_4_1_14; float x_4_1_15; float x_4_1_16; float x_4_1_17; float x_4_1_18; float x_4_1_19; float x_4_1_20; float x_4_1_21; struct _TMCurveParam { int x_22_2_1; union { struct _splCurveParam { unsigned short x_1_4_1; float x_1_4_2[6]; float x_1_4_3[6]; float x_1_4_4[6]; } x_2_3_1; struct _ebzCurveParam { unsigned short x_2_4_1; float x_2_4_2[6]; float x_2_4_3[6]; float x_2_4_4[6]; unsigned short x_2_4_5[5]; float x_2_4_6[5][14]; } x_2_3_2; struct _doviCurveParam { float x_3_4_1; float x_3_4_2; float x_3_4_3; float x_3_4_4; } x_2_3_3; } x_22_2_2; } x_4_1_22; float x_4_1_23; float x_4_1_24; } x4; struct _EdrAdaptationParam { bool x_5_1_1; unsigned short x_5_1_2; float x_5_1_3[3]; float x_5_1_4[3]; float x_5_1_5[3]; bool x_5_1_6; } x5; struct _AmbAdaptationParam { bool x_6_1_1; unsigned short x_6_1_2; float x_6_1_3[3]; float x_6_1_4[3]; float x_6_1_5[3]; float x_6_1_6; float x_6_1_7; bool x_6_1_8; } x6; }*)arg1 DMConfig:(const struct { float x1; float x2; unsigned int x3; float x4; float x5; float x6; float x7; unsigned int x8; float x9; float x10; float x11; float x12; unsigned int x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; unsigned int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; float x42; float x43; float x44; float x45; bool x46; float x47; float x48; bool x49; float x50; int x51; bool x52; int x53; int x54; float x55; int x56; struct _DpcParam { float x_57_1_1; float x_57_1_2; float x_57_1_3; float x_57_1_4; bool x_57_1_5; } x57; int x58; unsigned short x59; bool x60; float x61; bool x62; bool x63; bool x64; }*)arg2 EdrAdaptationParam:(const struct _EdrAdaptationParam { bool x1; unsigned short x2; float x3[3]; float x4[3]; float x5[3]; bool x6; }*)arg3 AmbAdaptationParam:(const struct _AmbAdaptationParam { bool x1; unsigned short x2; float x3[3]; float x4[3]; float x5[3]; float x6; float x7; bool x8; }*)arg4;

@end
