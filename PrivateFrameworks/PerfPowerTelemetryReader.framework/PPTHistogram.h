/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PerfPowerTelemetryReader.framework/PerfPowerTelemetryReader
 */

@interface PPTHistogram : NSObject <NSCopying, NSMutableCopying, NSSecureCoding> {
    struct unique_ptr<ppt::PPTHistogram_Internal<unsigned long, double>, std::default_delete<ppt::PPTHistogram_Internal<unsigned long, double>>> { 
        struct __compressed_pair<ppt::PPTHistogram_Internal<unsigned long, double> *, std::default_delete<ppt::PPTHistogram_Internal<unsigned long, double>>> { 
            void *__value_; 
        } __ptr_; 
    }  _histogramPtr;
}

@property (readonly) unsigned long long binCount;
@property (readonly) unsigned long long dimensionCount;
@property (readonly) unsigned long long sampleCount;

+ (bool)supportsSecureCoding;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)JSONRepresentation;
- (unsigned long long)binCount;
- (id)binData;
- (id)binDataAt:(id)arg1;
- (id)binIndicesFor:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)cumulativeFrequencyBins;
- (id)description;
- (double)dimensionArea:(int)arg1;
- (id)dimensionCategories:(int)arg1;
- (unsigned long long)dimensionCount;
- (id)dimensionLabel:(int)arg1;
- (double)dimensionMaxSample:(int)arg1;
- (double)dimensionMean:(int)arg1;
- (double)dimensionMedian:(int)arg1;
- (double)dimensionMinSample:(int)arg1;
- (double)dimensionMode:(int)arg1;
- (struct { double x1; double x2; })dimensionRange:(int)arg1;
- (double)dimensionVariance:(int)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)frequencyBins;
- (unsigned long long)hash;
- (id)initWithBinCount:(unsigned long long)arg1 range:(struct { double x1; double x2; })arg2;
- (id)initWithBinCount:(unsigned long long)arg1 range:(struct { double x1; double x2; })arg2 samples:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithDimensions:(id)arg1;
- (id)initWithHistogram:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToHistogram:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
- (id)processBinData:(struct PPTHistogramBin_Internal<unsigned long, double> { unsigned long long x1; double x2; double x3; double x4; double x5; struct vector<std::string, std::allocator<std::string>> { void *x_6_1_1; void *x_6_1_2; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *x_3_2_1; } x_6_1_3; } x6; struct vector<std::vector<double>, std::allocator<std::vector<double>>> { void *x_7_1_1; void *x_7_1_2; struct __compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>> { void *x_3_2_1; } x_7_1_3; } x7; struct vector<int, std::allocator<int>> { int *x_8_1_1; int *x_8_1_2; struct __compressed_pair<int *, std::allocator<int>> { int *x_3_2_1; } x_8_1_3; } x8; })arg1;
- (void)recordOneDimensionSamples:(id)arg1;
- (void)recordSample:(id)arg1;
- (void)recordSample:(id)arg1 withAccumulatorValue:(id)arg2;
- (unsigned long long)sampleCount;
- (double)valueForPercentile:(double)arg1;

@end
