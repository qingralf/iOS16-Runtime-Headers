/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NewsArticles.framework/NewsArticles
 */

@interface IMCustomSlider : UISlider {
    struct CGPoint { 
        double x; 
        double y; 
    }  _beginLocation;
    CALayer * _breadcrumbLayer;
    float  _breadcrumbValue;
    <IMCustomSliderDelegate> * _delegate;
    double  _factor;
    bool  _fineScrubbing;
    double  _fineScrubbingVerticalRange;
    UIImage * _highlightedThumb;
    struct CGPoint { 
        double x; 
        double y; 
    }  _offset;
    NSMutableDictionary * _perStateContent;
    struct CGPoint { 
        double x; 
        double y; 
    }  _previousLocation;
    int  _speed;
    UIImage * _thumb;
}

@property (nonatomic, retain) CALayer *breadcrumbLayer;
@property (nonatomic) float breadcrumbValue;
@property (nonatomic) <IMCustomSliderDelegate> *delegate;
@property (nonatomic) bool fineScrubbing;
@property (nonatomic) double fineScrubbingVerticalRange;
@property (nonatomic, retain) UIImage *highlightedThumb;
@property (nonatomic) struct CGPoint { double x1; double x2; } offset;
@property (nonatomic, retain) NSMutableDictionary *perStateContent;
@property (nonatomic) int speed;
@property (nonatomic, retain) UIImage *thumb;

- (void).cxx_destruct;
- (id)_imageForKey:(id)arg1 forState:(unsigned long long)arg2;
- (float)_scaleForIdealValueForVerticalPosition:(double)arg1;
- (float)_scaleForVerticalPosition:(double)arg1;
- (void)_setImage:(id)arg1 key:(id)arg2 forState:(unsigned long long)arg3;
- (bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (id)breadcrumbLayer;
- (float)breadcrumbValue;
- (void)cancelTrackingWithEvent:(id)arg1;
- (bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)delegate;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (bool)fineScrubbing;
- (double)fineScrubbingVerticalRange;
- (id)highlightedThumb;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (struct CGPoint { double x1; double x2; })offset;
- (id)perStateContent;
- (void)setBreadcrumbLayer:(id)arg1;
- (void)setBreadcrumbValue:(float)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFineScrubbing:(bool)arg1;
- (void)setFineScrubbingVerticalRange:(double)arg1;
- (void)setHighlightedThumb:(id)arg1;
- (void)setOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPerStateContent:(id)arg1;
- (void)setSpeed:(int)arg1;
- (void)setThumb:(id)arg1;
- (void)setTrackBreadcrumbImage:(id)arg1 forState:(unsigned long long)arg2;
- (int)speed;
- (id)thumb;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })thumbRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 trackRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 value:(float)arg3;
- (id)trackBreadcrumbImageForState:(unsigned long long)arg1;
- (void)updateFactor:(double)arg1;

@end
