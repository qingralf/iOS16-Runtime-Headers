/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NotesEditor.framework/NotesEditor
 */

@interface ICTextView : ICBaseTextView <ICNoteEditorUserTitleViewDelegate, ICTextControllerDelegate> {
    CALayer * _bottomSplitLayer;
    ICNoteEditorCompatibilityBannerView * _compatibilityBannerView;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _currentSetBoundsRect;
    ICNoteEditorDateView * _dateView;
    bool  _disableContentOffsetChanges;
    bool  _displayingEditableContent;
    NSMutableArray * _highlightLayers;
    bool  _isBecomingFirstResponder;
    bool  _isInSetBounds;
    bool  _isInsertingTextFromKeyboardInput;
    bool  _isSettingContentOffset;
    bool  _isSettingEditable;
    bool  _isSettingStyleWithStyleUI;
    bool  _isTransitioningToNewSize;
    bool  _isUpdatingPanGesture;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _lastDragInsertionRect;
    UIResponder * _nextResponderOverride;
    ICSharedScrollClampingController * _scrollClampingControllerDelayedRelease;
    bool  _shouldAvoidBecomingFirstResponder;
    CATransformLayer * _splitLayerContainer;
    CALayer * _topSplitLayer;
    bool  _touchesCurrentlyOnAttachmentView;
    ICNoteEditorUserTitleView * _userTitleView;
}

@property (nonatomic) <ICAttachmentViewDelegate> *attachmentViewDelegate;
@property (nonatomic, retain) CALayer *bottomSplitLayer;
@property (nonatomic, retain) ICNoteEditorCompatibilityBannerView *compatibilityBannerView;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } currentSetBoundsRect;
@property (nonatomic, retain) ICNoteEditorDateView *dateView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disableContentOffsetChanges;
@property (getter=isDisplayingEditableContent) bool displayingEditableContent;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableArray *highlightLayers;
@property (nonatomic, readonly) bool isBecomingFirstResponder;
@property (nonatomic) bool isInSetBounds;
@property (nonatomic) bool isInsertingTextFromKeyboardInput;
@property (nonatomic, readonly) bool isScrolling;
@property (nonatomic) bool isSettingContentOffset;
@property (nonatomic) bool isSettingEditable;
@property (nonatomic) bool isSettingStyleWithStyleUI;
@property (nonatomic) bool isTransitioningToNewSize;
@property (nonatomic) bool isUpdatingPanGesture;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } lastDragInsertionRect;
@property (nonatomic) UIResponder *nextResponderOverride;
@property (nonatomic, retain) ICSharedScrollClampingController *scrollClampingControllerDelayedRelease;
@property (nonatomic) bool shouldAvoidBecomingFirstResponder;
@property (nonatomic, retain) CATransformLayer *splitLayerContainer;
@property (readonly) Class superclass;
@property (nonatomic, retain) CALayer *topSplitLayer;
@property (nonatomic) bool touchesCurrentlyOnAttachmentView;
@property (nonatomic, retain) ICNoteEditorUserTitleView *userTitleView;

+ (void)initialize;

- (void).cxx_destruct;
- (id)TTTextStorageOptional;
- (bool)_accessibilityBeginUndoableTextInsertion;
- (bool)_accessibilityEndUndoableTextInsertion;
- (void)_adjustContentOffsetIfNecessary;
- (void)_handleKeyUIEvent:(id)arg1;
- (id)_icaxUnfilteredAttributedString;
- (id)_nextKeyResponder;
- (void)_scrollToCaretIfNeeded;
- (void)_scrollToSelectionIfNeeded;
- (bool)_shouldBecomeEditableUponBecomingTargetOfKeyboardEventDeferringEnvironment;
- (bool)_shouldBecomeEditableUponFocus;
- (id)_targetedPreviewForTextInteractableItem:(id)arg1 dismissing:(bool)arg2;
- (void)_updateContentSize;
- (void)_updatePanGesture;
- (id)accessibilityLabel;
- (void)applyEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (id)attachmentViewDelegate;
- (id)attachmentViewTappedByGesture:(id)arg1;
- (bool)attachmentViewUnderTouches:(id)arg1;
- (bool)becomeFirstResponder;
- (bool)becomesEditableWithGestures;
- (void)beginSelectionChange;
- (id)bottomSplitLayer;
- (bool)canBecomeFirstResponder;
- (bool)canBecomeFocused;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })caretRectForPosition:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })characterRangeFromTextKitRange:(id)arg1;
- (void)clampTextView;
- (struct CGPoint { double x1; double x2; })clippedContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (long long)compareFoundRange:(id)arg1 toRange:(id)arg2 inDocument:(id)arg3;
- (id)compatibilityBannerView;
- (void)createDateLabel;
- (void)createLayersForSplitAtCharacter:(unsigned long long)arg1 topTargetFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 bottomTargetFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (void)createUserTitleViewIfNecessaryForNote:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })currentSetBoundsRect;
- (id)dateView;
- (void)dealloc;
- (void)didEndTextSearchOperation;
- (void)didFinishAnimatingAfterSizeTransition;
- (bool)disableContentOffsetChanges;
- (void)endSelectionChange;
- (void)findInteraction:(id)arg1 didBeginFindSession:(id)arg2;
- (id)findableForAttachment:(id)arg1;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)handleAccessibilityDarkerSystemColorsStatusDidChange:(id)arg1;
- (bool)hideCompatibilityBanner;
- (id)highlightLayers;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 textContainer:(id)arg2;
- (void)initializeScollClampingController;
- (void)inputModeDidChange:(id)arg1;
- (bool)isBecomingFirstResponder;
- (bool)isDisplayingEditableContent;
- (bool)isEditingOnSystemPaper;
- (bool)isInSetBounds;
- (bool)isInsertingTextFromKeyboardInput;
- (bool)isPaperLinkBarShowingOrWillShow;
- (bool)isPreviewing;
- (bool)isScrolling;
- (bool)isSettingContentOffset;
- (bool)isSettingEditable;
- (bool)isSettingStyleWithStyleUI;
- (bool)isTransitioningToNewSize;
- (bool)isUpdatingPanGesture;
- (bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(bool)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })lastDragInsertionRect;
- (void)layoutMarginsDidChange;
- (void)layoutSubviews;
- (double)leadingMargin;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (double)maxYContentOffset;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })minimumMargins;
- (id)nextResponderOverride;
- (void)performTextSearchWithQueryString:(id)arg1 usingOptions:(id)arg2 resultAggregator:(id)arg3;
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (void)replaceAllOccurrencesOfQueryString:(id)arg1 usingOptions:(id)arg2 withText:(id)arg3;
- (void)replaceFoundTextInRange:(id)arg1 inDocument:(id)arg2 withText:(id)arg3;
- (void)resetContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)resetUndoManager;
- (bool)resignFirstResponder;
- (void)sceneWillEnterForeground:(id)arg1;
- (id)scrollClampingControllerDelayedRelease;
- (void)scrollRangeToVisible:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 consideringInsets:(bool)arg2 animated:(bool)arg3 inSearchableString:(id)arg4;
- (void)scrollRectToVisible:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 animated:(bool)arg2;
- (void)select:(id)arg1;
- (id)selectedText;
- (id)selectionRectsForRange:(id)arg1;
- (bool)selectionSupportsFindInNote;
- (void)setAttachmentViewDelegate:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (void)setBottomSplitLayer:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setClippedContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setCompatibilityBannerView:(id)arg1;
- (void)setContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setContentOffset:(struct CGPoint { double x1; double x2; })arg1 animated:(bool)arg2;
- (void)setCurrentSetBoundsRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setDateView:(id)arg1;
- (void)setDisableContentOffsetChanges:(bool)arg1;
- (void)setDisplayingEditableContent:(bool)arg1;
- (void)setEditable:(bool)arg1;
- (void)setHighlightLayers:(id)arg1;
- (void)setIsInSetBounds:(bool)arg1;
- (void)setIsInsertingTextFromKeyboardInput:(bool)arg1;
- (void)setIsSettingContentOffset:(bool)arg1;
- (void)setIsSettingEditable:(bool)arg1;
- (void)setIsSettingStyleWithStyleUI:(bool)arg1;
- (void)setIsTransitioningToNewSize:(bool)arg1;
- (void)setIsUpdatingPanGesture:(bool)arg1;
- (void)setLastDragInsertionRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setNextResponderOverride:(id)arg1;
- (void)setScrollClampingControllerDelayedRelease:(id)arg1;
- (void)setSelectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setSelectedTextRange:(id)arg1;
- (void)setShouldAvoidBecomingFirstResponder:(bool)arg1;
- (void)setSplitLayerContainer:(id)arg1;
- (void)setTopSplitLayer:(id)arg1;
- (void)setTouchesCurrentlyOnAttachmentView:(bool)arg1;
- (void)setUserTitleView:(id)arg1;
- (bool)shouldAutoScroll;
- (bool)shouldAvoidBecomingFirstResponder;
- (bool)shouldReplaceFoundTextInRange:(id)arg1 inDocument:(id)arg2 withText:(id)arg3;
- (bool)shouldUpdateVisibleSupplementalViewsInLayoutSubviews;
- (bool)showCompatibilityBannerWithParentViewController:(id)arg1;
- (id)singleSelectedAttachment;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })splitFrameForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withTargetFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 top:(bool)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })splitFrameForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withTargetFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 top:(bool)arg3 originForRendering:(struct CGPoint { double x1; double x2; }*)arg4;
- (id)splitLayerContainer;
- (id)splitLayerForCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withTargetFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 top:(bool)arg3;
- (void)splitViewAnimatedTransitionEnded:(id)arg1;
- (void)splitViewAnimatedTransitionWillBegin:(id)arg1;
- (void)startEditingForTapGesture:(id)arg1;
- (bool)supportsAttachments;
- (bool)supportsTextReplacement;
- (id)tableAttachmentViewControllerForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)targetForAction:(SEL)arg1 withSender:(id)arg2;
- (void)textControllerDidHandleSpecialCaseEditing:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleStrikethrough;
- (void)toggleUnderline:(id)arg1;
- (id)topSplitLayer;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (bool)touchesCurrentlyOnAttachmentView;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (bool)touchesShouldCancelInContentView:(id)arg1;
- (void)unclampTextView;
- (id)undoManager;
- (void)updateCompatibilityBannerForNote:(id)arg1 parentViewController:(id)arg2 updateTextViewContentInsets:(bool)arg3;
- (void)updateLayoutMargins;
- (void)updateLayoutMarginsForMultipleTextViewsIfNecessary;
- (void)updateOverscrollItemFrames;
- (void)updateTextViewForDidChange;
- (void)userTitleHiddenStateDidChange:(id)arg1;
- (id)userTitleView;

@end
