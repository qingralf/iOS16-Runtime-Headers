/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NotesEditor.framework/NotesEditor
 */

@interface ICNoteEditorViewController : ICScrollViewDelegateViewController <ICAccessibilityChildReparentingController, ICAddCollaboratorsActivityDelegate, ICAttachmentInsertionDelegate, ICAttachmentViewDelegate, ICAudioBarViewControllerDelegate, ICAuxiliaryTextViewHosting, ICBaseTextViewDelegate, ICDocCamViewControllerDelegate, ICHandwritingDebugDelegate, ICHashtagAnalyticsDelegate, ICHashtagViewControllerDelegate, ICInkPaletteControllerDelegate, ICInkToolPickerResponderDelegate, ICManagedObjectContextChangeControllerDelegate, ICMentionsAnalyticsDelegate, ICNoteEditing, ICNoteEditorInputAccessoryViewDelegate, ICRemoteDocCamViewControllerDelegate, ICStyleSelectorDelegate, NSUserActivityDelegate, PKRulerHostingDelegate, PKScribbleInteractionDelegate, TPKContentControllerDelegate, UIGestureRecognizerDelegate, UINavigationControllerDelegate, UIPopoverPresentationControllerDelegate, UITextViewDelegate, UITextViewDrawingDelegate, _UIViewBoundingPathChangeObserver> {
    UIBarButtonItem * _actionBarButton;
    ICActivityStreamDockView * _activityStreamToolbar;
    NSLayoutConstraint * _activityStreamToolbarBottomConstraint;
    bool  _addDocumentScanAfterViewAppears;
    UIBarButtonItem * _addImageAttachmentButton;
    UIBarButtonItem * _addImageAttachmentCenterButton;
    UIBarButtonItem * _addTableButton;
    UIBarButtonItem * _addTableCenterButton;
    bool  _addToDoListAfterViewAppears;
    UIBarButtonItem * _addTodoBarButton;
    bool  _animateRangeToScrollToVisible;
    ICSelectorDelayer * _applyAccessibilityInfoDelayer;
    ICTextViewScrollState * _archivedScrollStateToApply;
    ICAttachmentInsertionController * _attachmentInsertionController;
    ICAttributionSidebarController * _attributionSidebarController;
    ICAudioBarViewController * _audioBarViewController;
    ICAuthorHighlightsController * _authorHighlightsController;
    ICAuthorHighlightsUpdater * _authorHighlightsUpdater;
    UIResponder * _auxiliaryResponder;
    <ICAuxiliaryStyling> * _auxiliaryStylingController;
    bool  _canShowLinkBar;
    struct CGPoint { 
        double x; 
        double y; 
    }  _changePasswordContentOffset;
    UIBarButtonItem * _changeStyleBarButton;
    UIBarButtonItem * _changeStyleButton;
    UIBarButtonItem * _changeStyleCenterButton;
    UIBarButtonItem * _closeAuxiliaryWindowBarButton;
    UIBarButtonItem * _composeNoteBarButton;
    UIBarButtonItem * _composeNoteNavBarButton;
    NSUUID * _createdGalleryAttachmentUUID;
    UITouch * _currentStrokeStartTouch;
    long long  _currentWritingDirection;
    NSDate * _dateOfLastStrokeOrNewDrawing;
    <ICNoteEditorDelegate> * _delegate;
    UIBarButtonItem * _deleteBarButton;
    UIBarButtonItem * _deleteNavBarButton;
    bool  _didDrawWithPencilWithoutPalette;
    bool  _didEndEditingForAddingImageAttachment;
    bool  _doNotAdvanceInsertionPointAfterInsertingAttachment;
    UIBarButtonItem * _doneNavBarButton;
    NSArray * _extraItemsBeforeCustomCalloutOptions;
    UIBarButtonItem * _flexibleSpaceBarItem;
    UIBarButtonItem * _gelatoCollaborationBarButtonItem;
    ICGelatoCollaborationController * _gelatoCollaborationController;
    ICSelectorDelayer * _handwritingDebugSelectorDelayer;
    ICHandwritingDebugWindow * _handwritingDebugWindow;
    bool  _hasKeyboardBeenVisibleBefore;
    ICHashtagController * _hashtagController;
    ICManagedObjectContextChangeController * _hashtagsChangeController;
    NSString * _hostBundleIdentifier;
    UIBarButtonItem * _iCloudShareOffNavBarButton;
    UIBarButtonItem * _iCloudShareOnFolderNavBarButton;
    UIBarButtonItem * _iCloudShareOnNoteNavBarButton;
    ICAttachmentPresenter * _iPhoneSystemPaperAttachmentPresenter;
    UIBarButtonItem * _iPhoneSystemPaperCancelBarButton;
    bool  _iPhoneSystemPaperDidSaveOrCancel;
    UIBarButtonItem * _iPhoneSystemPaperSaveBarButton;
    UIBarButtonItem * _icaxAddAttachmentBarItem;
    ICAudioBarViewController * _icaxAudioBarViewController;
    UIBarButtonItem * _icaxCameraBarButton;
    UIBarButtonItem * _icaxCameraBarButtonCompact;
    UIBarButtonItem * _icaxDrawBarButton;
    UIBarButtonItem * _icaxDrawBarButtonCompact;
    UIBarButtonItem * _icaxRecordAudioBarButton;
    UIBarButtonItem * _icaxRecordAudioBarButtonCompact;
    UIBarButtonItem * _icaxSelectStyleBarItem;
    UIBarButtonItem * _icaxToggleTodoBarItem;
    NSArray * _indentKeyCommands;
    NSArray * _indentRTLKeyCommands;
    ICInkPaletteController * _inkPaletteController;
    unsigned long long  _inkPickerState;
    UIBarButtonItem * _inlineSketchBarButton;
    bool  _inlineSketchBarButtonHasSelectedImage;
    ICSelectorDelayer * _inlineSketchVisualIndicatorFadeOutSelectorDelayer;
    double  _inputAccessoryViewHeight;
    UIBarButtonItemGroup * _inputAssistantLeadingGroup;
    UIBarButtonItemGroup * _inputAssistantTrailingGroup;
    UIBarButtonItem * _insertBarButton;
    UIBarButtonItem * _insertToolbarItem;
    ICInvitation * _invitation;
    ICInvitationViewController * _invitationViewController;
    bool  _isAddingImageAttachment;
    bool  _isConvertToTag;
    bool  _isDrawingStroke;
    bool  _isDrawingStrokeWithPencil;
    bool  _isEditingNewNote;
    bool  _isLoadingStyleSelectorInputView;
    bool  _isPerformingDeleteAnimation;
    bool  _isPreviewingAttachmentFromNote;
    bool  _isSelecting;
    bool  _isSettingEditing;
    bool  _isSettingSelection;
    bool  _isShowingUnseenShareSummaryIndicator;
    NSDate * _keyboardAnimateInFinishTime;
    NSArray * _keyboardButtonItems;
    bool  _keyboardCameraIsAvailable;
    NSDate * _keyboardDidShowAnimationDate;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _lastSelectedRange;
    UIBarButtonItem * _leadingBarItem;
    UIAlertController * _limitExceededAlertController;
    bool  _linksBarNeedsAnimationWhileEditorIsVisible;
    ICPasswordEntryViewController * _lockIconCoverViewController;
    UIBarButtonItem * _lockNavBarButton;
    ICMentionsController * _mentionsController;
    ICNoteMergeabilityController * _mergeabilityController;
    UIBarButtonItem * _moveBarButton;
    UIBarButtonItem * _moveNavBarButton;
    bool  _needsToPerformInitialPaperAnimations;
    ICNote * _note;
    ICManagedObjectContextChangeController * _noteAndFolderChangeController;
    ICShareNoteExporter * _noteExporter;
    NSDate * _noteLastModificationDate;
    ICSelectorDelayer * _noteOrFolderChangedCallbackSelectorDelayer;
    NSUserActivity * _noteUserActivity;
    ICNoteUserActivityState * _noteUserActivityState;
    UIBarButtonItem * _openInkPickerToolbarButton;
    TTMergeableStringSelection * _originalEndOfNote;
    ICInkToolPickerResponder * _paletteResponder;
    bool  _paperLinkBarShowing;
    NSLayoutConstraint * _paperLinkBarTopConstraint;
    ICSystemPaperLinkBarViewController * _paperLinkBarViewController;
    long long  _parentType;
    ICPasswordEntryViewController * _passwordEntryViewController;
    ICNote * _previousNote;
    bool  _previouslyHadMarkedText;
    UIBarButtonItem * _quickNoteAllNotesBarButton;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _rangeToScrollToVisible;
    UIBarButtonItem * _redoBarButton;
    UIButton * _redoButton;
    UIBarButtonItem * _redoNavBarButton;
    UIView * _rulerHostingView;
    NSMutableDictionary * _savedScrollStates;
    NSRegularExpression * _searchRegex;
    NSAttributedString * _searchableStringToScrollToVisible;
    UIBarButtonItem * _selectStyleBarItem;
    ICInlineCanvasTextAttachment * _selectedCanvasAttachment;
    UITextRange * _selectedTextRangeToRestoreAfterBarSourcedPopoverPresentation;
    UIBarButtonItem * _shareNavBarButtonItem;
    bool  _shouldAllowAttributionSidebar;
    bool  _shouldBeginEditingAfterNoteUnlock;
    bool  _shouldClearBackgroundColorAfterPreview;
    bool  _shouldClearCornerRadiusAfterPreview;
    bool  _shouldFireNoteViewEventOnViewDisappear;
    bool  _shouldInputAccessoryViewButtonsBeVisible;
    bool  _shouldOverscrollScrollState;
    bool  _shouldRemoveEmptyNoteWhenViewDisappeared;
    bool  _shouldResetTextViewContentOffsetWhenAppearing;
    bool  _shouldTrackNoteViewEventAnalyticsFromSettingNote;
    bool  _showInkPickerAfterViewAppears;
    UIBarButtonItem * _showInkPickerBarItem;
    UIBarButtonItem * _showInkPickerButton;
    bool  _showInsertUIAfterViewAppears;
    ICSelectorDelayer * _showOrHideSearchPatternHighlightsDelayer;
    bool  _showingChecklistItems;
    bool  _showingIndentationItems;
    ICSidecarInsertMenu * _sidecarInsertMenu;
    bool  _splitViewExpandingOrCollapsing;
    bool  _startEditingAfterViewAppears;
    ICStyleSelectorViewController * _styleSelectorController;
    UIView * _styleSelectorDummyInputView;
    bool  _styleSelectorInputViewPresenting;
    bool  _suspendBarButtonUpdates;
    bool  _suspendSelectedRangeUpdates;
    bool  _suspendTapGestureRecognizer;
    NSArray * _swipeGestureRecognizers;
    bool  _tableButtonsShowMore;
    UIBarButtonItem * _tableToolbarItem;
    ICNoteEditorTextFindingController * _textFindingController;
    ICTextViewController * _textViewController;
    ICNoteEditorInputAccessoryView * _textViewInputAccessoryView;
    double  _textViewMinimumBottomInset;
    double  _textViewScrollIndicatorBottomInsetOverride;
    double  _textViewScrollIndicatorBottomInsetOverrideToRestore;
    TPKContent * _tipContent;
    TPKContentController * _tipContentController;
    bool  _tipContentControllerDelegateEnabled;
    TPKContentView * _tipContentView;
    TPKContentPopoverViewController * _tipContentViewController;
    UIBarButtonItem * _toggleTodoBarItem;
    UIBarButtonItem * _toggleTodoStyleButton;
    UIBarButtonItem * _toggleTodoStyleCenterButton;
    bool  _togglingLock;
    UIToolbar * _toolbar;
    unsigned long long  _toolbarState;
    UIBarButtonItem * _trailingBarItem;
    UIBarButtonItem * _undoBarButton;
    UIButton * _undoButton;
    UIBarButtonItem * _undoNavBarButton;
    UIBarButtonItem * _unlockNavBarButton;
    ICUnsupportedNoteView * _unsupportedNoteView;
    bool  _updateContentSizeCategoryWhenVisible;
    ICSelectorDelayer * _updateNoteUserActivityStateDelayer;
    NSObject<OS_dispatch_queue> * _userActivityUpdateQueue;
    bool  _userWantsToSeeDateLabel;
    ICViewControllerManager * _viewControllerManager;
    ICVisualAssetImportController * _visualAssetImportController;
    bool  _wasEditingBeforeDrawing;
    bool  _wasWindowlessDuringTransitionToSize;
}

@property (nonatomic, retain) UIBarButtonItem *actionBarButton;
@property (nonatomic, retain) ICActivityStreamDockView *activityStreamToolbar;
@property (nonatomic, retain) NSLayoutConstraint *activityStreamToolbarBottomConstraint;
@property (nonatomic) bool addDocumentScanAfterViewAppears;
@property (nonatomic, retain) UIBarButtonItem *addImageAttachmentButton;
@property (nonatomic, retain) UIBarButtonItem *addImageAttachmentCenterButton;
@property (nonatomic, retain) UIBarButtonItem *addTableButton;
@property (nonatomic, retain) UIBarButtonItem *addTableCenterButton;
@property (nonatomic) bool addToDoListAfterViewAppears;
@property (nonatomic, retain) UIBarButtonItem *addTodoBarButton;
@property (nonatomic) bool animateRangeToScrollToVisible;
@property (nonatomic, retain) ICSelectorDelayer *applyAccessibilityInfoDelayer;
@property (nonatomic, retain) ICTextViewScrollState *archivedScrollStateToApply;
@property (nonatomic, retain) ICAttachmentInsertionController *attachmentInsertionController;
@property (nonatomic, readonly) ICAttributionSidebarController *attributionSidebarController;
@property (nonatomic, retain) ICAudioBarViewController *audioBarViewController;
@property (nonatomic, retain) ICAuthorHighlightsController *authorHighlightsController;
@property (nonatomic, retain) ICAuthorHighlightsUpdater *authorHighlightsUpdater;
@property (nonatomic) UIResponder *auxiliaryResponder;
@property (nonatomic) <ICAuxiliaryStyling> *auxiliaryStylingController;
@property (nonatomic, readonly) NotesBackgroundView *backgroundView;
@property (nonatomic, readonly) bool canFindInNote;
@property (nonatomic) bool canShowLinkBar;
@property (nonatomic, readonly) bool canShowOverflowActionMenu;
@property (nonatomic) struct CGPoint { double x1; double x2; } changePasswordContentOffset;
@property (nonatomic, retain) UIBarButtonItem *changeStyleBarButton;
@property (nonatomic, retain) UIBarButtonItem *changeStyleButton;
@property (nonatomic, retain) UIBarButtonItem *changeStyleCenterButton;
@property (nonatomic, retain) UIBarButtonItem *closeAuxiliaryWindowBarButton;
@property (nonatomic, retain) UIBarButtonItem *composeNoteBarButton;
@property (nonatomic, retain) UIBarButtonItem *composeNoteNavBarButton;
@property (nonatomic, retain) NSUUID *createdGalleryAttachmentUUID;
@property (nonatomic, readonly) ICTextViewScrollState *currentScrollState;
@property (nonatomic, readonly) bool currentSelectionContainsListOrFixedWidth;
@property (nonatomic, retain) UITouch *currentStrokeStartTouch;
@property (nonatomic) long long currentWritingDirection;
@property (nonatomic, retain) NSDate *dateOfLastStrokeOrNewDrawing;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <ICNoteEditorDelegate> *delegate;
@property (nonatomic, retain) UIBarButtonItem *deleteBarButton;
@property (nonatomic, retain) UIBarButtonItem *deleteNavBarButton;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didDrawWithPencilWithoutPalette;
@property (nonatomic) bool didEndEditingForAddingImageAttachment;
@property (nonatomic) bool doNotAdvanceInsertionPointAfterInsertingAttachment;
@property (nonatomic, retain) UIBarButtonItem *doneNavBarButton;
@property (getter=isEditingOnSecureScreen, nonatomic, readonly) bool editingOnSecureScreen;
@property (getter=isEditingOnSystemPaper, nonatomic, readonly) bool editingOnSystemPaper;
@property (nonatomic, retain) NSArray *extraItemsBeforeCustomCalloutOptions;
@property (nonatomic, retain) UIBarButtonItem *flexibleSpaceBarItem;
@property (nonatomic, retain) UIBarButtonItem *gelatoCollaborationBarButtonItem;
@property (nonatomic, retain) ICGelatoCollaborationController *gelatoCollaborationController;
@property (nonatomic, retain) ICSelectorDelayer *handwritingDebugSelectorDelayer;
@property (nonatomic, retain) ICHandwritingDebugWindow *handwritingDebugWindow;
@property (nonatomic) bool hasKeyboardBeenVisibleBefore;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) ICHashtagController *hashtagController;
@property (nonatomic, retain) ICManagedObjectContextChangeController *hashtagsChangeController;
@property (nonatomic, copy) NSString *hostBundleIdentifier;
@property (nonatomic, retain) UIBarButtonItem *iCloudShareOffNavBarButton;
@property (nonatomic, retain) UIBarButtonItem *iCloudShareOnFolderNavBarButton;
@property (nonatomic, retain) UIBarButtonItem *iCloudShareOnNoteNavBarButton;
@property (nonatomic, retain) ICAttachmentPresenter *iPhoneSystemPaperAttachmentPresenter;
@property (nonatomic, retain) UIBarButtonItem *iPhoneSystemPaperCancelBarButton;
@property (nonatomic) bool iPhoneSystemPaperDidSaveOrCancel;
@property (nonatomic, retain) UIBarButtonItem *iPhoneSystemPaperSaveBarButton;
@property (nonatomic, readonly) UIBarButtonItem *icaxAddAttachmentBarItem;
@property (nonatomic, readonly) ICAudioBarViewController *icaxAudioBarViewController;
@property (nonatomic, readonly) UIBarButtonItem *icaxCameraBarButton;
@property (nonatomic, readonly) UIBarButtonItem *icaxCameraBarButtonCompact;
@property (nonatomic, readonly) UIBarButtonItem *icaxDrawBarButton;
@property (nonatomic, readonly) UIBarButtonItem *icaxDrawBarButtonCompact;
@property (nonatomic, readonly) UIBarButtonItem *icaxRecordAudioBarButton;
@property (nonatomic, readonly) UIBarButtonItem *icaxRecordAudioBarButtonCompact;
@property (nonatomic, readonly) UIBarButtonItem *icaxSelectStyleBarItem;
@property (nonatomic, readonly) ICTextController *icaxTextController;
@property (nonatomic, readonly) UIBarButtonItem *icaxToggleTodoBarItem;
@property (nonatomic, retain) NSArray *indentKeyCommands;
@property (nonatomic, retain) NSArray *indentRTLKeyCommands;
@property (nonatomic, retain) ICInkPaletteController *inkPaletteController;
@property (nonatomic) unsigned long long inkPickerState;
@property (nonatomic, retain) UIBarButtonItem *inlineSketchBarButton;
@property (nonatomic) bool inlineSketchBarButtonHasSelectedImage;
@property (nonatomic, retain) ICSelectorDelayer *inlineSketchVisualIndicatorFadeOutSelectorDelayer;
@property (nonatomic) double inputAccessoryViewHeight;
@property (nonatomic, retain) UIBarButtonItemGroup *inputAssistantLeadingGroup;
@property (nonatomic, retain) UIBarButtonItemGroup *inputAssistantTrailingGroup;
@property (nonatomic, retain) UIBarButtonItem *insertBarButton;
@property (nonatomic, retain) UIBarButtonItem *insertToolbarItem;
@property (nonatomic, retain) ICInvitation *invitation;
@property (nonatomic, retain) ICInvitationViewController *invitationViewController;
@property (nonatomic) bool isAddingImageAttachment;
@property (nonatomic) bool isConvertToTag;
@property (nonatomic) bool isDrawingStroke;
@property (nonatomic) bool isDrawingStrokeWithPencil;
@property (nonatomic) bool isEditingNewNote;
@property (nonatomic, readonly) bool isInkPickerShowing;
@property (nonatomic) bool isLoadingStyleSelectorInputView;
@property (nonatomic) bool isPerformingDeleteAnimation;
@property (nonatomic) bool isPreviewingAttachmentFromNote;
@property (nonatomic) bool isSelecting;
@property (nonatomic) bool isSettingEditing;
@property (nonatomic) bool isSettingSelection;
@property (nonatomic) bool isShowingUnseenShareSummaryIndicator;
@property (nonatomic, copy) NSDate *keyboardAnimateInFinishTime;
@property (nonatomic, retain) NSArray *keyboardButtonItems;
@property (nonatomic, readonly) bool keyboardCameraIsAvailable;
@property (nonatomic, retain) NSDate *keyboardDidShowAnimationDate;
@property (nonatomic, readonly) PKTool *lastSavedInkingTool;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } lastSelectedRange;
@property (nonatomic, retain) UIBarButtonItem *leadingBarItem;
@property (nonatomic, retain) UIAlertController *limitExceededAlertController;
@property (nonatomic) bool linksBarNeedsAnimationWhileEditorIsVisible;
@property (nonatomic, retain) ICPasswordEntryViewController *lockIconCoverViewController;
@property (nonatomic, retain) UIBarButtonItem *lockNavBarButton;
@property (nonatomic, retain) ICMentionsController *mentionsController;
@property (nonatomic, retain) ICNoteMergeabilityController *mergeabilityController;
@property (nonatomic, retain) UIBarButtonItem *moveBarButton;
@property (nonatomic, retain) UIBarButtonItem *moveNavBarButton;
@property (nonatomic) bool needsToPerformInitialPaperAnimations;
@property (nonatomic, retain) ICNote *note;
@property (nonatomic, retain) ICManagedObjectContextChangeController *noteAndFolderChangeController;
@property (nonatomic, readonly) ICNoteContext *noteContext;
@property (nonatomic, retain) ICShareNoteExporter *noteExporter;
@property (nonatomic, copy) NSDate *noteLastModificationDate;
@property (nonatomic, retain) ICSelectorDelayer *noteOrFolderChangedCallbackSelectorDelayer;
@property (retain) NSUserActivity *noteUserActivity;
@property (retain) ICNoteUserActivityState *noteUserActivityState;
@property (nonatomic, retain) UIBarButtonItem *openInkPickerToolbarButton;
@property (nonatomic, retain) TTMergeableStringSelection *originalEndOfNote;
@property (nonatomic, retain) ICInkToolPickerResponder *paletteResponder;
@property (getter=isPaperLinkBarShowing, nonatomic) bool paperLinkBarShowing;
@property (nonatomic, retain) NSLayoutConstraint *paperLinkBarTopConstraint;
@property (nonatomic, retain) ICSystemPaperLinkBarViewController *paperLinkBarViewController;
@property (nonatomic) long long parentType;
@property (nonatomic, retain) ICPasswordEntryViewController *passwordEntryViewController;
@property (nonatomic) ICNote *previousNote;
@property (nonatomic) bool previouslyHadMarkedText;
@property (nonatomic, retain) UIBarButtonItem *quickNoteAllNotesBarButton;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeToScrollToVisible;
@property (nonatomic, retain) UIBarButtonItem *redoBarButton;
@property (nonatomic, retain) UIButton *redoButton;
@property (nonatomic, retain) UIBarButtonItem *redoNavBarButton;
@property (nonatomic, readonly) UIViewController *rootViewController;
@property (nonatomic, retain) UIView *rulerHostingView;
@property (nonatomic, retain) NSMutableDictionary *savedScrollStates;
@property (nonatomic, retain) NSRegularExpression *searchRegex;
@property (nonatomic, retain) NSAttributedString *searchableStringToScrollToVisible;
@property (nonatomic, retain) UIBarButtonItem *selectStyleBarItem;
@property (nonatomic) ICInlineCanvasTextAttachment *selectedCanvasAttachment;
@property (nonatomic, retain) UITextRange *selectedTextRangeToRestoreAfterBarSourcedPopoverPresentation;
@property (nonatomic, retain) UIBarButtonItem *shareNavBarButtonItem;
@property (nonatomic) bool shouldAllowAttributionSidebar;
@property (nonatomic) bool shouldBeginEditingAfterNoteUnlock;
@property (nonatomic) bool shouldClearBackgroundColorAfterPreview;
@property (nonatomic) bool shouldClearCornerRadiusAfterPreview;
@property (nonatomic) bool shouldFireNoteViewEventOnViewDisappear;
@property (nonatomic, readonly) bool shouldForceLightContent;
@property (nonatomic) bool shouldInputAccessoryViewButtonsBeVisible;
@property (nonatomic) bool shouldOverscrollScrollState;
@property (nonatomic) bool shouldRemoveEmptyNoteWhenViewDisappeared;
@property (nonatomic) bool shouldResetTextViewContentOffsetWhenAppearing;
@property (nonatomic) bool shouldTrackNoteViewEventAnalyticsFromSettingNote;
@property (nonatomic) bool showInkPickerAfterViewAppears;
@property (nonatomic, retain) UIBarButtonItem *showInkPickerBarItem;
@property (nonatomic, retain) UIBarButtonItem *showInkPickerButton;
@property (nonatomic) bool showInsertUIAfterViewAppears;
@property (nonatomic, retain) ICSelectorDelayer *showOrHideSearchPatternHighlightsDelayer;
@property (getter=isShowingChecklistItems, nonatomic) bool showingChecklistItems;
@property (getter=isShowingIndentationItems, nonatomic) bool showingIndentationItems;
@property (nonatomic, retain) ICSidecarInsertMenu *sidecarInsertMenu;
@property (getter=isSplitViewExpandingOrCollapsing, nonatomic) bool splitViewExpandingOrCollapsing;
@property (nonatomic) bool startEditingAfterViewAppears;
@property (nonatomic, retain) ICStyleSelectorViewController *styleSelectorController;
@property (nonatomic, retain) UIView *styleSelectorDummyInputView;
@property (getter=isStyleSelectorInputViewPresenting, nonatomic) bool styleSelectorInputViewPresenting;
@property (nonatomic, readonly) bool styleSelectorInputViewShowing;
@property (readonly) Class superclass;
@property (nonatomic) bool suspendBarButtonUpdates;
@property (nonatomic) bool suspendSelectedRangeUpdates;
@property (nonatomic) bool suspendTapGestureRecognizer;
@property (nonatomic, retain) NSArray *swipeGestureRecognizers;
@property (nonatomic) bool tableButtonsShowMore;
@property (nonatomic, retain) UIBarButtonItem *tableToolbarItem;
@property (nonatomic, readonly) ICTextController *textController;
@property (nonatomic, readonly) ICNoteEditorTextFindingController *textFindingController;
@property (nonatomic, readonly) ICTextView *textView;
@property (nonatomic, readonly) double textViewBottomInsetThatWeWant;
@property (nonatomic, retain) ICTextViewController *textViewController;
@property (nonatomic, readonly) ICTextView *textViewIfLoaded;
@property (nonatomic, retain) ICNoteEditorInputAccessoryView *textViewInputAccessoryView;
@property (nonatomic) double textViewMinimumBottomInset;
@property (nonatomic) double textViewScrollIndicatorBottomInsetOverride;
@property (nonatomic) double textViewScrollIndicatorBottomInsetOverrideToRestore;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } textViewScrollIndicatorInsetsThatWeWant;
@property (nonatomic, readonly) double textViewTopInsetThatWeWant;
@property (nonatomic, readonly) NSUndoManager *textViewUndoManager;
@property (nonatomic, retain) TPKContent *tipContent;
@property (nonatomic, retain) TPKContentController *tipContentController;
@property (nonatomic) bool tipContentControllerDelegateEnabled;
@property (nonatomic, retain) TPKContentView *tipContentView;
@property (nonatomic, retain) TPKContentPopoverViewController *tipContentViewController;
@property (nonatomic, retain) UIBarButtonItem *toggleTodoBarItem;
@property (nonatomic, retain) UIBarButtonItem *toggleTodoStyleButton;
@property (nonatomic, retain) UIBarButtonItem *toggleTodoStyleCenterButton;
@property (getter=isTogglingLock, nonatomic) bool togglingLock;
@property (nonatomic, retain) UIToolbar *toolbar;
@property (nonatomic) unsigned long long toolbarState;
@property (nonatomic, retain) UIBarButtonItem *trailingBarItem;
@property (nonatomic, retain) UIBarButtonItem *undoBarButton;
@property (nonatomic, retain) UIButton *undoButton;
@property (nonatomic, retain) UIBarButtonItem *undoNavBarButton;
@property (nonatomic, retain) UIBarButtonItem *unlockNavBarButton;
@property (nonatomic, retain) ICUnsupportedNoteView *unsupportedNoteView;
@property (nonatomic) bool updateContentSizeCategoryWhenVisible;
@property (nonatomic, retain) ICSelectorDelayer *updateNoteUserActivityStateDelayer;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *userActivityUpdateQueue;
@property (nonatomic) bool userWantsToSeeDateLabel;
@property (nonatomic) ICViewControllerManager *viewControllerManager;
@property (nonatomic, retain) ICVisualAssetImportController *visualAssetImportController;
@property (nonatomic, readonly) bool wantsToRemainFirstResponder;
@property (nonatomic) bool wasEditingBeforeDrawing;
@property (nonatomic) bool wasWindowlessDuringTransitionToSize;

+ (void)dismissChildPresentedViewControllersInPostOrder:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
+ (id)formatKeyboardShortcutMenu;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingIsInGridView;
+ (id)keyPathsForValuesAffectingTextView;

- (void).cxx_destruct;
- (void)_accessibilityLoadAccessibilityInformation;
- (void)_boundingPathMayHaveChangedForView:(id)arg1 relativeToBoundsOriginOnly:(bool)arg2;
- (bool)_canShowWhileLocked;
- (void)_handleKeyUIEvent:(id)arg1;
- (void)_iCloudShareButtonPressed:(id)arg1;
- (bool)_scribbleInteraction:(id)arg1 shouldBeginAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)_scribbleInteraction:(id)arg1 willBeginWritingInElement:(id)arg2;
- (id)actionBarButton;
- (id)activityStreamToolbar;
- (id)activityStreamToolbarBottomConstraint;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;
- (bool)addDocumentScanAfterViewAppears;
- (id)addImageAttachmentButton;
- (id)addImageAttachmentCenterButton;
- (id)addImageSubmenuWithSender:(id)arg1;
- (void)addKVOObserversForNote:(id)arg1;
- (id)addNewNote;
- (void)addNewNoteIfNeeded;
- (id)addNewNoteWithEvent:(id)arg1;
- (void)addNote:(id)arg1;
- (void)addNote:(id)arg1 event:(id)arg2;
- (id)addQuickNoteWithPencil:(bool)arg1;
- (void)addSystemPaperAttachment;
- (void)addSystemPaperImageData:(id)arg1 updateFirstResponder:(bool)arg2;
- (void)addSystemPaperImageData:(id)arg1 updateFirstResponder:(bool)arg2 forceAddToPaper:(bool)arg3;
- (bool)addSystemPaperLink:(id)arg1 updateFirstResponder:(bool)arg2;
- (void)addTable:(id)arg1;
- (id)addTableButton;
- (id)addTableCenterButton;
- (bool)addToDoListAfterViewAppears;
- (void)addToTags:(id)arg1;
- (id)addTodoBarButton;
- (void)addTodoListAtEndOfNote;
- (bool)allowsAccessibilityChildReparenting;
- (bool)allowsNewTextLength:(unsigned long long)arg1;
- (bool)animateRangeToScrollToVisible;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applyAccessibilityInfo;
- (id)applyAccessibilityInfoDelayer;
- (void)applyScrollStateFromArchive:(id)arg1;
- (void)applyScrollStateIfAvailable;
- (id)archivedScrollStateToApply;
- (void)attachmentBrickDidChangeSize;
- (id)attachmentInsertionController;
- (void)attachmentInsertionController:(id)arg1 didAddAttachment:(id)arg2 atRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (void)attachmentInsertionController:(id)arg1 didAddInlineAttachment:(id)arg2 atRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 textStorage:(id)arg4;
- (void)attachmentInsertionController:(id)arg1 willAddAttachment:(id)arg2 atRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (id)attachmentPresenter:(id)arg1 transitionViewForAttachment:(id)arg2;
- (bool)attachmentPresenter:(id)arg1 useFullPDFTransitionForAttachment:(id)arg2;
- (void)attachmentPresenterDidDismiss:(id)arg1;
- (void)attachmentsExceeded:(id)arg1;
- (id)attributedStringFromHTML:(id)arg1;
- (id)attributionSidebarController;
- (long long)attributionSidebarVisibility;
- (id)audioBarViewController;
- (void)audioBarViewControllerDone:(id)arg1;
- (void)audioPlaybackPlayNotification:(id)arg1;
- (void)authenticationAuthenticateBiometricsAttemptDidFail:(id)arg1;
- (id)authorHighlightsController;
- (id)authorHighlightsUpdater;
- (id)auxiliaryResponder;
- (id)auxiliaryStylingController;
- (id)backgroundView;
- (id)barButtonItemForTipCustomizationID:(long long)arg1;
- (id)barButtonItemWithImage:(id)arg1 selector:(SEL)arg2;
- (bool)becomeFirstResponder;
- (void)blockAccessibilityScreenChangedNotificationsIfNecessaryForDuration:(double)arg1;
- (bool)canAddToTags;
- (bool)canBecomeFirstResponder;
- (bool)canConvertToTag;
- (bool)canConvertToText;
- (bool)canFindInNote;
- (bool)canIndentByAmount:(long long)arg1;
- (bool)canIndentLeft;
- (bool)canIndentRight;
- (bool)canMoveSelectedListItemDown;
- (bool)canMoveSelectedListItemUp;
- (bool)canOpenLink;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (bool)canShowLinkBar;
- (bool)canShowOverflowActionMenu;
- (void)cancelFromSystemPaperCard:(id)arg1;
- (struct CGPoint { double x1; double x2; })changePasswordContentOffset;
- (void)changeStyle:(id)arg1;
- (id)changeStyleBarButton;
- (id)changeStyleButton;
- (id)changeStyleCenterButton;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })charRangeForSwipeTextRange:(id)arg1;
- (void)checkAll:(id)arg1;
- (void)cleanupAfterAddImageAttachmentOperation;
- (void)cleanupAfterBarSourcedPopoverPresentation;
- (void)cleanupAfterFingerDrawing;
- (void)clearTextViewSelectionForPencilKit;
- (void)clearTipContent:(id)arg1 animated:(bool)arg2;
- (id)closeAuxiliaryWindowBarButton;
- (id)composeNoteBarButton;
- (id)composeNoteNavBarButton;
- (double)consumedBottomAreaForResizer:(id)arg1;
- (id)contentController:(id)arg1 clientContextMapForKeys:(id)arg2;
- (void)contentController:(id)arg1 contentDidBecomeAvailable:(id)arg2 animated:(bool)arg3;
- (id)contentController:(id)arg1 contentView:(id)arg2 iconForCustomizationID:(long long)arg3;
- (void)contentController:(id)arg1 didFinishWithContent:(id)arg2 animated:(bool)arg3;
- (void)contentController:(id)arg1 eventOccurred:(long long)arg2 content:(id)arg3 context:(id)arg4;
- (id)contentScrollView;
- (void)contentSizeCategoryDidChange;
- (void)convertToTag:(id)arg1;
- (void)convertToText:(id)arg1;
- (void)createAndPresentCloudSharingControllerBySender:(id)arg1;
- (void)createInkPickerControllerIfNecessary;
- (id)createNewNote;
- (void)createSystemPaperLinkBarIfNecessary;
- (void)createTodoListItem:(id)arg1;
- (void)createUndoRedoBarButtonsIfNecessary;
- (id)createdGalleryAttachmentUUID;
- (unsigned long long)currentBIUSForStyleSelector;
- (id)currentScrollState;
- (bool)currentSelectionContainsListOrFixedWidth;
- (id)currentStrokeStartTouch;
- (id)currentStylesForStyleSelectorIgnoreTypingAttributes:(bool)arg1;
- (id)currentValidToolForNewDrawingOrNote;
- (long long)currentWritingDirection;
- (id)dateOfLastStrokeOrNewDrawing;
- (void)dealloc;
- (void)decreaseIndentation:(id)arg1;
- (id)defaultInkColor;
- (id)delegate;
- (id)deleteBarButton;
- (void)deleteCurrentNote:(id)arg1;
- (id)deleteNavBarButton;
- (void)didAddAttachmentForNoteNotification:(id)arg1;
- (void)didBeginFindInteraction;
- (bool)didDrawWithPencilWithoutPalette;
- (bool)didEndEditingForAddingImageAttachment;
- (void)didEndEditingNote;
- (void)didInvokeAnalyticsCalloutBarButtonActionOfType:(long long)arg1;
- (void)didInvokeAnalyticsChecklistActionChecked:(bool)arg1;
- (void)disableTipContentControllerDelegateAnimated:(bool)arg1;
- (bool)doNotAdvanceInsertionPointAfterInsertingAttachment;
- (bool)documentCameraController:(id)arg1 canAddImages:(unsigned long long)arg2;
- (void)documentCameraController:(id)arg1 didFinishWithDocInfoCollection:(id)arg2 imageCache:(id)arg3 warnUser:(bool)arg4;
- (void)documentCameraController:(id)arg1 didFinishWithDocInfoCollection:(id)arg2 imageCache:(id)arg3 warnUser:(bool)arg4 closeViewController:(bool)arg5;
- (id)documentCameraControllerCreateDataCryptorIfNecessary;
- (void)documentCameraControllerDidCancel:(id)arg1;
- (void)documentCameraControllerDidCancelWithPresentingViewController:(id)arg1;
- (void)documentCameraControllerDidRetake:(id)arg1 pageCount:(unsigned long long)arg2;
- (void)documentCameraPresentingViewController:(id)arg1 didFinishWithInfoCollection:(id)arg2 imageCache:(id)arg3 warnUser:(bool)arg4 closeViewController:(bool)arg5;
- (void)donateEditingIntentIfNecessary;
- (void)doneEditing;
- (void)doneEditing:(id)arg1;
- (id)doneNavBarButton;
- (id)drawingsForHandwritingDebugWindow:(id)arg1;
- (void)enableTipContentControllerDelegate;
- (void)ensurePaperPreviewsExistIfNecessary;
- (void)ensureValidInkForNewDrawingOrNote;
- (id)extraItemsBeforeCustomCalloutOptions;
- (void)fadeOutVisualIndicator;
- (void)fetchAll;
- (id)flexibleSpaceBarButtonItem;
- (id)flexibleSpaceBarItem;
- (void)forceLightContentDidChange:(id)arg1;
- (id)gelatoCollaborationBarButtonItem;
- (id)gelatoCollaborationController;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (id)getTableControllerFor:(id)arg1;
- (void)gridViewBack:(id)arg1;
- (void)handleLeftOrRightSwipe:(id)arg1;
- (void)handleMenuBarButtonTap:(id)arg1;
- (bool)handleTapGestureForAttribution:(id)arg1;
- (id)handwritingDebugSelectorDelayer;
- (id)handwritingDebugWindow;
- (void)handwritingDebugWindowShouldClose:(id)arg1;
- (bool)hasInlineTip;
- (bool)hasKeyboardBeenVisibleBefore;
- (id)hashtagController;
- (void)hashtagInsertedInNote:(id)arg1 tokenContentIdentifier:(id)arg2 viaAutoComplete:(bool)arg3;
- (void)hashtagViewController:(id)arg1 insertFutureHashtagWithText:(id)arg2;
- (void)hashtagViewController:(id)arg1 insertHashtagWithText:(id)arg2;
- (void)hashtagViewController:(id)arg1 insertUnknownInlineAttachmentWithText:(id)arg2;
- (id)hashtagsChangeController;
- (void)hideActivityStreamToolbarAnimated:(bool)arg1;
- (void)hideAndDismissPresentedViewController;
- (void)hideInkPicker;
- (void)hideTipAnimated:(bool)arg1;
- (void)highlightSearchMatchesForRegex:(id)arg1;
- (id)hostBundleIdentifier;
- (void)iCloudShareButtonPressed:(id)arg1;
- (id)iCloudShareNavBarButton;
- (id)iCloudShareOffNavBarButton;
- (id)iCloudShareOnFolderNavBarButton;
- (id)iCloudShareOnNoteNavBarButton;
- (id)iPhoneSystemPaperAttachmentPresenter;
- (id)iPhoneSystemPaperCancelBarButton;
- (bool)iPhoneSystemPaperDidSaveOrCancel;
- (id)iPhoneSystemPaperSaveBarButton;
- (id)icSplitViewController;
- (long long)icasPalettePositionFromPKPalettePosition:(long long)arg1;
- (id)icaxAddAttachmentBarItem;
- (id)icaxAudioBarViewController;
- (id)icaxCameraBarButton;
- (id)icaxCameraBarButtonCompact;
- (id)icaxDrawBarButton;
- (id)icaxDrawBarButtonCompact;
- (id)icaxRecordAudioBarButton;
- (id)icaxRecordAudioBarButtonCompact;
- (id)icaxSelectStyleBarItem;
- (id)icaxTextController;
- (id)icaxToggleTodoBarItem;
- (void)icaxToggleTodoStyle;
- (void)increaseIndentation:(id)arg1;
- (id)indentKeyCommands;
- (void)indentLeft:(id)arg1;
- (id)indentRTLKeyCommands;
- (void)indentRight:(id)arg1;
- (void)indentSelectionIfPossibleByAmount:(long long)arg1;
- (id)initWithParentType:(long long)arg1;
- (void)inkPalette:(id)arg1 didChangeColor:(id)arg2;
- (void)inkPalette:(id)arg1 didChangePalettePositionStart:(long long)arg2 end:(long long)arg3;
- (void)inkPalette:(id)arg1 didHideAnimated:(bool)arg2;
- (void)inkPalette:(id)arg1 didPickTool:(id)arg2;
- (void)inkPalette:(id)arg1 didShowAnimated:(bool)arg2;
- (bool)inkPalette:(id)arg1 shouldResignFirstResponder:(id)arg2;
- (void)inkPalette:(id)arg1 willHideAnimated:(bool)arg2;
- (void)inkPalette:(id)arg1 willShowAnimated:(bool)arg2;
- (id)inkPaletteButtonView:(id)arg1;
- (id)inkPaletteController;
- (void)inkPaletteDidToggleRuler:(id)arg1 isRulerActive:(bool)arg2;
- (id)inkPaletteUndoManager:(id)arg1;
- (unsigned long long)inkPickerState;
- (void)inlineAttachmentDeleted:(id)arg1;
- (id)inlineDrawingAttachmentForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)inlineSketchBarButton;
- (bool)inlineSketchBarButtonHasSelectedImage;
- (id)inlineSketchBarButtonSelectedImage;
- (id)inlineSketchBarButtonUnselectedImage;
- (id)inlineSketchBarButtonVisualIndicator;
- (id)inlineSketchVisualIndicatorFadeOutSelectorDelayer;
- (void)inputAccessoryDisclosureStateDidChange:(id)arg1 tapped:(bool)arg2;
- (void)inputAccessoryDisclosureStateWillChange:(id)arg1;
- (double)inputAccessoryViewHeight;
- (id)inputAssistantLeadingGroup;
- (id)inputAssistantTrailingGroup;
- (id)insertBarButton;
- (void)insertSidecarItems:(id)arg1 service:(long long)arg2;
- (id)insertToolbarItem;
- (id)invitation;
- (id)invitationViewController;
- (bool)isAddingImageAttachment;
- (bool)isConvertToTag;
- (bool)isDocumentCameraAvailable;
- (bool)isDrawingStroke;
- (bool)isDrawingStrokeWithPencil;
- (bool)isEditingNewNote;
- (bool)isEditingOnSecureScreen;
- (bool)isEditingOnSystemPaper;
- (bool)isEditingOnSystemPaperOnPad;
- (bool)isEditingOnSystemPaperOnPhone;
- (bool)isInGridView;
- (bool)isInkPickerShowing;
- (bool)isKeyboardCameraAvailable;
- (bool)isLoadingStyleSelectorInputView;
- (bool)isNotePasswordProtectedAndLocked;
- (bool)isPaperLinkBarShowing;
- (bool)isPerformingDeleteAnimation;
- (bool)isPhotosLibraryAvailable;
- (bool)isPositionOnTodoItem:(struct CGPoint { double x1; double x2; })arg1;
- (bool)isPreviewingAttachmentFromNote;
- (bool)isSelecting;
- (bool)isSettingEditing;
- (bool)isSettingSelection;
- (bool)isShowingChecklistItems;
- (bool)isShowingIndentationItems;
- (bool)isShowingUnseenShareSummaryIndicator;
- (bool)isSplitViewExpandingOrCollapsing;
- (bool)isStyleSelectorInputViewPresenting;
- (bool)isSwipeOnTodoItem:(id)arg1;
- (bool)isTogglingLock;
- (id)keyboardAnimateInFinishTime;
- (id)keyboardButtonItems;
- (bool)keyboardCameraIsAvailable;
- (void)keyboardDidChangeFrame:(id)arg1;
- (void)keyboardDidHide:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (id)keyboardDidShowAnimationDate;
- (void)keyboardResizerAdjustInsetsWithKeyboardFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 scrollAboveHeight:(double)arg2 duration:(double)arg3;
- (bool)keyboardResizerAutoscrollAboveKeyboard;
- (void)keyboardWillShow:(id)arg1;
- (id)lastSavedInkingTool;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })lastSelectedRange;
- (id)leadingBarItem;
- (id)limitExceededAlertController;
- (id)linkForSelection;
- (bool)linksBarNeedsAnimationWhileEditorIsVisible;
- (void)loadNoteContentIntoView;
- (void)localeChanged:(id)arg1;
- (void)lockBarButtonPressed:(id)arg1;
- (id)lockIconCoverViewController;
- (id)lockNavBarButton;
- (void)lockNoteManagerDidToggleLock:(id)arg1;
- (void)lockNoteManagerWillToggleLock:(id)arg1;
- (id)managedObjectContextChangeController:(id)arg1 managedObjectIDsToUpdateForUpdatedManagedObjects:(id)arg2;
- (void)managedObjectContextChangeController:(id)arg1 performUpdatesForManagedObjectIDs:(id)arg2;
- (bool)managedObjectContextChangeControllerShouldUpdateImmediately:(id)arg1;
- (void)mentionInsertedInNote:(id)arg1 mentionID:(id)arg2 participantID:(id)arg3 viaAutoComplete:(bool)arg4;
- (id)mentionsController;
- (id)menuElementForSourceType:(long long)arg1 sender:(id)arg2;
- (void)mergeRelatedOperationsDidEnd:(id)arg1;
- (id)mergeabilityController;
- (void)migrationStateDidChange:(id)arg1;
- (id)moveBarButton;
- (void)moveCheckedToBottom:(id)arg1;
- (id)moveNavBarButton;
- (void)moveSelectedListItemDown:(id)arg1;
- (void)moveSelectedListItemUp:(id)arg1;
- (void)moveToFolderPressed:(id)arg1;
- (bool)needsToPerformInitialPaperAnimations;
- (id)nibBundle;
- (id)note;
- (id)noteAndFolderChangeController;
- (id)noteContext;
- (void)noteDecryptedStatusDidChange:(id)arg1;
- (id)noteExporter;
- (id)noteLastModificationDate;
- (void)noteOrFolderChangedCallback;
- (id)noteOrFolderChangedCallbackSelectorDelayer;
- (void)noteShowsAuthorHighlightsDidChange:(id)arg1;
- (id)noteUserActivity;
- (id)noteUserActivityState;
- (void)noteWillBeDeleted:(id)arg1;
- (void)notesContextRefreshNotification:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)openExperimentalHashtagUI:(id)arg1;
- (id)openInkPickerToolbarButton;
- (void)openLink:(id)arg1;
- (id)originalEndOfNote;
- (id)paletteResponder;
- (id)paperLinkBarTopConstraint;
- (id)paperLinkBarViewController;
- (long long)parentType;
- (void)passwordEntryAlertControllerAttemptDidFail:(id)arg1;
- (id)passwordEntryViewController;
- (void)performAddCollaboratorsActivity:(id)arg1;
- (void)performDeleteAnimation:(id)arg1;
- (void)performFindInNote:(id)arg1;
- (void)performReplaceInNote:(id)arg1;
- (long long)preferredStatusBarStyle;
- (void)prepareForBarSourcedPopoverPresentation;
- (void)prepareSelectionForAddingAttachment;
- (void)presentAttachment:(id)arg1;
- (void)presentationControllerDidDismiss:(id)arg1;
- (id)previousNote;
- (bool)previouslyHadMarkedText;
- (void)quickNoteAllNotes:(id)arg1;
- (id)quickNoteAllNotesBarButton;
- (id)radarTitleForHandwritingDebugWindow:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeToScrollToVisible;
- (void)rebuildInputAccessoryView;
- (void)recreateTextView;
- (bool)recreateTextViewIfNecessary;
- (void)recreateTextViewIfPasswordEntryScreenExistsButNoteIsUnlocked;
- (void)redoAction:(id)arg1;
- (id)redoBarButton;
- (id)redoButton;
- (id)redoNavBarButton;
- (void)refreshHandwritingDebugWindow;
- (void)rememberNoteContentForEditingIntent;
- (void)remoteDocumentCameraController:(id)arg1 didFailWithError:(id)arg2;
- (void)remoteDocumentCameraController:(id)arg1 didFinishWithInfoCollection:(id)arg2;
- (void)remoteDocumentCameraControllerDidCancel:(id)arg1;
- (void)removeChecked:(id)arg1;
- (void)removeCurrentScrollState;
- (void)removeInlineTipViewAnimated:(bool)arg1;
- (void)removeKVOObserversForNote:(id)arg1;
- (void)resetBarButtonsAnimated:(bool)arg1;
- (void)resetBarButtonsAnimated:(bool)arg1 accessoryViewOnly:(bool)arg2;
- (void)resetDateView;
- (void)resetTextViewContentOffset;
- (void)resetTextViewUndoManager;
- (bool)resignFirstResponder;
- (id)responderToMatch;
- (void)restoreTextViewScrollPosition:(double)arg1;
- (void)restoreTextViewVisibleRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 animated:(bool)arg2;
- (void)restoreVisualIndicatorImageAnimated:(bool)arg1;
- (id)rootViewController;
- (id)rulerHostingView;
- (void)runScrollPerformanceTest:(id)arg1 iterations:(int)arg2 offset:(int)arg3;
- (void)runTableHorizontalScrollPerformanceTest:(id)arg1 iterations:(int)arg2 offset:(int)arg3;
- (void)saveCurrentScrollState;
- (void)saveFromSystemPaperCard:(id)arg1;
- (void)saveNote;
- (void)saveToolAsCurrentTool:(id)arg1;
- (id)savedScrollStates;
- (id)scanDataDelegateWithIdentifier:(id)arg1;
- (void)sceneDidActivate:(id)arg1;
- (void)sceneWillDeactivate:(id)arg1;
- (void)scrollRangeToVisible:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 animated:(bool)arg2;
- (void)scrollRangeToVisible:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 animated:(bool)arg2 inSearchableString:(id)arg3 searchHighlightRegex:(id)arg4;
- (void)scrollRangeToVisibleWhenViewAppears:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 animated:(bool)arg2 inSearchableString:(id)arg3 searchHighlightRegex:(id)arg4;
- (id)scrollView;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (id)searchRegex;
- (id)searchableStringToScrollToVisible;
- (void)selectDrawingAttachmentIfNeeded:(id)arg1;
- (id)selectStyleBarItem;
- (id)selectedCanvasAttachment;
- (id)selectedTextRangeToRestoreAfterBarSourcedPopoverPresentation;
- (void)setActionBarButton:(id)arg1;
- (void)setActivityStreamToolbar:(id)arg1;
- (void)setActivityStreamToolbarBottomConstraint:(id)arg1;
- (void)setAddDocumentScanAfterViewAppears:(bool)arg1;
- (void)setAddImageAttachmentButton:(id)arg1;
- (void)setAddImageAttachmentCenterButton:(id)arg1;
- (void)setAddTableButton:(id)arg1;
- (void)setAddTableCenterButton:(id)arg1;
- (void)setAddToDoListAfterViewAppears:(bool)arg1;
- (void)setAddTodoBarButton:(id)arg1;
- (void)setAnimateRangeToScrollToVisible:(bool)arg1;
- (void)setApplyAccessibilityInfoDelayer:(id)arg1;
- (void)setArchivedScrollStateToApply:(id)arg1;
- (void)setAttachmentInsertionController:(id)arg1;
- (void)setAudioBarViewController:(id)arg1;
- (void)setAuthorHighlightsController:(id)arg1;
- (void)setAuthorHighlightsUpdater:(id)arg1;
- (void)setAuxiliaryResponder:(id)arg1;
- (void)setAuxiliaryStylingController:(id)arg1;
- (void)setBodyStyle:(id)arg1;
- (void)setBulletedListStyle:(id)arg1;
- (void)setCanShowLinkBar:(bool)arg1;
- (void)setChangePasswordContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setChangeStyleBarButton:(id)arg1;
- (void)setChangeStyleButton:(id)arg1;
- (void)setChangeStyleCenterButton:(id)arg1;
- (void)setCloseAuxiliaryWindowBarButton:(id)arg1;
- (void)setComposeNoteBarButton:(id)arg1;
- (void)setComposeNoteNavBarButton:(id)arg1;
- (void)setCreatedGalleryAttachmentUUID:(id)arg1;
- (void)setCurrentStrokeStartTouch:(id)arg1;
- (void)setCurrentTextStyle:(unsigned int)arg1;
- (void)setCurrentWritingDirection:(long long)arg1;
- (void)setDashedListStyle:(id)arg1;
- (void)setDateOfLastStrokeOrNewDrawing:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeleteBarButton:(id)arg1;
- (void)setDeleteNavBarButton:(id)arg1;
- (void)setDidDrawWithPencilWithoutPalette:(bool)arg1;
- (void)setDidEndEditingForAddingImageAttachment:(bool)arg1;
- (void)setDoNotAdvanceInsertionPointAfterInsertingAttachment:(bool)arg1;
- (void)setDoneNavBarButton:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setExtraItemsBeforeCustomCalloutOptions:(id)arg1;
- (void)setFixedWidthStyle:(id)arg1;
- (void)setFlexibleSpaceBarItem:(id)arg1;
- (void)setGelatoCollaborationBarButtonItem:(id)arg1;
- (void)setGelatoCollaborationController:(id)arg1;
- (void)setHandwritingDebugSelectorDelayer:(id)arg1;
- (void)setHandwritingDebugWindow:(id)arg1;
- (void)setHasKeyboardBeenVisibleBefore:(bool)arg1;
- (void)setHashtagController:(id)arg1;
- (void)setHashtagsChangeController:(id)arg1;
- (void)setHeadingStyle:(id)arg1;
- (void)setHostBundleIdentifier:(id)arg1;
- (void)setICloudShareOffNavBarButton:(id)arg1;
- (void)setICloudShareOnFolderNavBarButton:(id)arg1;
- (void)setICloudShareOnNoteNavBarButton:(id)arg1;
- (void)setIPhoneSystemPaperAttachmentPresenter:(id)arg1;
- (void)setIPhoneSystemPaperCancelBarButton:(id)arg1;
- (void)setIPhoneSystemPaperDidSaveOrCancel:(bool)arg1;
- (void)setIPhoneSystemPaperSaveBarButton:(id)arg1;
- (void)setIndentKeyCommands:(id)arg1;
- (void)setIndentRTLKeyCommands:(id)arg1;
- (void)setInkPaletteController:(id)arg1;
- (void)setInkPickerState:(unsigned long long)arg1;
- (void)setInlineSketchBarButton:(id)arg1;
- (void)setInlineSketchBarButtonHasSelectedImage:(bool)arg1;
- (void)setInlineSketchVisualIndicatorFadeOutSelectorDelayer:(id)arg1;
- (void)setInputAccessoryViewHeight:(double)arg1;
- (void)setInputAssistantLeadingGroup:(id)arg1;
- (void)setInputAssistantTrailingGroup:(id)arg1;
- (void)setInsertBarButton:(id)arg1;
- (void)setInsertToolbarItem:(id)arg1;
- (void)setInvitation:(id)arg1;
- (void)setInvitationViewController:(id)arg1;
- (void)setIsAddingImageAttachment:(bool)arg1;
- (void)setIsConvertToTag:(bool)arg1;
- (void)setIsDrawingStroke:(bool)arg1;
- (void)setIsDrawingStrokeWithPencil:(bool)arg1;
- (void)setIsEditingNewNote:(bool)arg1;
- (void)setIsLoadingStyleSelectorInputView:(bool)arg1;
- (void)setIsPerformingDeleteAnimation:(bool)arg1;
- (void)setIsPreviewingAttachmentFromNote:(bool)arg1;
- (void)setIsSelecting:(bool)arg1;
- (void)setIsSettingEditing:(bool)arg1;
- (void)setIsSettingSelection:(bool)arg1;
- (void)setIsShowingUnseenShareSummaryIndicator:(bool)arg1;
- (void)setKeyboardAnimateInFinishTime:(id)arg1;
- (void)setKeyboardButtonItems:(id)arg1;
- (void)setKeyboardDidShowAnimationDate:(id)arg1;
- (void)setLastSelectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setLeadingBarItem:(id)arg1;
- (void)setLimitExceededAlertController:(id)arg1;
- (void)setLinksBarNeedsAnimationWhileEditorIsVisible:(bool)arg1;
- (void)setLockIconCoverViewController:(id)arg1;
- (void)setLockNavBarButton:(id)arg1;
- (void)setMentionsController:(id)arg1;
- (void)setMergeabilityController:(id)arg1;
- (void)setMoveBarButton:(id)arg1;
- (void)setMoveNavBarButton:(id)arg1;
- (void)setNeedsStatusBarAppearanceUpdate;
- (void)setNeedsToPerformInitialPaperAnimations:(bool)arg1;
- (void)setNote:(id)arg1;
- (void)setNote:(id)arg1 delayedForLaunch:(bool)arg2 successHandler:(id /* block */)arg3;
- (void)setNote:(id)arg1 overrideScrollState:(id)arg2;
- (void)setNoteAndFolderChangeController:(id)arg1;
- (void)setNoteExporter:(id)arg1;
- (void)setNoteLastModificationDate:(id)arg1;
- (void)setNoteOrFolderChangedCallbackSelectorDelayer:(id)arg1;
- (void)setNoteUserActivity:(id)arg1;
- (void)setNoteUserActivityState:(id)arg1;
- (void)setNumberedListStyle:(id)arg1;
- (void)setOpenInkPickerToolbarButton:(id)arg1;
- (void)setOriginalEndOfNote:(id)arg1;
- (void)setPaletteResponder:(id)arg1;
- (void)setPaperLinkBarShowing:(bool)arg1;
- (void)setPaperLinkBarTopConstraint:(id)arg1;
- (void)setPaperLinkBarViewController:(id)arg1;
- (void)setParentType:(long long)arg1;
- (void)setPasswordEntryViewController:(id)arg1;
- (void)setPreviousNote:(id)arg1;
- (void)setPreviouslyHadMarkedText:(bool)arg1;
- (void)setQuickNoteAllNotesBarButton:(id)arg1;
- (void)setRangeToScrollToVisible:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setRedoBarButton:(id)arg1;
- (void)setRedoButton:(id)arg1;
- (void)setRedoNavBarButton:(id)arg1;
- (void)setRulerHostingView:(id)arg1;
- (void)setSavedScrollStates:(id)arg1;
- (void)setSearchRegex:(id)arg1;
- (void)setSearchableStringToScrollToVisible:(id)arg1;
- (void)setSelectStyleBarItem:(id)arg1;
- (void)setSelectedCanvasAttachment:(id)arg1;
- (void)setSelectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setSelectedTextRangeToRestoreAfterBarSourcedPopoverPresentation:(id)arg1;
- (void)setShareNavBarButtonItem:(id)arg1;
- (void)setShouldAllowAttributionSidebar:(bool)arg1;
- (void)setShouldBeginEditingAfterNoteUnlock:(bool)arg1;
- (void)setShouldClearBackgroundColorAfterPreview:(bool)arg1;
- (void)setShouldClearCornerRadiusAfterPreview:(bool)arg1;
- (void)setShouldFireNoteViewEventOnViewDisappear:(bool)arg1;
- (void)setShouldInputAccessoryViewButtonsBeVisible:(bool)arg1;
- (void)setShouldOverscrollScrollState:(bool)arg1;
- (void)setShouldRemoveEmptyNoteWhenViewDisappeared:(bool)arg1;
- (void)setShouldResetTextViewContentOffsetWhenAppearing:(bool)arg1;
- (void)setShouldTrackNoteViewEventAnalyticsFromSettingNote:(bool)arg1;
- (void)setShowInkPickerAfterViewAppears:(bool)arg1;
- (void)setShowInkPickerBarItem:(id)arg1;
- (void)setShowInkPickerButton:(id)arg1;
- (void)setShowInsertUIAfterViewAppears:(bool)arg1;
- (void)setShowOrHideSearchPatternHighlightsDelayer:(id)arg1;
- (void)setShowingChecklistItems:(bool)arg1;
- (void)setShowingIndentationItems:(bool)arg1;
- (void)setSidecarInsertMenu:(id)arg1;
- (void)setSplitViewExpandingOrCollapsing:(bool)arg1;
- (void)setStartEditingAfterViewAppears:(bool)arg1;
- (void)setStyleSelectorController:(id)arg1;
- (void)setStyleSelectorDummyInputView:(id)arg1;
- (void)setStyleSelectorInputViewPresenting:(bool)arg1;
- (void)setSubheadingStyle:(id)arg1;
- (void)setSuspendBarButtonUpdates:(bool)arg1;
- (void)setSuspendSelectedRangeUpdates:(bool)arg1;
- (void)setSuspendTapGestureRecognizer:(bool)arg1;
- (void)setSwipeGestureRecognizers:(id)arg1;
- (void)setTableButtonsShowMore:(bool)arg1;
- (void)setTableToolbarItem:(id)arg1;
- (void)setTextViewController:(id)arg1;
- (void)setTextViewInputAccessoryView:(id)arg1;
- (void)setTextViewMinimumBottomInset:(double)arg1;
- (void)setTextViewScrollIndicatorBottomInsetOverride:(double)arg1;
- (void)setTextViewScrollIndicatorBottomInsetOverrideToRestore:(double)arg1;
- (void)setTipContent:(id)arg1;
- (void)setTipContentController:(id)arg1;
- (void)setTipContentControllerDelegateEnabled:(bool)arg1;
- (void)setTipContentView:(id)arg1;
- (void)setTipContentViewController:(id)arg1;
- (void)setTitleStyle:(id)arg1;
- (void)setToggleTodoBarItem:(id)arg1;
- (void)setToggleTodoStyleButton:(id)arg1;
- (void)setToggleTodoStyleCenterButton:(id)arg1;
- (void)setTogglingLock:(bool)arg1;
- (void)setToolbar:(id)arg1;
- (void)setToolbarState:(unsigned long long)arg1;
- (void)setTrailingBarItem:(id)arg1;
- (void)setUndoBarButton:(id)arg1;
- (void)setUndoButton:(id)arg1;
- (void)setUndoNavBarButton:(id)arg1;
- (void)setUnlockNavBarButton:(id)arg1;
- (void)setUnsupportedNoteView:(id)arg1;
- (void)setUpdateContentSizeCategoryWhenVisible:(bool)arg1;
- (void)setUpdateNoteUserActivityStateDelayer:(id)arg1;
- (void)setUserActivityUpdateQueue:(id)arg1;
- (void)setUserInteractionEnabled:(bool)arg1;
- (void)setUserWantsToSeeDateLabel:(bool)arg1;
- (void)setViewControllerManager:(id)arg1;
- (void)setVisualAssetImportController:(id)arg1;
- (void)setWasEditingBeforeDrawing:(bool)arg1;
- (void)setWasWindowlessDuringTransitionToSize:(bool)arg1;
- (void)setupForFingerDrawing;
- (void)setupLinedPaperOnNewNote:(id)arg1 willStartEditing:(bool)arg2;
- (void)shareButtonPressedWithSender:(id)arg1;
- (id)shareNavBarButtonItem;
- (void)sharedWithYouControllerDidUpdateHighlights:(id)arg1;
- (void)shiftReturn:(id)arg1;
- (void)shiftTab:(id)arg1;
- (bool)shouldAllowAttributionSidebar;
- (bool)shouldBeginEditingAfterNoteUnlock;
- (bool)shouldBlockHitTestOnTextView:(id)arg1 event:(id)arg2;
- (bool)shouldClearBackgroundColorAfterPreview;
- (bool)shouldClearCornerRadiusAfterPreview;
- (bool)shouldEnablePencilGestures;
- (bool)shouldFireNoteViewEventOnViewDisappear;
- (bool)shouldForceLightContent;
- (bool)shouldIgnoreTapToStartEditingTextView:(id)arg1;
- (bool)shouldInputAccessoryViewButtonsBeVisible;
- (bool)shouldInsertNewDrawingsAsPaper;
- (bool)shouldLockTextViewContentOffset;
- (bool)shouldOverscrollScrollState;
- (bool)shouldRemoveEmptyNoteWhenViewDisappeared;
- (bool)shouldResetTextViewContentOffsetWhenAppearing;
- (bool)shouldRespondToPanGestureTouch:(id)arg1 forAttachment:(id)arg2;
- (bool)shouldShowInlineTipForCustomizationID:(long long)arg1;
- (bool)shouldShowMenuItems;
- (bool)shouldStartEditingForTapGesture:(id)arg1;
- (bool)shouldTrackNoteViewEventAnalyticsFromSettingNote;
- (bool)shouldUseiPadBarLayout;
- (void)showActivityStreamToolbarForObject:(id)arg1 selection:(id)arg2 animated:(bool)arg3;
- (void)showDocumentCamera;
- (void)showDrawingUpdateAlert;
- (void)showHandwritingDebugWindow:(bool)arg1;
- (void)showInkPicker:(id)arg1;
- (void)showInkPicker:(bool)arg1 animated:(bool)arg2;
- (bool)showInkPickerAfterViewAppears;
- (void)showInkPickerAndEndEditingIfNecessary;
- (id)showInkPickerBarItem;
- (id)showInkPickerButton;
- (void)showInlineDrawingIndicator;
- (bool)showInsertUIAfterViewAppears;
- (void)showInsertUIForSourceType:(long long)arg1 sender:(id)arg2;
- (void)showInsertUIWithPreferredSourceType:(long long)arg1;
- (void)showOrHideLockIconCoverViewControllerIfNeededIsBackgrounding:(bool)arg1;
- (void)showOrHidePasswordEntryViewControllerIfNeeded;
- (id)showOrHideSearchPatternHighlightsDelayer;
- (void)showOrHideSearchPatternHighlightsIfNecessary;
- (void)showOrHideToolbarIfNecessaryAnimated:(bool)arg1;
- (void)showOverscrollContentAndScrollToTop;
- (void)showRecoverNoteAlert;
- (void)showStyleSelector:(bool)arg1 animated:(bool)arg2;
- (void)showStyleSelector:(bool)arg1 animated:(bool)arg2 sender:(id)arg3;
- (void)showStyleSelectorInputView:(bool)arg1 animated:(bool)arg2 doneEditing:(bool)arg3;
- (void)showStyleSelectorPopover:(bool)arg1 animated:(bool)arg2 sender:(id)arg3;
- (void)showTipAnimated:(bool)arg1;
- (void)showUserAndDateViewsIfNecessary;
- (id)sidecarInsertMenu;
- (void)startBlockingMerge;
- (void)startEditing;
- (bool)startEditingAfterViewAppears;
- (void)stopBlockingMerge;
- (void)stopTextFindingIfNecessary;
- (void)strikethrough:(id)arg1;
- (void)styleSelector:(id)arg1 didChangeIndentAmount:(long long)arg2;
- (void)styleSelector:(id)arg1 didSelectStyle:(unsigned int)arg2;
- (void)styleSelector:(id)arg1 presentViewController:(id)arg2 animated:(bool)arg3 completion:(id /* block */)arg4;
- (void)styleSelector:(id)arg1 toggleBIUS:(unsigned long long)arg2;
- (bool)styleSelectorCanIndentLeft:(id)arg1;
- (bool)styleSelectorCanIndentRight:(id)arg1;
- (id)styleSelectorController;
- (void)styleSelectorDidCancel:(id)arg1;
- (void)styleSelectorDidIndentLeft:(id)arg1;
- (void)styleSelectorDidIndentRight:(id)arg1;
- (id)styleSelectorDummyInputView;
- (bool)styleSelectorInputViewShowing;
- (void)submitChecklistAnalyticsEventForActionType:(long long)arg1;
- (void)submitNoteEditEventIfNecessary;
- (bool)suspendBarButtonUpdates;
- (bool)suspendSelectedRangeUpdates;
- (bool)suspendTapGestureRecognizer;
- (id)swipeGestureRecognizers;
- (id)systemImageNameForAddCollaboratorsActivity:(id)arg1;
- (void)systemPaperLinkBarVisibilityPreferenceChanged:(id)arg1;
- (void)tab:(id)arg1;
- (id)tableActionMenu:(id)arg1;
- (void)tableButtonPressed:(id)arg1;
- (bool)tableButtonsShowMore;
- (void)tableCellFirstResponderChanged;
- (id)tableToolbarItem;
- (void)teardownSystemPaperLinkBarIfNecessary;
- (id)textController;
- (id)textFindingController;
- (id)textStorage;
- (id)textView;
- (bool)textView:(id)arg1 canAddDrawingAtIndex:(unsigned long long)arg2;
- (void)textView:(id)arg1 didRemoveDrawingAtIndex:(unsigned long long)arg2;
- (id)textView:(id)arg1 newAttachmentForFileType:(id)arg2;
- (bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementText:(id)arg3;
- (bool)textView:(id)arg1 shouldInteractWithURL:(id)arg2 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 interaction:(long long)arg4;
- (void)textView:(id)arg1 upgradeDrawingAtIndex:(unsigned long long)arg2 itemProviders:(id)arg3 insertionLocationInDrawing:(struct CGPoint { double x1; double x2; })arg4;
- (void)textView:(id)arg1 willAddDrawingAtIndex:(unsigned long long)arg2;
- (double)textViewBottomInsetThatWeWant;
- (double)textViewBottomInsetThatWeWantForEditing:(bool)arg1;
- (double)textViewBottomPaddingVisibleRatio;
- (bool)textViewCanAddStroke:(id)arg1;
- (bool)textViewCanSelectDrawing:(id)arg1;
- (id)textViewController;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidEndStroke:(id)arg1;
- (id)textViewIfLoaded;
- (id)textViewInputAccessoryView;
- (double)textViewMinimumBottomInset;
- (double)textViewScrollIndicatorBottomInsetOverride;
- (double)textViewScrollIndicatorBottomInsetOverrideToRestore;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })textViewScrollIndicatorInsetsThatWeWant;
- (double)textViewScrollPosition;
- (bool)textViewShouldBeginEditing:(id)arg1;
- (double)textViewTopInsetThatWeWant;
- (double)textViewTopInsetThatWeWantWithWillEndDragging:(bool)arg1;
- (id)textViewUndoManager;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })textViewVisibleRange;
- (void)textViewWillBeginStroke:(id)arg1 forTouch:(id)arg2;
- (id)tipContent;
- (id)tipContentController;
- (bool)tipContentControllerDelegateEnabled;
- (id)tipContentView;
- (id)tipContentViewController;
- (id)tipFeatureForCustomizationID:(long long)arg1;
- (id)titleForAddCollaboratorsActivity:(id)arg1;
- (bool)toggleInkPickerAnimated:(bool)arg1;
- (id)toggleTodoBarItem;
- (void)toggleTodoChecked:(id)arg1;
- (void)toggleTodoStyle:(id)arg1;
- (id)toggleTodoStyleButton;
- (id)toggleTodoStyleCenterButton;
- (id)toolbar;
- (unsigned long long)toolbarState;
- (double)topInsetForResizer:(id)arg1;
- (id)trailingBarItem;
- (void)traitCollectionDidChange:(id)arg1;
- (void)uncheckAll:(id)arg1;
- (void)undoAction:(id)arg1;
- (id)undoBarButton;
- (id)undoButton;
- (id)undoManager;
- (id)undoNavBarButton;
- (void)undoablySwitchToPPK:(bool)arg1;
- (id)unlockNavBarButton;
- (id)unsupportedNoteView;
- (void)updateActionMenu;
- (void)updateAuthorHighlightsIfNeeded;
- (void)updateBarButtons;
- (void)updateBarButtonsAnimated:(bool)arg1;
- (void)updateBarButtonsAnimated:(bool)arg1 checkIfVisible:(bool)arg2;
- (void)updateBottomContentPadding;
- (void)updateCenterToolbarButtonsVisibility;
- (void)updateChecklistButtonAccessibility;
- (bool)updateContentSizeCategoryWhenVisible;
- (void)updateDataOwnerForCopyAndPaste;
- (void)updateDateLabelAccessibility;
- (void)updateDrawingAttachmentsIfNeeded;
- (void)updateDrawingAttachmentsInNote;
- (void)updateForceLightContentIfNecessary;
- (void)updateFormatToolbarLayoutWithSize:(struct CGSize { double x1; double x2; })arg1;
- (void)updateICloudShareNavBarButton;
- (void)updateICloudShareNavBarButtonAccessibility;
- (void)updateInkPickerAndTextViewToTool:(id)arg1;
- (void)updateInlineDrawings;
- (void)updateInlineDrawingsPaletteVisibility;
- (void)updateInlineSketchBarButtonItemForSelected:(bool)arg1;
- (void)updateInputAssistantItem;
- (void)updateLastViewedMetadataIfNessessary;
- (void)updateMergeabilityController;
- (void)updateNoteUserActivityState;
- (id)updateNoteUserActivityStateDelayer;
- (void)updateParticipantsInDrawings;
- (void)updatePencilKitPaperStyleType;
- (void)updatePencilKitSelectionViewEnabled;
- (void)updateSelectionOnUndo:(id)arg1;
- (void)updateStyleSelectorStateIfVisibleIgnoreTypingAttributes:(bool)arg1;
- (void)updateTableButtonsToShowMore:(bool)arg1;
- (void)updateTextInputAccessoryViewForDidBeginEditing:(id)arg1;
- (void)updateTextInputAccessoryViewForDidEndEditing:(id)arg1;
- (void)updateTextViewBackground;
- (void)updateTextViewContentInsetsAnimated:(bool)arg1;
- (void)updateTextViewContentOffset;
- (void)updateToolbarItems;
- (void)updateUIEnabledStatePencilActive:(bool)arg1;
- (void)updateUndoRedoBarButtons;
- (void)updateiPhoneSystemPaperBarButtons;
- (void)upgradeAllAttachmentsInNoteWithUpgradeHelper:(id)arg1;
- (bool)useInputViewForStyleSelector;
- (id)userActivity;
- (void)userActivity:(id)arg1 didReceiveInputStream:(id)arg2 outputStream:(id)arg3;
- (id)userActivityUpdateQueue;
- (void)userActivityWillSave:(id)arg1;
- (bool)userWantsToSeeDateLabel;
- (id)viewControllerManager;
- (void)viewControllerWillStartEditModeNotification:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })visibleRange;
- (id)visualAssetImportController;
- (bool)wantsToRemainFirstResponder;
- (void)warnLimitExceededWithTitle:(id)arg1 andMessage:(id)arg2;
- (void)warnUserAttachmentLimitExceeded;
- (void)warnUserAttachmentSizeExceededWithAttachmentCount:(unsigned long long)arg1;
- (void)warnUserNoteLengthExceeded;
- (bool)wasEditingBeforeDrawing;
- (bool)wasWindowlessDuringTransitionToSize;
- (void)willAddAttachmentForNoteNotification:(id)arg1;

@end
