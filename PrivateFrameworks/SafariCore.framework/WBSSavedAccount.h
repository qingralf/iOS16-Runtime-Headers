/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore
 */

@interface WBSSavedAccount : NSObject {
    NSDate * _creationDateForPasskey;
    NSDate * _earliestCreationDate;
    NSDate * _earliestPasswordCredentialModificationDate;
    NSString * _highLevelDomain;
    NSDate * _lastModifiedDateForPasskey;
    NSDate * _lastUsedDateForPasskey;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSString * _passkeyCredentialID;
    WBSSavedAccountSidecar * _passkeyCredentialSidecar;
    NSString * _passkeyRelyingPartyID;
    NSString * _passkeyUserHandle;
    NSString * _password;
    NSArray * _persistentIdentifiersForWarningManager;
    bool  _shouldShowSpecificSubdomainForUserVisibleDomain;
    NSMutableDictionary * _siteToProtectionSpaces;
    NSMutableArray * _sites;
    NSMutableSet * _sitesForWhichSelfIsDefault;
    NSMutableDictionary * _sitesToSidecars;
    NSString * _user;
    bool  _userIsNeverSaveMarker;
}

@property (nonatomic, readonly, copy) NSDate *creationDate;
@property (nonatomic, copy) NSDate *creationDateForPasskey;
@property (nonatomic, readonly) long long credentialTypes;
@property (nonatomic, readonly) NSString *currentOneTimeCode;
@property (nonatomic, readonly) bool hasSidecarData;
@property (nonatomic, readonly) WBSPasswordWarningHideMarker *hideWarningMarker;
@property (nonatomic, readonly) NSString *highLevelDomain;
@property (nonatomic, readonly) bool isOneTimeSharable;
@property (nonatomic, readonly, copy) NSDate *lastModifiedDate;
@property (nonatomic, copy) NSDate *lastModifiedDateForPasskey;
@property (nonatomic, readonly, copy) NSDate *lastOneTimeShareDateForPasskey;
@property (nonatomic, copy) NSDate *lastUsedDateForPasskey;
@property (nonatomic, readonly, copy) NSString *monogramCharacter;
@property (nonatomic, readonly, copy) NSString *notesEntry;
@property (nonatomic, copy) NSString *passkeyCredentialID;
@property (nonatomic, copy) WBSSavedAccountSidecar *passkeyCredentialSidecar;
@property (nonatomic, copy) NSString *passkeyRelyingPartyID;
@property (nonatomic, copy) NSString *passkeyUserHandle;
@property (nonatomic, copy) NSString *password;
@property (nonatomic, retain) NSArray *persistentIdentifiersForWarningManager;
@property (nonatomic, readonly) NSArray *protectionSpaces;
@property (nonatomic) bool shouldShowSpecificSubdomainForUserVisibleDomain;
@property (nonatomic, readonly) NSArray *sidecars;
@property (nonatomic, readonly) NSArray *sites;
@property (nonatomic, readonly) NSArray *totpGenerators;
@property (nonatomic, readonly) NSString *user;
@property (nonatomic, readonly) bool userIsNeverSaveMarker;
@property (nonatomic, readonly) NSString *userVisibleDomain;
@property (nonatomic, readonly) NSArray *userVisibleSites;

// Image: /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore

+ (void)enumerateRangesMatchingPatternWithTokenizer:(struct __CFStringTokenizer { }*)arg1 string:(id)arg2 pattern:(id)arg3 matchingType:(long long)arg4 withBlock:(id /* block */)arg5;
+ (bool)stringMatchesPatternWithTokenizer:(struct __CFStringTokenizer { }*)arg1 string:(id)arg2 pattern:(id)arg3 matchingType:(long long)arg4;

- (void).cxx_destruct;
- (void)_addCreationDate:(id)arg1;
- (void)_addPasswordCredentialModificationDate:(id)arg1;
- (void)_addProtectionSpace:(id)arg1 forSite:(id)arg2 isDefaultCredentialForSite:(bool)arg3;
- (void)_addSidecar:(id)arg1 forSite:(id)arg2;
- (void)_adoptSitesFromSavedAccount:(id)arg1;
- (bool)_allSitesHaveSameNonDefaultPort;
- (bool)_containsProtectionSpace:(id)arg1;
- (void)_deleteCredentialForProtectionSpace:(id)arg1 fromStorage:(id)arg2;
- (void)_deletePasskeyCredential;
- (void)_deletePasswordCredentials;
- (void)_deletePasswordCredentialsForSite:(id)arg1;
- (void)_deleteSidecarForPasskeyCredentialID;
- (void)_deleteSidecarForProtectionSpace:(id)arg1 fromStorage:(id)arg2;
- (id)_exportPasskeyCredential;
- (id)_highLevelDomainWithPortIncluded;
- (id)_initWithHighLevelDomain:(id)arg1 passkeyRelyingPartyID:(id)arg2 user:(id)arg3 password:(id)arg4 passkeyUserHandle:(id)arg5 passkeyCredentialID:(id)arg6 siteToProtectionSpaces:(id)arg7 sitesToSidecars:(id)arg8;
- (id)_initWithHighLevelDomain:(id)arg1 user:(id)arg2 password:(id)arg3;
- (id)_initWithPasskeyRelyingPartyID:(id)arg1 user:(id)arg2 passkeyUserHandle:(id)arg3 passkeyCredentialID:(id)arg4;
- (bool)_matchesSearchPattern:(id)arg1 matchAgainstUser:(bool)arg2 associatedDomains:(id)arg3;
- (void)_setUser:(id)arg1 password:(id)arg2;
- (id)_sidecarForSite:(id)arg1;
- (long long)compare:(id)arg1;
- (id)creationDate;
- (id)creationDateForPasskey;
- (long long)credentialTypes;
- (id)currentOneTimeCode;
- (id)description;
- (bool)hasProtectionSpace:(id)arg1;
- (bool)hasProtectionSpaceWithHighLevelDomainMatchingProtectionSpace:(id)arg1;
- (bool)hasSidecarData;
- (unsigned long long)hash;
- (id)hideWarningMarker;
- (id)highLevelDomain;
- (bool)isDefaultCredentialForFullyQualifiedHostname:(id)arg1;
- (bool)isDuplicateWithoutUserNameOfSavedAccount:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isOneTimeSharable;
- (id)lastModifiedDate;
- (id)lastModifiedDateForPasskey;
- (id)lastOneTimeShareDateForPasskey;
- (id)lastUsedDateForPasskey;
- (bool)matchesDomain:(id)arg1 associatedDomains:(id)arg2;
- (bool)matchesServiceNameHintString:(id)arg1;
- (bool)matchesUserTypedSearchPattern:(id)arg1 associatedDomains:(id)arg2;
- (id)monogramCharacter;
- (id)notesEntry;
- (id)passkeyCredentialID;
- (id)passkeyCredentialSidecar;
- (id)passkeyRelyingPartyID;
- (id)passkeyUserHandle;
- (id)password;
- (id)persistentIdentifiersForWarningManager;
- (id)protectionSpaces;
- (void)setCreationDateForPasskey:(id)arg1;
- (void)setLastModifiedDateForPasskey:(id)arg1;
- (void)setLastUsedDateForPasskey:(id)arg1;
- (void)setPasskeyCredentialID:(id)arg1;
- (void)setPasskeyCredentialSidecar:(id)arg1;
- (void)setPasskeyRelyingPartyID:(id)arg1;
- (void)setPasskeyUserHandle:(id)arg1;
- (void)setPassword:(id)arg1;
- (void)setPersistentIdentifiersForWarningManager:(id)arg1;
- (void)setShouldShowSpecificSubdomainForUserVisibleDomain:(bool)arg1;
- (bool)shouldShowSpecificSubdomainForUserVisibleDomain;
- (id)sidecars;
- (id)sites;
- (id)totpGeneratorForSite:(id)arg1;
- (id)totpGenerators;
- (id)user;
- (bool)userIsNeverSaveMarker;
- (id)userVisibleDomain;
- (id)userVisibleSites;

// Image: /System/Library/Frameworks/SafariServices.framework/SafariServices

- (id)_firstSiteMatchingSearchPattern:(id)arg1 withTokenizer:(struct __CFStringTokenizer { }*)arg2;
- (void)safari_getTitle:(id*)arg1 detail:(id*)arg2 forTableViewCell:(id)arg3 withSearchPattern:(id)arg4 emphasizeUserName:(bool)arg5;

@end
