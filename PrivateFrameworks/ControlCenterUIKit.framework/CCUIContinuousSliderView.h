/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit
 */

@interface CCUIContinuousSliderView : CCUIBaseSliderView <UIGestureRecognizerDelegate> {
    unsigned long long  _axis;
    UIView * _backgroundView;
    double  _continuousSliderCornerRadius;
    _UIEdgeFeedbackGenerator * _edgeFeedbackGenerator;
    bool  _gestureStartedInside;
    double  _startingLength;
    float  _startingValue;
    UIPanGestureRecognizer * _valueChangeGestureRecognizer;
    UIView * _valueIndicatorClippingView;
}

@property (nonatomic) unsigned long long axis;
@property (nonatomic) double continuousSliderCornerRadius;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIView *valueIndicatorClippingView;

// Image: /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit

- (void).cxx_destruct;
- (void)_beginTrackingWithGestureRecognizer:(id)arg1;
- (void)_handleValueChangeGestureRecognizer:(id)arg1;
- (void)_updateValueForPanGestureRecognizer:(id)arg1 forContinuedGesture:(bool)arg2;
- (float)_valueForTouchTranslation:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned long long)axis;
- (double)continuousSliderCornerRadius;
- (float)filteredValueForValue:(float)arg1;
- (struct CGPoint { double x1; double x2; })glyphCenter;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (void)setAxis:(unsigned long long)arg1;
- (void)setContinuousSliderCornerRadius:(double)arg1;
- (double)sliderLengthForValue:(float)arg1;
- (id)topLevelBlockingGestureRecognizers;
- (id)valueIndicatorClippingView;

// Image: /System/Library/AccessibilityBundles/ControlCenterUIKit.axbundle/ControlCenterUIKit

+ (Class)safeCategoryBaseClass;

- (void)_accessibilityAdjustSliderValueInForwardDirection:(bool)arg1;
- (bool)_accessibilityIsVerticalAdjustableElement;
- (void)_continueTrackingWithGestureRecognizer:(id)arg1;
- (void)_endTrackingWithGestureRecognizer:(id)arg1;
- (void)accessibilityDecrement;
- (void)accessibilityIncrement;
- (id)accessibilityPath;
- (id)accessibilityValue;

@end
