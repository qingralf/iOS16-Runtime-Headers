/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaControls.framework/MediaControls
 */

@interface MediaControlsHeaderView : UIView <_UICursorInteractionDelegate> {
    MTMaterialView * _artworkBackground;
    UIView * _artworkContentView;
    UIImageView * _artworkView;
    long long  _buttonType;
    _UICursorInteraction * _cursorInteraction;
    MPButton * _doneButton;
    UIButton * _launchNowPlayingAppButton;
    bool  _marqueeEnabled;
    struct CGSize { 
        double width; 
        double height; 
    }  _overrideSize;
    UIImageView * _placeholderArtworkView;
    UILabel * _placeholderLabel;
    NSString * _placeholderString;
    MPCPlayerPath * _playerPath;
    UILabel * _primaryLabel;
    MPUMarqueeView * _primaryMarqueeView;
    NSString * _primaryString;
    MPRouteLabel * _routeLabel;
    bool  _routing;
    MediaControlsRoutingButtonView * _routingButton;
    bool  _scalePlaceholderImage;
    UILabel * _secondaryLabel;
    MPUMarqueeView * _secondaryMarqueeView;
    NSString * _secondaryString;
    UIView * _shadow;
    bool  _shouldUseOverrideSize;
    bool  _showPlaceholderString;
    long long  _style;
    bool  _transitioning;
    MTVisualStylingProvider * _visualStylingProvider;
}

@property (nonatomic, retain) MTMaterialView *artworkBackground;
@property (nonatomic, retain) UIView *artworkContentView;
@property (nonatomic, retain) UIImageView *artworkView;
@property (nonatomic) long long buttonType;
@property (nonatomic, retain) _UICursorInteraction *cursorInteraction;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) MPButton *doneButton;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIButton *launchNowPlayingAppButton;
@property (nonatomic) bool marqueeEnabled;
@property (nonatomic) struct CGSize { double x1; double x2; } overrideSize;
@property (nonatomic, retain) UIImageView *placeholderArtworkView;
@property (nonatomic, retain) UILabel *placeholderLabel;
@property (nonatomic, copy) NSString *placeholderString;
@property (nonatomic, copy) MPCPlayerPath *playerPath;
@property (nonatomic, retain) UILabel *primaryLabel;
@property (nonatomic, retain) MPUMarqueeView *primaryMarqueeView;
@property (nonatomic, copy) NSString *primaryString;
@property (nonatomic, retain) MPRouteLabel *routeLabel;
@property (getter=isRouting, nonatomic) bool routing;
@property (nonatomic, retain) MediaControlsRoutingButtonView *routingButton;
@property (nonatomic) bool scalePlaceholderImage;
@property (nonatomic, retain) UILabel *secondaryLabel;
@property (nonatomic, retain) MPUMarqueeView *secondaryMarqueeView;
@property (nonatomic, copy) NSString *secondaryString;
@property (nonatomic, retain) UIView *shadow;
@property (nonatomic) bool shouldUseOverrideSize;
@property (nonatomic) bool showPlaceholderString;
@property (nonatomic) long long style;
@property (readonly) Class superclass;
@property (getter=isTransitioning, nonatomic) bool transitioning;
@property (nonatomic, retain) MTVisualStylingProvider *visualStylingProvider;

// Image: /System/Library/PrivateFrameworks/MediaControls.framework/MediaControls

- (void).cxx_destruct;
- (void)_handleContentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_updateRTL;
- (void)_updateStyle;
- (id)artworkBackground;
- (id)artworkContentView;
- (id)artworkView;
- (long long)buttonType;
- (void)clearOverrideSize;
- (id)cursorInteraction;
- (id)cursorInteraction:(id)arg1 regionForLocation:(struct CGPoint { double x1; double x2; })arg2 defaultRegion:(id)arg3;
- (id)cursorInteraction:(id)arg1 styleForRegion:(id)arg2 modifiers:(long long)arg3;
- (void)dealloc;
- (void)didMoveToWindow;
- (id)doneButton;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isRouting;
- (bool)isTransitioning;
- (id)launchNowPlayingAppButton;
- (void)launchNowPlayingAppButtonPressed;
- (struct CGSize { double x1; double x2; })layoutTextInAvailableBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 setFrames:(bool)arg2;
- (bool)marqueeEnabled;
- (struct CGSize { double x1; double x2; })overrideSize;
- (id)placeholderArtworkView;
- (id)placeholderLabel;
- (id)placeholderString;
- (id)playerPath;
- (id)primaryLabel;
- (id)primaryMarqueeView;
- (id)primaryString;
- (id)routeLabel;
- (id)routingButton;
- (bool)scalePlaceholderImage;
- (id)secondaryLabel;
- (id)secondaryMarqueeView;
- (id)secondaryString;
- (void)setArtworkBackground:(id)arg1;
- (void)setArtworkContentView:(id)arg1;
- (void)setArtworkView:(id)arg1;
- (void)setButtonType:(long long)arg1;
- (void)setCursorInteraction:(id)arg1;
- (void)setDoneButton:(id)arg1;
- (void)setLaunchNowPlayingAppButton:(id)arg1;
- (void)setMarqueeEnabled:(bool)arg1;
- (void)setOverrideSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPlaceholderArtworkView:(id)arg1;
- (void)setPlaceholderLabel:(id)arg1;
- (void)setPlaceholderString:(id)arg1;
- (void)setPlayerPath:(id)arg1;
- (void)setPrimaryLabel:(id)arg1;
- (void)setPrimaryMarqueeView:(id)arg1;
- (void)setPrimaryString:(id)arg1;
- (void)setRouteLabel:(id)arg1;
- (void)setRouting:(bool)arg1;
- (void)setRoutingButton:(id)arg1;
- (void)setScalePlaceholderImage:(bool)arg1;
- (void)setSecondaryLabel:(id)arg1;
- (void)setSecondaryMarqueeView:(id)arg1;
- (void)setSecondaryString:(id)arg1;
- (void)setShadow:(id)arg1;
- (void)setShouldUseOverrideSize:(bool)arg1;
- (void)setShowPlaceholderString:(bool)arg1;
- (void)setStyle:(long long)arg1;
- (void)setTransitioning:(bool)arg1;
- (void)setVisualStylingProvider:(id)arg1;
- (id)shadow;
- (bool)shouldUseOverrideSize;
- (bool)showPlaceholderString;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (long long)style;
- (void)tintColorDidChange;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateArtworkStyle;
- (id)visualStylingProvider;

// Image: /System/Library/AccessibilityBundles/MediaControls.axbundle/MediaControls

+ (Class)safeCategoryBaseClass;

- (id)_accessibilityCombinedTitleElement;
- (bool)_accessibilityHitTestShouldFallbackToNearestChild;
- (void)_accessibilityLoadAccessibilityInformation;
- (id)accessibilityElements;
- (void)layoutSubviews;

@end
