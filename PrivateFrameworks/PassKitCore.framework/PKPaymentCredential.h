/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
 */

@interface PKPaymentCredential : NSObject <NSSecureCoding> {
    long long  _cardType;
    long long  _credentialType;
    bool  _deletable;
    PKPaymentEligibilityResponse * _eligibilityResponse;
    NSString * _expiration;
    NSString * _longDescription;
    PKPaymentRequirementsResponse * _requirementsResponse;
    NSString * _sanitizedPrimaryAccountName;
    NSString * _sanitizedPrimaryAccountNumber;
}

@property (nonatomic) long long cardType;
@property (nonatomic) long long credentialType;
@property (getter=isDeletable, nonatomic) bool deletable;
@property (nonatomic, retain) PKPaymentEligibilityResponse *eligibilityResponse;
@property (nonatomic, copy) NSString *expiration;
@property (nonatomic, copy) NSString *longDescription;
@property (nonatomic, retain) PKPaymentRequirementsResponse *requirementsResponse;
@property (nonatomic, copy) NSString *sanitizedPrimaryAccountName;
@property (nonatomic, copy) NSString *sanitizedPrimaryAccountNumber;
@property (nonatomic, readonly) bool supportsSuperEasyProvisioning;

+ (id)fakeRemoteCredentials;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (bool)_isEqualToCredential:(id)arg1;
- (id)accountCredential;
- (id)appleBalanceCredential;
- (long long)cardType;
- (long long)compare:(id)arg1 withBackedUpDefaultPaymentPassSerialNumber:(id)arg2;
- (id)contactlessProductCredential;
- (long long)credentialType;
- (id)detailDescription;
- (id)digitalIssuanceProductCredential;
- (id)eligibilityResponse;
- (void)encodeWithCoder:(id)arg1;
- (id)expiration;
- (unsigned long long)hash;
- (id)homeKeyCredential;
- (id)identityCredential;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isAccountCredential;
- (bool)isAppleBalanceCredential;
- (bool)isContactlessProductCredential;
- (bool)isDeletable;
- (bool)isDigitalIssuanceProductCredential;
- (bool)isEqual:(id)arg1;
- (bool)isHomeKeyCredential;
- (bool)isIdentityCredential;
- (bool)isIssuerProvisioningExtensionCredential;
- (bool)isLocalAppletSubcredentialPassCredential;
- (bool)isLocalPassCredential;
- (bool)isPeerPaymentCredential;
- (bool)isPurchasedProductCredential;
- (bool)isRemoteCredential;
- (bool)isSafariCredential;
- (bool)isShareableCredential;
- (id)issuerProvisioningExtensionCredential;
- (id)localAppletSubcredentialPassCredential;
- (id)localPassCredential;
- (id)longDescription;
- (id)peerPaymentCredential;
- (id)purchasedProductCredential;
- (id)remoteCredential;
- (id)requirementsResponse;
- (id)safariCredential;
- (id)sanitizedPrimaryAccountName;
- (id)sanitizedPrimaryAccountNumber;
- (void)setCardType:(long long)arg1;
- (void)setCredentialType:(long long)arg1;
- (void)setDeletable:(bool)arg1;
- (void)setEligibilityResponse:(id)arg1;
- (void)setExpiration:(id)arg1;
- (void)setLongDescription:(id)arg1;
- (void)setRequirementsResponse:(id)arg1;
- (void)setSanitizedPrimaryAccountName:(id)arg1;
- (void)setSanitizedPrimaryAccountNumber:(id)arg1;
- (id)setupProductIdentifier;
- (id)shareableCredential;
- (bool)supportsSuperEasyProvisioning;
- (id)underlyingPaymentPass;

@end
