/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 */

@interface CHBottomUpStrokeGroupingStrategy : CHStrokeGroupingStrategy {
    struct CGVector { 
        double dx; 
        double dy; 
    }  _defaultDeviationVector;
    struct CGVector { 
        double dx; 
        double dy; 
    }  _defaultOrientationVector;
    long long  _groupingContextSize;
    double  _groupingMergingCostThresh;
    double  _groupingMergingEndCostLowThresh;
    double  _groupingSimilarCostThresh;
    bool  _isInlineContinuousMode;
    double  _mergeEndBelowModifier;
    double  _mergeEndDxCostCoeff;
    double  _mergeEndDyCostCoeff;
    double  _mergeEndLeftModifier;
    double  _mergeMiddleBelowModifier;
    double  _mergeMiddleDxCostCoeff;
    double  _mergeMiddleDyCostCoeff;
    bool  _shouldAdjustDeviationOfSmallGroups;
    bool  _shouldCoalesceLastSubstrokes;
    bool  _shouldLimitDefaultWritingOrientationDeviation;
    long long  _splitMaxNaturalIndexDiffThreshold;
    long long  _splitMinimumStrokeCount;
    NSString * _strategyIdentifier;
    double  _strokeDeviationCapCoeff;
    NSArray * _textInputTargets;
}

@property (nonatomic, readonly) bool isInlineContinuousMode;
@property (nonatomic, readonly) NSArray *textInputTargets;

+ (struct vector<CGRect, std::allocator<CGRect>> { struct CGRect {} *x1; struct CGRect {} *x2; struct __compressed_pair<CGRect *, std::allocator<CGRect>> { struct CGRect {} *x_3_1_1; } x3; })_boundingBoxesOfStrokesInGroup:(id)arg1 rotatedAroundPoint:(struct CGPoint { double x1; double x2; })arg2 byAngle:(double)arg3;

- (void).cxx_destruct;
- (void)_applyDefaultGroupingParameters;
- (void)_applyStrictGroupingParameters;
- (id)_averageAngleAndReliabilityForStrokeGroup:(id)arg1;
- (struct CGVector { double x1; double x2; })_averageVectorFromCoalescedSubstrokes:(id)arg1 toSubstroke:(id)arg2 withOrientation:(struct CGVector { double x1; double x2; })arg3 strokeRef:(id)arg4 strokeDest:(id)arg5;
- (void)_getMergingEndOfLineCost:(double*)arg1 mergingEndOfLineStroke:(id*)arg2 forStroke:(id)arg3 consistingOfSubstrokes:(id)arg4 toLineGroup:(id)arg5 refSubstrokeIndex:(long long)arg6;
- (void)_getMergingLowerBoundCost:(double*)arg1 withStrokeBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 toLineGroup:(id)arg3;
- (id)_lastSubstrokeCoalescedWithOverlappingSubstrokes:(id)arg1 strokeDeviation:(struct CGVector { double x1; double x2; })arg2;
- (id)_newTextLineStrokeGroupWithStroke:(id)arg1 withSubstrokePlacements:(id)arg2 reusableIDRemovedGroups:(id)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_normalizedBoundsForWritingDirectionSortedStrokes:(id)arg1 strokeWritingOrientations:(const void*)arg2 firstStrokeDeviation:(struct CGVector { double x1; double x2; })arg3 originalDrawing:(id*)arg4 rotatedSortedStrokes:(void*)arg5;
- (double)_scaleFactorForBoundsHeight:(double)arg1;
- (double)_strokeGroupConfidenceForSortedSubstrokes:(id)arg1 writingDirectionSortedStrokeIdentifiers:(id)arg2 localStrokeWritingOrientations:(const void*)arg3 averageWritingOrientation:(struct CGVector { double x1; double x2; })arg4 averageStrokeDeviation:(struct CGVector { double x1; double x2; })arg5;
- (id)_textLineStrokeGroupByAddingStroke:(id)arg1 withSubstrokePlacements:(id)arg2 intoStrokeGroup:(id)arg3 mergingEndSubgroup:(bool)arg4 bestStrokeMergeEnd:(id)arg5;
- (void)_updateGroups:(id)arg1 createdGroups:(id)arg2 deletedGroups:(id)arg3 forAddedStroke:(id)arg4 substrokePlacementsByStrokeIdentifier:(id)arg5 reusableIDRemovedGroups:(id)arg6 trySplit:(bool)arg7 cancellationBlock:(id /* block */)arg8;
- (double)_verticalOffsetForBoundsHeight:(double)arg1 andScaleFactor:(double)arg2;
- (id)_writingDirectionSortedStrokeIdentifiersFromSubstrokes:(id)arg1 localWritingOrientations:(void*)arg2;
- (struct CGVector { double x1; double x2; })clippedWritingOrientation:(struct CGVector { double x1; double x2; })arg1;
- (long long)compareDistanceInWritingSequenceOfStroke:(id)arg1 andStroke:(id)arg2 toReferenceStroke:(id)arg3;
- (void)estimateWritingDirectionAndSortSubstrokesAccordingly:(id*)arg1 averageWritingOrientation:(struct CGVector { double x1; double x2; }*)arg2 averageStrokeDeviation:(struct CGVector { double x1; double x2; }*)arg3;
- (struct vector<CGPoint, std::allocator<CGPoint>> { struct CGPoint {} *x1; struct CGPoint {} *x2; struct __compressed_pair<CGPoint *, std::allocator<CGPoint>> { struct CGPoint {} *x_3_1_1; } x3; })flippedCenters:(const void*)arg1 ofSubstrokes:(id)arg2 maxStrokesGap:(long long)arg3 begnning:(bool)arg4;
- (void)getMergingEndOfLineCost:(double*)arg1 mergingEndOfLineStroke:(id*)arg2 forStroke:(id)arg3 consistingOfSubstrokes:(id)arg4 toLineGroup:(id)arg5;
- (void)getMergingMiddleOfLineCost:(double*)arg1 mergingMiddleOfLineStroke:(id*)arg2 forStroke:(id)arg3 consistingOfSubstrokes:(id)arg4 toLineGroup:(id)arg5;
- (id)initWithStrokeProvider:(id)arg1 defaultWritingOrientation:(long long)arg2 locales:(id)arg3 isInlineContinuousMode:(bool)arg4 inlineContinuousModeTargets:(id)arg5;
- (bool)isInlineContinuousMode;
- (void)mergeGroupsPostProcessing:(id)arg1 createdGroups:(id)arg2 deletedGroups:(id)arg3;
- (id)recognizableDrawingForStrokeGroup:(id)arg1 translationVector:(struct CGVector { double x1; double x2; })arg2 originalDrawing:(id*)arg3 orderedStrokesIDs:(id*)arg4 rescalingFactor:(double*)arg5;
- (void)refineLocalWritingOrientationsForSubstrokes:(id)arg1 useCoalescedCenter:(bool)arg2;
- (bool)refineWritingOrientationAndResortSubstrokes:(id)arg1 averageWritingOrientation:(struct CGVector { double x1; double x2; }*)arg2;
- (void)smoothLocalWritingOrientations:(void*)arg1;
- (void)sortSubstrokesByWritingDirection:(id)arg1 averageWritingOrientation:(struct CGVector { double x1; double x2; }*)arg2;
- (id)strategyIdentifier;
- (id)textInputTargets;
- (id)tryRegroupingStrokesInGroup:(id)arg1 substrokePlacementsByStrokeIdentifier:(id)arg2 cancellationBlock:(id /* block */)arg3;
- (void)updateLocalStrokeDeviationsForSubstrokes:(id)arg1 averageStrokeDeviation:(struct CGVector { double x1; double x2; }*)arg2;
- (void)updateLocalWritingOrientationsForSubstrokes:(id)arg1 useCoalescedCenter:(bool)arg2;
- (id)updatedGroupingResult:(id)arg1 byAddingStrokes:(id)arg2 removingStrokeIdentifiers:(id)arg3 stableStrokeIdentifiers:(id)arg4 allSubstrokesByStrokeIdentifier:(id)arg5 withCancellationBlock:(id /* block */)arg6;

@end
