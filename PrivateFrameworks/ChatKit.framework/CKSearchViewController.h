/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKSearchViewController : CKScrollViewController <CKSearchControllerDelegate, CKSearchResultsTitleHeaderCellDelegate, UICollectionViewDelegate, UICollectionViewDragDelegate, UIContextMenuInteractionDelegate, UISearchResultsUpdating> {
    CKConversationListCellLayout * _cellLayout;
    CKSearchCollectionView * _collectionView;
    UICollectionViewCompositionalLayout * _collectionViewLayout;
    UIContextMenuInteraction * _contextMenuInteraction;
    UICollectionViewDiffableDataSource * _dataSource;
    <CKContainerSearchControllerDelegate> * _delegate;
    bool  _dismissingSearchController;
    bool  _isInitialLoad;
    unsigned long long  _mode;
    id /* block */  _performAfterInitialLoadBlock;
    NSMutableSet * _searchCompleteControllerSet;
    NSArray * _searchControllers;
    bool  _searchInProgress;
    NSString * _searchText;
    IMTimingCollection * _timingCollection;
}

@property (nonatomic, retain) CKConversationListCellLayout *cellLayout;
@property (nonatomic, retain) CKSearchCollectionView *collectionView;
@property (nonatomic, retain) UICollectionViewCompositionalLayout *collectionViewLayout;
@property (nonatomic, retain) UIContextMenuInteraction *contextMenuInteraction;
@property (nonatomic, retain) UICollectionViewDiffableDataSource *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKContainerSearchControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool dismissingSearchController;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isInitialLoad;
@property (nonatomic) unsigned long long mode;
@property (nonatomic, copy) id /* block */ performAfterInitialLoadBlock;
@property (nonatomic, retain) NSMutableSet *searchCompleteControllerSet;
@property (nonatomic, retain) NSArray *searchControllers;
@property (nonatomic) bool searchInProgress;
@property (nonatomic, copy) NSString *searchText;
@property (readonly) Class superclass;
@property (nonatomic, retain) IMTimingCollection *timingCollection;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

- (void).cxx_destruct;
- (void)__updateSectionHeadersAtIndexPaths:(id)arg1 elementKind:(id)arg2;
- (void)_configureIndexingCell:(id)arg1;
- (bool)_currentModeIsDetails;
- (bool)_hasSelectedItemAtIndexPath:(id*)arg1;
- (id)_identifiersToAppendForResults:(id)arg1;
- (bool)_isInternalInstall;
- (id)_layoutSectionForController:(id)arg1 withEnvironment:(id)arg2;
- (bool)_needsIndexing;
- (id)_newSnapshotForCurrentControllerState;
- (void)_registerCells;
- (void)_searchImmediately;
- (void)_searchResultHeaderButtonTapped:(id)arg1;
- (Class)_searchResultsHeaderClass;
- (void)_selectItemForFindAtIndexPath:(id)arg1;
- (bool)_shouldHideShowAllButtonForController:(id)arg1;
- (void)_updateSectionHeaders;
- (void)cancelCurrentQuery;
- (id)cellForItemInCollectionView:(id)arg1 atIndexPath:(id)arg2 withIdentifier:(id)arg3;
- (id)cellForSupplementryItemInCollectionView:(id)arg1 atIndexPath:(id)arg2 forSupplementryViewKind:(id)arg3;
- (id)cellLayout;
- (id)collectionView;
- (bool)collectionView:(id)arg1 canFocusItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 itemsForBeginningDragSession:(id)arg2 atIndexPath:(id)arg3;
- (bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplaySupplementaryView:(id)arg2 forElementKind:(id)arg3 atIndexPath:(id)arg4;
- (id)collectionViewLayout;
- (id)containerTraitCollectionForController:(id)arg1;
- (double)containerWidthForController:(id)arg1;
- (id)contextMenuInteraction;
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (id)contextMenuInteraction:(id)arg1 previewForHighlightingMenuWithConfiguration:(id)arg2;
- (void)contextMenuInteraction:(id)arg1 willPerformPreviewActionForMenuWithConfiguration:(id)arg2 animator:(id)arg3;
- (bool)contextMenuInteractionShouldBegin:(id)arg1;
- (bool)conversationSearchHasResult;
- (id)dataSource;
- (void)dealloc;
- (id)delegate;
- (void)deleteMessageItem:(id)arg1;
- (void)deleteTransferGUID:(id)arg1;
- (bool)dismissingSearchController;
- (void)findNext;
- (void)findPrevious;
- (id)footerBoundryItemsForController:(id)arg1 withEnvironment:(id)arg2;
- (id)globalLayoutConfiguration;
- (id)headerBoundryItemsForController:(id)arg1 withEnvironment:(id)arg2;
- (id)initWithSearchControllerClasses:(id)arg1;
- (bool)isInitialLoad;
- (id)layoutSectionForController:(id)arg1 withEnvironment:(id)arg2;
- (id)layoutSectionForSection:(long long)arg1 withEnvironment:(id)arg2;
- (unsigned long long)mode;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })parentMarginInsetsForSearchController:(id)arg1;
- (id /* block */)performAfterInitialLoadBlock;
- (void)reloadData;
- (long long)rowIndexFindNextForIndex:(long long)arg1 numberOfTotalItems:(long long)arg2;
- (long long)rowIndexFindPreviousForIndex:(long long)arg1 numberOfTotalItems:(long long)arg2;
- (id)scrollView;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (id)searchCompleteControllerSet;
- (id)searchController:(id)arg1 cellForResult:(id)arg2;
- (id)searchController:(id)arg1 conversationForChatGUID:(id)arg2;
- (void)searchController:(id)arg1 requestsItemDeletionAtIndexPath:(id)arg2;
- (void)searchController:(id)arg1 requestsPresentationOfAlertController:(id)arg2 atRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)searchController:(id)arg1 requestsPresentationOfShareController:(id)arg2 atRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)searchControllerContentsDidChange:(id)arg1;
- (id)searchControllers;
- (void)searchEnded;
- (bool)searchInProgress;
- (void)searchResultsTitleCellShowAllButtonTapped:(id)arg1;
- (id)searchText;
- (void)searchWithText:(id)arg1;
- (void)setCellLayout:(id)arg1;
- (void)setCollectionView:(id)arg1;
- (void)setCollectionViewLayout:(id)arg1;
- (void)setContextMenuInteraction:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDismissingSearchController:(bool)arg1;
- (void)setIsInitialLoad:(bool)arg1;
- (void)setMode:(unsigned long long)arg1;
- (void)setPerformAfterInitialLoadBlock:(id /* block */)arg1;
- (void)setSearchCompleteControllerSet:(id)arg1;
- (void)setSearchControllers:(id)arg1;
- (void)setSearchInProgress:(bool)arg1;
- (void)setTimingCollection:(id)arg1;
- (bool)shouldInsetResultsForSearchController:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)timingCollection;
- (void)updateSearchResultsForSearchController:(id)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (double)widthForDeterminingAvatarVisibility;

// Image: /System/Library/AccessibilityBundles/ChatKitFramework.axbundle/ChatKitFramework

+ (Class)safeCategoryBaseClass;

- (void)_accessibilityLoadAccessibilityInformation;
- (void)loadView;
- (void)setCollectionViewAXLabelForSearch:(id)arg1;
- (void)setSearchText:(id)arg1;

@end
