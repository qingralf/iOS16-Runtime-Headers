/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKTUConversationBalloonView : CKColoredBalloonView {
    bool  _animating;
    CKAvatarView * _avatarView;
    unsigned long long  _conversationAVMode;
    UIImageView * _iconView;
    UIImageView * _imageView;
    UIButton * _joinButton;
    NSString * _joinButtonText_TestingOverride;
    BOOL  _orientation;
    unsigned long long  _state;
    UILabel * _subtitleLabel1;
    UILabel * _subtitleLabel2;
    UILabel * _titleLabel;
    NSUUID * _tuConversationUUID;
    bool  _unknownSender;
}

@property (nonatomic) bool animating;
@property (nonatomic, retain) CKAvatarView *avatarView;
@property (nonatomic) unsigned long long conversationAVMode;
@property (nonatomic, retain) UIImageView *iconView;
@property (nonatomic, retain) UIImageView *imageView;
@property (nonatomic, retain) UIButton *joinButton;
@property (nonatomic, copy) NSString *joinButtonText_TestingOverride;
@property (nonatomic, readonly) bool shouldRenderJoinButtonAsIcon;
@property (nonatomic, readonly) bool shouldUseAXLayout;
@property (nonatomic) unsigned long long state;
@property (nonatomic, retain) UILabel *subtitleLabel1;
@property (nonatomic, retain) UILabel *subtitleLabel2;
@property (nonatomic, retain) UILabel *titleLabel;
@property (nonatomic, retain) NSUUID *tuConversationUUID;
@property (getter=isUnknownSender, nonatomic) bool unknownSender;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

+ (struct CGSize { double x1; double x2; })appIconSize;

- (void).cxx_destruct;
- (id)_currentCall;
- (void)_joinButtonTapped:(id)arg1;
- (id)_joinButtonText;
- (void)_multiWayCallStateChanged:(id)arg1;
- (bool)activeCallIsJoinable;
- (bool)animating;
- (id)avatarView;
- (void)chatParticipantsChanged:(id)arg1;
- (BOOL)color;
- (void)configureForCurrentState;
- (void)configureForTUConversationChatItem:(id)arg1;
- (void)configureIconView;
- (void)configureImageView;
- (void)configureJoinButton;
- (void)configureSubtitle1;
- (void)configureSubtitle2;
- (void)configureTitle;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (unsigned long long)conversationAVMode;
- (void)didHoverOverCell:(id)arg1;
- (void)formatIconViewForActivity;
- (void)formatIconViewForFaceTime;
- (void)formatImageViewForActivity;
- (void)formatImageViewForFaceTime;
- (id)iconView;
- (id)imageView;
- (struct CGSize { double x1; double x2; })imageViewSize;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isUnknownSender;
- (id)joinButton;
- (bool)joinButtonIsShowingImageContent;
- (bool)joinButtonIsShowingTextContent;
- (struct CGSize { double x1; double x2; })joinButtonRenderedAsIconSize;
- (id)joinButtonText_TestingOverride;
- (void)layoutSubviews;
- (BOOL)orientation;
- (void)prepareForDisplay;
- (void)prepareForReuse;
- (void)setAnimating:(bool)arg1;
- (void)setAvatarView:(id)arg1;
- (void)setConversationAVMode:(unsigned long long)arg1;
- (void)setIconView:(id)arg1;
- (void)setImageView:(id)arg1;
- (void)setJoinButton:(id)arg1;
- (void)setJoinButtonText_TestingOverride:(id)arg1;
- (void)setOrientation:(BOOL)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)setSubtitleLabel1:(id)arg1;
- (void)setSubtitleLabel2:(id)arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setTuConversationUUID:(id)arg1;
- (void)setUnknownSender:(bool)arg1;
- (bool)shouldRenderJoinButtonAsIcon;
- (bool)shouldUseAXLayout;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1 textAlignmentInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; }*)arg2;
- (unsigned long long)state;
- (double)stringWidthConstraint;
- (id)subtitleColor;
- (id)subtitleLabel1;
- (id)subtitleLabel2;
- (id)titleLabel;
- (id)tuConversation;
- (id)tuConversationUUID;
- (bool)wantsGradient;

// Image: /System/Library/AccessibilityBundles/ChatKitFramework.axbundle/ChatKitFramework

+ (Class)safeCategoryBaseClass;

- (id)_axConversationItem;
- (id)_axMessageTime;
- (unsigned long long)_axState;
- (bool)accessibilityActivate;
- (id)accessibilityCustomActions;
- (id)accessibilityHint;
- (id)accessibilityLabel;
- (unsigned long long)accessibilityTraits;
- (id)accessibilityValue;

@end
