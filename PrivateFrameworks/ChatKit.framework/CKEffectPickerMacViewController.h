/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKEffectPickerMacViewController : UIViewController <CKEffectPickerViewControllerProtocol, CKEffectPreviewCollectionViewControllerDelegate, CKEffectSelectionViewControllerDelegate> {
    UIView * _balloonContainer;
    CKBalloonView * _balloonView;
    struct CGPoint { 
        double x; 
        double y; 
    }  _balloonViewOrigin;
    UIButton * _closeButton;
    BOOL  _color;
    CKComposition * _composition;
    UIView * _contentView;
    <CKEffectPickerViewControllerDelegate> * _delegate;
    CKChatControllerDummyAnimator * _dummyAnimator;
    CKEffectPreviewCollectionViewController * _effectCollectionViewController;
    CKFullScreenEffectManager * _fsem;
    bool  _hasSelectedDefaultEffect;
    NSLayoutConstraint * _heightConstraint;
    CKEffectSelectionViewController * _selectionViewController;
    UIButton * _sendButton;
    bool  _showingInStandAloneWindow;
    UIVisualEffectView * _titleContainerView;
    UILabel * _titleLabel;
    UIVibrancyEffect * _titleVibrancyEffect;
}

@property (nonatomic, retain) UIView *balloonContainer;
@property (nonatomic, retain) CKBalloonView *balloonView;
@property (nonatomic) struct CGPoint { double x1; double x2; } balloonViewOrigin;
@property (nonatomic, retain) UIButton *closeButton;
@property (nonatomic) BOOL color;
@property (nonatomic, retain) CKComposition *composition;
@property (nonatomic, retain) UIView *contentView;
@property (nonatomic) <CKEffectPickerViewControllerDelegate> *delegate;
@property (nonatomic, retain) CKChatControllerDummyAnimator *dummyAnimator;
@property (nonatomic, retain) CKEffectPreviewCollectionViewController *effectCollectionViewController;
@property (nonatomic, retain) CKFullScreenEffectManager *fsem;
@property (nonatomic) bool hasSelectedDefaultEffect;
@property (nonatomic, retain) NSLayoutConstraint *heightConstraint;
@property (nonatomic, retain) CKEffectSelectionViewController *selectionViewController;
@property (nonatomic, retain) UIButton *sendButton;
@property (nonatomic) bool showingInStandAloneWindow;
@property (nonatomic, retain) UIVisualEffectView *titleContainerView;
@property (nonatomic, retain) UILabel *titleLabel;
@property (nonatomic, retain) UIVibrancyEffect *titleVibrancyEffect;

- (void).cxx_destruct;
- (id)_defaultSendAnimationContextForAnimationPreview;
- (id)balloonContainer;
- (id)balloonView;
- (struct CGPoint { double x1; double x2; })balloonViewOrigin;
- (id)closeButton;
- (void)closeButtonPressed:(id)arg1;
- (BOOL)color;
- (id)composition;
- (id)contentView;
- (id)delegate;
- (id)dummyAnimator;
- (id)effectCollectionViewController;
- (void)effectCollectionViewController:(id)arg1 willDisplayEffect:(id)arg2;
- (void)effectSelectionViewController:(id)arg1 didSelectEffectWithIdentifier:(id)arg2;
- (bool)effectShouldDisplayOverBalloon:(id)arg1;
- (id)fsem;
- (void)handleTouchMoved:(struct CGPoint { double x1; double x2; })arg1;
- (void)handleTouchUp:(struct CGPoint { double x1; double x2; })arg1;
- (bool)hasSelectedDefaultEffect;
- (id)heightConstraint;
- (id)initWithComposition:(id)arg1 balloonViewOrigin:(struct CGPoint { double x1; double x2; })arg2 color:(BOOL)arg3;
- (void)keyCommandReturn:(id)arg1;
- (id)keyCommands;
- (void)presentPicker;
- (id)selectionViewController;
- (id)sendButton;
- (void)setBalloonContainer:(id)arg1;
- (void)setBalloonView:(id)arg1;
- (void)setBalloonViewOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setCloseButton:(id)arg1;
- (void)setCloseButtonYPosition:(double)arg1;
- (void)setColor:(BOOL)arg1;
- (void)setComposition:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDummyAnimator:(id)arg1;
- (void)setEffectCollectionViewController:(id)arg1;
- (void)setFsem:(id)arg1;
- (void)setHasSelectedDefaultEffect:(bool)arg1;
- (void)setHeightConstraint:(id)arg1;
- (void)setSelectionViewController:(id)arg1;
- (void)setSendButton:(id)arg1;
- (void)setShowingInStandAloneWindow:(bool)arg1;
- (void)setTitleContainerView:(id)arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setTitleVibrancyEffect:(id)arg1;
- (bool)showingInStandAloneWindow;
- (void)startAnimationPreviewForIdentifier:(id)arg1;
- (id)titleContainerView;
- (id)titleLabel;
- (id)titleVibrancyEffect;
- (void)touchUpInsideSendButton:(id)arg1;
- (void)updateColor:(BOOL)arg1;
- (void)updateHintTransition:(double)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;

@end
