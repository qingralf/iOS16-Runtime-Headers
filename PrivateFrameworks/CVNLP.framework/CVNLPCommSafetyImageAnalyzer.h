/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CVNLP.framework/CVNLP
 */

@interface CVNLPCommSafetyImageAnalyzer : CVNLPModelBase {
    int  __espressoDeviceId;
    int  __espressoEngine;
    int  __espressoStorageType;
    NSDictionary * _acceptedOutputIndices;
    NSURL * _modelUrl;
    unsigned long long  _otgxMainIndex;
    NSNumber * _otgxMainThreshold;
    bool  _otgxRetrieveAllClasses;
    unsigned long long  data_dim;
    void * encoderCtx;
    struct { 
        void *plan; 
        int network_index; 
    }  encoderNet;
    void * encoderPlan;
    struct { 
        void *data; 
        void *reserved; 
        unsigned long long dim[4]; 
        unsigned long long stride[4]; 
        unsigned long long width; 
        unsigned long long height; 
        unsigned long long channels; 
        unsigned long long batch_number; 
        unsigned long long sequence_length; 
        unsigned long long stride_width; 
        unsigned long long stride_height; 
        unsigned long long stride_channels; 
        unsigned long long stride_batch_number; 
        unsigned long long stride_sequence_length; 
        int storage_type; 
    }  leafProbabilities;
}

@property (readonly) int _espressoDeviceId;
@property (readonly) int _espressoEngine;
@property (readonly) int _espressoStorageType;
@property (readonly) NSDictionary *acceptedOutputIndices;
@property (readonly) NSURL *modelUrl;
@property (readonly) unsigned long long otgxMainIndex;
@property (readonly) NSNumber *otgxMainThreshold;
@property (readonly) bool otgxRetrieveAllClasses;

+ (bool)_checkIfOnANEDevice;
+ (id)_createNameDecodingDict;
+ (id)_createNameEncodingDict;
+ (id)_decodeName:(id)arg1;
+ (id)_encodeName:(id)arg1;
+ (id)_nameFromRevParts:(id)arg1;
+ (id)_readOperatingThresholdsDataUsingModelURL:(id)arg1 error:(id*)arg2;
+ (id)getOperatingPointDataForClassName:(id)arg1 modelURL:(id)arg2 error:(id*)arg3;

- (void).cxx_destruct;
- (id)_computeOutputForPixelBuffer:(struct __CVBuffer { }*)arg1 error:(id*)arg2;
- (int)_espressoDeviceId;
- (int)_espressoEngine;
- (int)_espressoStorageType;
- (void)_extractThresholdForOTGXMain:(id)arg1;
- (id)_processNetworkOutput:(id)arg1;
- (id)acceptedOutputIndices;
- (id)classifyImage:(struct CGImage { }*)arg1 error:(id*)arg2;
- (id)classifyPixelBuffer:(struct __CVBuffer { }*)arg1 error:(id*)arg2;
- (id)computeOutputForImage:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg1 error:(id*)arg2;
- (void)dealloc;
- (id)generateClassificationScoresForImage:(struct CGImage { }*)arg1 error:(id*)arg2;
- (id)generateClassificationScoresForPixelBuffer:(struct __CVBuffer { }*)arg1 error:(id*)arg2;
- (id)initWithModelURL:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (bool)loadNetworkForURL:(id)arg1 espressoEngine:(int)arg2 storageType:(int)arg3 deviceId:(int)arg4;
- (id)modelUrl;
- (unsigned long long)otgxMainIndex;
- (id)otgxMainThreshold;
- (bool)otgxRetrieveAllClasses;

@end
