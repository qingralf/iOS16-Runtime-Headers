/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
 */

@interface VideosUI.RootSplitViewController : UISplitViewController <AMSUIMessageViewControllerDelegate, UIPopoverPresentationControllerDelegate, UISplitViewControllerDelegate, VUIRootSplitViewController, VUITVAppRootViewController> {
    void appContext;
    void controllerMap;
    void defaultSectionManager;
    void hasPostedViewControllerDidChangeNotificationOnLaunch;
    void lastSelectedIdentifier;
    void lastSelectedIdentifierInSectionMap;
    void libraryManager;
    void libraryOnly;
    void libraryTitle;
    void mode;
    void needsModeEvaluationOnDidAppear;
    void presentedTipViewController;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  previousIndexPath;
    void secondaryColumnHostingController;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  selectedIndexPath;
    void sideBarController;
    void sideBarOnlyItemIdentifiers;
    void sideBarSections;
    void splitTabBarController;
    void stagedLibraryBarItems;
    void stagedMode;
    void tabBarItems;
    void tipPlacementId;
    void tipPlacementSideBarItemIdentifier;
    void tipPlacementTabBarItemIndex;
    void tvTitle;
    void viewIsVisible;
}

@property (nonatomic, readonly) UINavigationController *currentNavigationController;
@property (nonatomic, readonly) UIViewController *currentViewController;

- (void).cxx_destruct;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (id)currentNavigationController;
- (id)currentViewController;
- (void)handleDeepLinkURL:(id)arg1 forBarItemIdentifier:(id)arg2;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(long long)arg1;
- (void)messageViewController:(id)arg1 didFailWithError:(id)arg2;
- (void)messageViewController:(id)arg1 didSelectActionWithDialogResult:(id)arg2;
- (void)messageViewController:(id)arg1 didUpdateSize:(struct CGSize { double x1; double x2; })arg2;
- (void)splitViewController:(id)arg1 willChangeToDisplayMode:(long long)arg2;
- (void)updateWithBarItems:(id)arg1 setSelectedIndexFromDefaults:(bool)arg2 appContext:(id)arg3;
- (void)viewDidAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end
