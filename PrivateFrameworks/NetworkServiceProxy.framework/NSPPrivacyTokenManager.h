/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
 */

@interface NSPPrivacyTokenManager : NSObject {
    NSArray * _accessTokenTypes;
    NSString * _accessTokenURL;
    Class  _authenticationClass;
    NSObject<OS_nw_resolver> * _tokenEndpointResolver;
    NSString * _tokenFetchURL;
    NSURLSession * _tokenFetchURLSession;
    unsigned long long  _totalActivatedTokenCount;
    unsigned long long  _totalRequestedTokenCount;
    unsigned long long  _totalUnactivatedTokenCount;
    NSString * _trueClientIPAddress;
}

+ (id)sharedTokenManager;

- (void).cxx_destruct;
- (void)copyTokenInfo:(id)arg1;
- (void)dealloc;
- (id)description;
- (void)fetchPrivacyTokensOnInterface:(id)arg1 tierType:(id)arg2 proxyURL:(id)arg3 tokenVendor:(id)arg4 tokenIssuancePublicKey:(id)arg5 tokenCount:(unsigned long long)arg6 accessToken:(id)arg7 retryAttempt:(unsigned long long)arg8 completionHandler:(id /* block */)arg9;
- (void)fetchPrivateAccessTokenForChallenge:(id)arg1 tokenKey:(id)arg2 originNameKey:(id)arg3 selectedOrigin:(id)arg4 auditToken:(id)arg5 bundleID:(id)arg6 allowTools:(bool)arg7 accessToken:(id)arg8 completionHandler:(id /* block */)arg9;
- (void)getTokenServerIPWithInterface:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)tokenFetchURL;
- (bool)updateTokenFetchURL:(id)arg1 accessTokenURL:(id)arg2 accessTokenTypes:(id)arg3 authenticationType:(int)arg4 ignoreInvalidCerts:(bool)arg5;

@end
