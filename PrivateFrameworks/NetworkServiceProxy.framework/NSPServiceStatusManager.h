/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
 */

@interface NSPServiceStatusManager : NSObject <NSCopying, NSSecureCoding> {
    NSObject<NSPServiceStatusManagerDelegate> * _delegate;
    long long  _diskVersion;
    unsigned long long  _effectiveTier;
    unsigned long long  _generation;
    unsigned long long  _lastOutageType;
    NSMutableArray * _networkStatusTimeline;
    PrivacyProxyServiceStatus * _serviceStatus;
    NSMutableArray * _serviceStatusTimeline;
    NSPUserNotification * _userNotification;
    unsigned long long  _userTier;
}

@property (readonly, retain) PrivacyProxyServiceStatus *serviceStatus;
@property (readonly, retain) NSMutableArray *serviceStatusTimeline;

+ (void)removeFromPreferences;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)clearNetworkStatusForType:(int)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)diagnostics;
- (void)encodeWithCoder:(id)arg1;
- (void)handleEffectiveUserTierChange:(unsigned long long)arg1;
- (id)initFromPreferencesWithUserTier:(unsigned long long)arg1 effectiveUserTier:(unsigned long long)arg2 delegate:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithUserTier:(unsigned long long)arg1 effectiveUserTier:(unsigned long long)arg2 delegate:(id)arg3;
- (bool)isNetworkOutage;
- (bool)isServiceActive;
- (bool)isServiceOutage;
- (void)publishDailyNetworkStatus;
- (void)publishDailyServiceStatus;
- (void)reportActiveOnCellularName:(id)arg1;
- (void)reportActiveOnInterfaceName:(id)arg1 displayName:(id)arg2 type:(int)arg3;
- (void)reportActiveOnWiFiName:(id)arg1;
- (void)reportBlockedOnCellularName:(id)arg1;
- (void)reportBlockedOnInterfaceName:(id)arg1 displayName:(id)arg2 type:(int)arg3;
- (void)reportBlockedOnWiFiName:(id)arg1;
- (void)reportDisabledOnCellularName:(id)arg1;
- (void)reportDisabledOnInterfaceName:(id)arg1 displayName:(id)arg2 type:(int)arg3;
- (void)reportDisabledOnWiFiName:(id)arg1;
- (void)reportFraudAlert;
- (void)reportServiceActive;
- (void)reportServiceDisabledShouldReport:(bool)arg1;
- (void)reportServiceOutageWithType:(unsigned long long)arg1 outageReasonStats:(id)arg2;
- (void)reportSubscriberUnsupportedRegion:(id)arg1;
- (void)reportSystemIncompatibility;
- (void)reportUnsupportedRegion:(id)arg1;
- (id)serviceStatus;
- (id)serviceStatusTimeline;

@end
