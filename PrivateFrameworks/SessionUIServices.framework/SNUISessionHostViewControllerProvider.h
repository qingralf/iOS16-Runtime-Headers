/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SessionUIServices.framework/SessionUIServices
 */

@interface SNUISessionHostViewControllerProvider : NSObject <SNUISessionHostViewControllerProviding> {
    bool  _isUserDismissalAllowedOnLockScreen;
    SNUISessionHostViewController * _platterHostViewController;
    BSColor * _platterTintColor;
    NSString * _sceneOwnerBundleIdentifier;
    NSString * _sessionIdentifier;
    long long  _state;
    SNUISessionSystemApertureSceneHandle * _systemApertureSceneHandle;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSArray *hostIgnoredTouchedRects;
@property (nonatomic, readonly) bool isUserDismissalAllowedOnLockScreen;
@property (nonatomic, readonly) SNUISessionHostViewController *platterHostViewController;
@property (nonatomic, readonly) BSColor *platterTintColor;
@property (nonatomic, readonly, copy) NSString *sceneOwnerBundleIdentifier;
@property (nonatomic, readonly, copy) NSString *sessionIdentifier;
@property (nonatomic) long long state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) SNUISessionSystemApertureSceneHandle *systemApertureSceneHandle;

- (void).cxx_destruct;
- (long long)_sessionState:(long long)arg1;
- (id)hostIgnoredTouchedRects;
- (id)initWithSessionHostViewControllerProviding:(id)arg1;
- (bool)isUserDismissalAllowedOnLockScreen;
- (id)platterHostViewController;
- (id)platterTintColor;
- (id)sceneOwnerBundleIdentifier;
- (id)sessionIdentifier;
- (void)setState:(long long)arg1;
- (long long)state;
- (id)systemApertureSceneHandle;

@end
