/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SessionUIServices.framework/SessionUIServices
 */

@interface SessionUIServices.SessionHostViewControllerProvider : NSObject <SessionUIServices.SessionHostViewControllerProviding> {
    void isUserDismissalAllowedOnLockScreen;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  sessionDescriptor;
    void sessionIdentifier;
    void sessionPlatterHostViewController;
    void sessionState;
    void sessionSystemApertureScene;
    void sessionTintColor;
}

@property (nonatomic, readonly) NSData *descriptorData;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, readonly) bool isUserDismissalAllowedOnLockScreen;
@property (nonatomic, readonly) BSColor *platterTintColor;
@property (nonatomic, readonly) NSArray *sessionHostTouchRestrictedRects;
@property (nonatomic, retain) _TtC17SessionUIServices32SessionPlatterHostViewController *sessionPlatterHostViewController;
@property (nonatomic) long long sessionState;
@property (nonatomic, retain) _TtC17SessionUIServices32SessionSystemApertureSceneHandle *sessionSystemApertureScene;

- (void).cxx_destruct;
- (void)dealloc;
- (id)descriptorData;
- (id)identifier;
- (id)init;
- (id)initWithSessionDescriptor:(id)arg1 sessionState:(long long)arg2 systemMetricsRequest:(id)arg3;
- (bool)isUserDismissalAllowedOnLockScreen;
- (id)platterTintColor;
- (id)sessionHostTouchRestrictedRects;
- (id)sessionPlatterHostViewController;
- (long long)sessionState;
- (id)sessionSystemApertureScene;
- (void)setSessionPlatterHostViewController:(id)arg1;
- (void)setSessionState:(long long)arg1;
- (void)setSessionSystemApertureScene:(id)arg1;

@end
