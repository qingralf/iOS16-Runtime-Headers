/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation
 */

@interface FLOWSchemaFLOWMediaPlayerContext : SISchemaInstrumentationMessage {
    NSArray * _activeSubscriptions;
    int  _appleMusicVoicePreviewOfferNotShown;
    int  _appleMusicVoiceUserSubscriptionState;
    struct { 
        unsigned int taskType : 1; 
        unsigned int mediaType : 1; 
        unsigned int isWholeHouseAudio : 1; 
        unsigned int isMusicSubscriber : 1; 
        unsigned int appleMusicVoiceUserSubscriptionState : 1; 
        unsigned int appleMusicVoicePreviewOfferNotShown : 1; 
        unsigned int isAppleMusicVoiceEligible : 1; 
    }  _has;
    bool  _hasMediaPlayerPlaybackContext;
    bool  _hasWholeHouseAudioDestinationContext;
    bool  _isAppleMusicVoiceEligible;
    bool  _isMusicSubscriber;
    bool  _isWholeHouseAudio;
    FLOWSchemaFLOWMediaPlayerPlaybackContext * _mediaPlayerPlaybackContext;
    int  _mediaType;
    int  _taskType;
    unsigned long long  _whichMediaplayertaskcontext;
    FLOWSchemaFLOWholeHouseAudioDestinationContext * _wholeHouseAudioDestinationContext;
}

@property (nonatomic, copy) NSArray *activeSubscriptions;
@property (nonatomic) int appleMusicVoicePreviewOfferNotShown;
@property (nonatomic) int appleMusicVoiceUserSubscriptionState;
@property (nonatomic) bool hasAppleMusicVoicePreviewOfferNotShown;
@property (nonatomic) bool hasAppleMusicVoiceUserSubscriptionState;
@property (nonatomic) bool hasIsAppleMusicVoiceEligible;
@property (nonatomic) bool hasIsMusicSubscriber;
@property (nonatomic) bool hasIsWholeHouseAudio;
@property (nonatomic) bool hasMediaPlayerPlaybackContext;
@property (nonatomic) bool hasMediaType;
@property (nonatomic) bool hasTaskType;
@property (nonatomic) bool hasWholeHouseAudioDestinationContext;
@property (nonatomic) bool isAppleMusicVoiceEligible;
@property (nonatomic) bool isMusicSubscriber;
@property (nonatomic) bool isWholeHouseAudio;
@property (nonatomic, readonly) NSData *jsonData;
@property (nonatomic, retain) FLOWSchemaFLOWMediaPlayerPlaybackContext *mediaPlayerPlaybackContext;
@property (nonatomic) int mediaType;
@property (nonatomic) int taskType;
@property (nonatomic, readonly) unsigned long long whichMediaplayertaskcontext;
@property (nonatomic, retain) FLOWSchemaFLOWholeHouseAudioDestinationContext *wholeHouseAudioDestinationContext;

- (void).cxx_destruct;
- (id)activeSubscriptions;
- (int)activeSubscriptionsAtIndex:(unsigned long long)arg1;
- (unsigned long long)activeSubscriptionsCount;
- (void)addActiveSubscriptions:(int)arg1;
- (int)appleMusicVoicePreviewOfferNotShown;
- (int)appleMusicVoiceUserSubscriptionState;
- (id)applySensitiveConditionsPolicy:(id)arg1;
- (void)clearActiveSubscriptions;
- (void)deleteActiveSubscriptions;
- (void)deleteAppleMusicVoicePreviewOfferNotShown;
- (void)deleteAppleMusicVoiceUserSubscriptionState;
- (void)deleteIsAppleMusicVoiceEligible;
- (void)deleteIsMusicSubscriber;
- (void)deleteIsWholeHouseAudio;
- (void)deleteMediaPlayerPlaybackContext;
- (void)deleteMediaType;
- (void)deleteTaskType;
- (void)deleteWholeHouseAudioDestinationContext;
- (id)dictionaryRepresentation;
- (bool)hasAppleMusicVoicePreviewOfferNotShown;
- (bool)hasAppleMusicVoiceUserSubscriptionState;
- (bool)hasIsAppleMusicVoiceEligible;
- (bool)hasIsMusicSubscriber;
- (bool)hasIsWholeHouseAudio;
- (bool)hasMediaPlayerPlaybackContext;
- (bool)hasMediaType;
- (bool)hasTaskType;
- (bool)hasWholeHouseAudioDestinationContext;
- (unsigned long long)hash;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (bool)isAppleMusicVoiceEligible;
- (bool)isEqual:(id)arg1;
- (bool)isMusicSubscriber;
- (bool)isWholeHouseAudio;
- (id)jsonData;
- (id)mediaPlayerPlaybackContext;
- (int)mediaType;
- (bool)readFrom:(id)arg1;
- (void)setActiveSubscriptions:(id)arg1;
- (void)setAppleMusicVoicePreviewOfferNotShown:(int)arg1;
- (void)setAppleMusicVoiceUserSubscriptionState:(int)arg1;
- (void)setHasAppleMusicVoicePreviewOfferNotShown:(bool)arg1;
- (void)setHasAppleMusicVoiceUserSubscriptionState:(bool)arg1;
- (void)setHasIsAppleMusicVoiceEligible:(bool)arg1;
- (void)setHasIsMusicSubscriber:(bool)arg1;
- (void)setHasIsWholeHouseAudio:(bool)arg1;
- (void)setHasMediaPlayerPlaybackContext:(bool)arg1;
- (void)setHasMediaType:(bool)arg1;
- (void)setHasTaskType:(bool)arg1;
- (void)setHasWholeHouseAudioDestinationContext:(bool)arg1;
- (void)setIsAppleMusicVoiceEligible:(bool)arg1;
- (void)setIsMusicSubscriber:(bool)arg1;
- (void)setIsWholeHouseAudio:(bool)arg1;
- (void)setMediaPlayerPlaybackContext:(id)arg1;
- (void)setMediaType:(int)arg1;
- (void)setTaskType:(int)arg1;
- (void)setWholeHouseAudioDestinationContext:(id)arg1;
- (id)suppressMessageUnderConditions;
- (int)taskType;
- (unsigned long long)whichMediaplayertaskcontext;
- (id)wholeHouseAudioDestinationContext;
- (void)writeTo:(id)arg1;

@end
