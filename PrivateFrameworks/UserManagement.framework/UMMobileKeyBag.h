/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement
 */

@interface UMMobileKeyBag : NSObject

+ (int)_foregroundUID;
+ (void)_handleAttributeAccessCFError:(id)arg1 outError:(id*)arg2;
+ (id)_mutablePersonaSpecBase;
+ (void)_setAttributes:(id)arg1 onUser:(id)arg2;
+ (void)_setPasscodeTypeOnUser:(id)arg1 withPasscodeData:(id)arg2;
+ (bool)_start:(bool)arg1 syncBubbleForUser:(id)arg2 outError:(id*)arg3;
+ (id)_uidDictForUser:(id)arg1;
+ (id)_userAttributesForUID:(unsigned int)arg1 outError:(id*)arg2;
+ (bool)adoptPersonaVoucherForAccoutID:(id)arg1 outError:(id*)arg2;
+ (id)allSyncBubbleUsers;
+ (id)allUsersWithFilter:(bool)arg1;
+ (bool)clearSyncBubblesWithOutError:(id*)arg1;
+ (id)currentPersona;
+ (id)currentSyncBubbleUser;
+ (id)currentUser;
+ (id)currentUserSwitchContext;
+ (void)currentUserSwitchContextHasBeenUsed;
+ (bool)dataMigrationSetup:(id)arg1 withPasscodeData:(id)arg2 outError:(id*)arg3;
+ (id)deleteUser:(id)arg1;
+ (id)dictionaryRepresentationOfTask:(id)arg1;
+ (bool)fetchAttributesForUser:(id)arg1 outError:(id*)arg2;
+ (int)foregroundUIDWithError:(id*)arg1;
+ (id)getFileHandleForData:(id)arg1;
+ (bool)inSyncBubble;
+ (void)initialize;
+ (bool)isInternalBuild;
+ (bool)isLoginSession;
+ (bool)isSharedIPad;
+ (unsigned int)lastLoggedInUID;
+ (id)lastLoggedInUser;
+ (id)loadUser:(id)arg1 withPasscodeData:(id)arg2;
+ (id)loadUserSession:(id)arg1 withPasscodeData:(id)arg2 outError:(id*)arg3;
+ (id)loginUser;
+ (unsigned long long)maxNumberOfUsers;
+ (double)passcodeBackOffIntervalForUser:(id)arg1;
+ (id)personaSpecForUser:(id)arg1;
+ (id)queuedSyncBubbleUsers;
+ (bool)retrieveReplacementVoucherFor:(unsigned int)arg1 withAccoutID:(id)arg2 generationSet:(bool)arg3 replacementPort:(unsigned int*)arg4 outError:(id*)arg5;
+ (bool)startSyncBubbleForUser:(id)arg1 outError:(id*)arg2;
+ (bool)stopSyncBubbleForUser:(id)arg1 outError:(id*)arg2;
+ (id)syncBubbleMachServiceNamesForUser:(id)arg1;
+ (id)taskFromDictionaryRepresentation:(id)arg1;
+ (void)updateLoginSessionType;
+ (id)userFromAttributes:(id)arg1;
+ (unsigned long long)userQuotaSize;
+ (unsigned long long)userType;
+ (bool)writeAttributesToDiskForUser:(id)arg1 outError:(id*)arg2;

- (id)getFileHandleForData:(id)arg1;

@end
