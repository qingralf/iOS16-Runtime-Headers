/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
 */

@interface VCMediaNegotiatorLocalConfiguration : NSObject <NSCopying> {
    bool  _SIPDisabled;
    bool  _allowRTCPFB;
    bool  _alwaysOnAudRedEnabled;
    bool  _alwaysOnAudioRedundancyEnabled;
    struct CGSize { 
        double width; 
        double height; 
    }  _aspectRatioLandscape;
    struct CGSize { 
        double width; 
        double height; 
    }  _aspectRatioPortrait;
    VCMediaNegotiatorAudioConfiguration * _audioConfiguration;
    NSMutableSet * _bandwidthConfigurations;
    NSString * _basebandCodec;
    unsigned int  _basebandCodecSampleRate;
    void * _callLogFile;
    NSSet * _captionsReceiverLanguages;
    NSSet * _captionsSenderLanguages;
    union tagNTP { 
        unsigned long long wide; 
        struct { 
            unsigned int frac; 
            unsigned int sec; 
        } time; 
    }  _creationTime;
    unsigned int  _customVideoHeight;
    unsigned int  _customVideoWidth;
    int  _deviceRole;
    bool  _duplicateImportantPktsEnabled;
    unsigned int  _faceTimeSwitches;
    bool  _fastMediaDuplicationEnabled;
    NSSet * _hdrModesSupported;
    bool  _highFecEnabled;
    bool  _iRATRtpEnabled;
    bool  _isCaller;
    unsigned char  _linkProbingCapabilityVersion;
    bool  _lowFpsVideoEnabled;
    bool  _ltrpEnabled;
    unsigned char  _mediaControlInfoFECFeedbackVersion;
    unsigned char  _mediaControlInfoVersion;
    struct CGSize { 
        double width; 
        double height; 
    }  _mismatchedLandscapeAspectRatio;
    NSSet * _momentsImageTypes;
    NSSet * _momentsVideoCodecs;
    NSMutableOrderedSet * _multiwayAudioStreams;
    NSMutableOrderedSet * _multiwayVideoStreams;
    bool  _oneToOneModeSupported;
    struct CGSize { 
        double width; 
        double height; 
    }  _orientationMismatchAspectRatioLandscape;
    NSSet * _pixelFormats;
    bool  _preWarmCellEnabled;
    int  _preferredAudioCodec;
    bool  _rampDownBWDropEnabled;
    VCVideoRuleCollections * _screenRuleCollections;
    unsigned int  _screenSSRC;
    struct CGSize { 
        double width; 
        double height; 
    }  _screenSize;
    bool  _secureMessagingRequired;
    NSMutableSet * _streamGroupConfigs;
    unsigned int  _tilesPerVideoFrame;
    NSDictionary * _videoFeatureStrings;
    VCVideoRuleCollections * _videoRuleCollections;
    unsigned int  _videoSSRC;
    bool  _vplrFecEnabled;
}

@property (nonatomic) bool SIPDisabled;
@property (nonatomic) bool allowRTCPFB;
@property (nonatomic) bool alwaysOnAudRedEnabled;
@property (nonatomic) bool alwaysOnAudioRedundancyEnabled;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } aspectRatioLandscape;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } aspectRatioPortrait;
@property (nonatomic, retain) VCMediaNegotiatorAudioConfiguration *audioConfiguration;
@property (nonatomic, retain) NSSet *bandwidthConfigurations;
@property (nonatomic, retain) NSString *basebandCodec;
@property (nonatomic) unsigned int basebandCodecSampleRate;
@property (nonatomic) void*callLogFile;
@property (nonatomic, retain) NSSet *captionsReceiverLanguages;
@property (nonatomic, retain) NSSet *captionsSenderLanguages;
@property (nonatomic) union tagNTP { unsigned long long x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; } creationTime;
@property (nonatomic) unsigned int customVideoHeight;
@property (nonatomic) unsigned int customVideoWidth;
@property (nonatomic) int deviceRole;
@property (nonatomic) bool duplicateImportantPktsEnabled;
@property (nonatomic) unsigned int faceTimeSwitches;
@property (nonatomic) bool fastMediaDuplicationEnabled;
@property (nonatomic, retain) NSSet *hdrModesSupported;
@property (nonatomic) bool highFecEnabled;
@property (nonatomic) bool iRATRtpEnabled;
@property (nonatomic) bool isCaller;
@property (nonatomic) unsigned char linkProbingCapabilityVersion;
@property (nonatomic) bool lowFpsVideoEnabled;
@property (nonatomic) bool ltrpEnabled;
@property (nonatomic) unsigned char mediaControlInfoFECFeedbackVersion;
@property (nonatomic) unsigned char mediaControlInfoVersion;
@property (nonatomic, retain) NSSet *momentsImageTypes;
@property (nonatomic, retain) NSSet *momentsVideoCodecs;
@property (nonatomic, retain) NSMutableOrderedSet *multiwayAudioStreams;
@property (nonatomic, retain) NSMutableOrderedSet *multiwayVideoStreams;
@property (nonatomic) bool oneToOneModeSupported;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } orientationMismatchAspectRatioLandscape;
@property (nonatomic, retain) NSSet *pixelFormats;
@property (nonatomic) bool preWarmCellEnabled;
@property (nonatomic) int preferredAudioCodec;
@property (nonatomic) bool rampDownBWDropEnabled;
@property (nonatomic, retain) VCVideoRuleCollections *screenRuleCollections;
@property (nonatomic) unsigned int screenSSRC;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } screenSize;
@property (nonatomic) bool secureMessagingRequired;
@property (nonatomic, readonly) NSSet *streamGroupConfigs;
@property (nonatomic) unsigned int tilesPerVideoFrame;
@property (nonatomic, retain) NSDictionary *videoFeatureStrings;
@property (nonatomic, retain) VCVideoRuleCollections *videoRuleCollections;
@property (nonatomic) unsigned int videoSSRC;
@property (nonatomic) bool vplrFecEnabled;

- (bool)SIPDisabled;
- (void)addBandwidthConfiguration:(id)arg1;
- (void)addMultiwayAudioStream:(id)arg1;
- (void)addMultiwayVideoStream:(id)arg1;
- (void)addStreamGroupConfig:(id)arg1;
- (bool)allowRTCPFB;
- (bool)alwaysOnAudRedEnabled;
- (bool)alwaysOnAudioRedundancyEnabled;
- (struct CGSize { double x1; double x2; })aspectRatioLandscape;
- (struct CGSize { double x1; double x2; })aspectRatioPortrait;
- (id)audioConfiguration;
- (id)bandwidthConfigurations;
- (id)basebandCodec;
- (unsigned int)basebandCodecSampleRate;
- (void*)callLogFile;
- (id)captionsReceiverLanguages;
- (id)captionsSenderLanguages;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (union tagNTP { unsigned long long x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })creationTime;
- (unsigned int)customVideoHeight;
- (unsigned int)customVideoWidth;
- (void)dealloc;
- (int)deviceRole;
- (bool)duplicateImportantPktsEnabled;
- (unsigned int)faceTimeSwitches;
- (bool)fastMediaDuplicationEnabled;
- (id)hdrModesSupported;
- (bool)highFecEnabled;
- (bool)iRATRtpEnabled;
- (id)init;
- (id)initWithBitrateArbiter:(id)arg1;
- (bool)isCaller;
- (bool)isEqual:(id)arg1;
- (bool)isEqualBandwidthConfigurations:(id)arg1;
- (bool)isEqualFaceTimeSettings:(id)arg1;
- (bool)isEqualFeatureStrings:(id)arg1;
- (bool)isEqualMomentsImageTypes:(id)arg1;
- (bool)isEqualMomentsVideoCodecs:(id)arg1;
- (bool)isEqualMultiwayAudioStreamSet:(id)arg1;
- (bool)isEqualMultiwayVideoStreamSet:(id)arg1;
- (bool)isEqualStreamGroupConfigs:(id)arg1;
- (unsigned char)linkProbingCapabilityVersion;
- (bool)lowFpsVideoEnabled;
- (bool)ltrpEnabled;
- (unsigned char)mediaControlInfoFECFeedbackVersion;
- (unsigned char)mediaControlInfoVersion;
- (id)momentsImageTypes;
- (id)momentsVideoCodecs;
- (id)multiwayAudioStreams;
- (id)multiwayVideoStreams;
- (bool)oneToOneModeSupported;
- (struct CGSize { double x1; double x2; })orientationMismatchAspectRatioLandscape;
- (id)pixelFormats;
- (bool)preWarmCellEnabled;
- (int)preferredAudioCodec;
- (bool)rampDownBWDropEnabled;
- (void)resetStreamGroups;
- (id)screenRuleCollections;
- (unsigned int)screenSSRC;
- (struct CGSize { double x1; double x2; })screenSize;
- (bool)secureMessagingRequired;
- (void)setAllowRTCPFB:(bool)arg1;
- (void)setAlwaysOnAudRedEnabled:(bool)arg1;
- (void)setAlwaysOnAudioRedundancyEnabled:(bool)arg1;
- (void)setAudioConfiguration:(id)arg1;
- (void)setBandwidthConfigurations:(id)arg1;
- (void)setBasebandCodec:(id)arg1;
- (void)setBasebandCodecSampleRate:(unsigned int)arg1;
- (void)setCallLogFile:(void*)arg1;
- (void)setCaptionsReceiverLanguages:(id)arg1;
- (void)setCaptionsSenderLanguages:(id)arg1;
- (void)setCreationTime:(union tagNTP { unsigned long long x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg1;
- (void)setCustomVideoHeight:(unsigned int)arg1;
- (void)setCustomVideoWidth:(unsigned int)arg1;
- (void)setDeviceRole:(int)arg1;
- (void)setDuplicateImportantPktsEnabled:(bool)arg1;
- (void)setFaceTimeSwitches:(unsigned int)arg1;
- (void)setFastMediaDuplicationEnabled:(bool)arg1;
- (void)setHdrModesSupported:(id)arg1;
- (void)setHighFecEnabled:(bool)arg1;
- (void)setIRATRtpEnabled:(bool)arg1;
- (void)setIsCaller:(bool)arg1;
- (void)setLinkProbingCapabilityVersion:(unsigned char)arg1;
- (void)setLowFpsVideoEnabled:(bool)arg1;
- (void)setLtrpEnabled:(bool)arg1;
- (void)setMediaControlInfoFECFeedbackVersion:(unsigned char)arg1;
- (void)setMediaControlInfoVersion:(unsigned char)arg1;
- (void)setMomentsImageTypes:(id)arg1;
- (void)setMomentsVideoCodecs:(id)arg1;
- (void)setMultiwayAudioStreams:(id)arg1;
- (void)setMultiwayVideoStreams:(id)arg1;
- (void)setOneToOneModeSupported:(bool)arg1;
- (void)setPixelFormats:(id)arg1;
- (void)setPreWarmCellEnabled:(bool)arg1;
- (void)setPreferredAudioCodec:(int)arg1;
- (void)setRampDownBWDropEnabled:(bool)arg1;
- (void)setSIPDisabled:(bool)arg1;
- (void)setScreenRuleCollections:(id)arg1;
- (void)setScreenSSRC:(unsigned int)arg1;
- (void)setSecureMessagingRequired:(bool)arg1;
- (void)setTilesPerVideoFrame:(unsigned int)arg1;
- (void)setVideoFeatureStrings:(id)arg1;
- (void)setVideoRuleCollections:(id)arg1;
- (void)setVideoSSRC:(unsigned int)arg1;
- (void)setVplrFecEnabled:(bool)arg1;
- (bool)setupBandwidthConfigurationsWithArbiter:(id)arg1;
- (bool)setupBandwidthExtensionConfiguration:(id)arg1;
- (id)streamGroupConfigs;
- (unsigned int)tilesPerVideoFrame;
- (id)videoFeatureStrings;
- (id)videoRuleCollections;
- (unsigned int)videoSSRC;
- (bool)vplrFecEnabled;

@end
