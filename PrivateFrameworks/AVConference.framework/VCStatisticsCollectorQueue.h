/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
 */

@interface VCStatisticsCollectorQueue : NSObject {
    int  _almostFullQueueSize;
    int  _firstMessageIndex;
    bool  _isThreadRunning;
    int  _maxQueueSize;
    id /* block */  _messageHandler;
    struct { 
        int type; 
        int priority; 
        double arrivalTime; 
        bool isVCRCInternal; 
        bool shouldFlushAndProcess; 
        bool shouldDrainAndProcess; 
        bool statisticsUpdateOnly; 
        union { 
            struct { 
                unsigned int queueDepth1; 
                unsigned int queueDepth2; 
                unsigned int txBitrate; 
                unsigned int averageBitrate; 
                unsigned int averageBitrateShort; 
                unsigned int averageBitrateLong; 
                double averageQueueDepth; 
                double expectedQueuingDelay; 
                double bdcd; 
                double normalizedBDCD; 
                double normalizedDelay; 
                BOOL bbString[64]; 
                int radioTechnology; 
            } baseband; 
            struct { 
                unsigned int sendTimestamp; 
                unsigned int queuingDelay; 
                unsigned int remoteBWEstimation; 
                unsigned int remoteBWEStability; 
                unsigned int maxVideoBurstyLoss; 
                unsigned int audioConsecutiveLoss; 
                unsigned int mostBurstyLoss; 
                unsigned int audioReceivedPackets; 
                unsigned int videoReceivedPackets; 
                unsigned int totalSentPackets; 
                unsigned int echoedSendTimestamp; 
                unsigned int mediaTimestamp; 
                double owrd; 
                double packetLossRate; 
                unsigned int actualBitrate; 
                unsigned int instantBitrate; 
                double roundTripTime; 
                unsigned int receiveQueueTarget; 
                bool isPacketReceivedValid; 
                struct { 
                    int packetType; 
                    unsigned int packetId; 
                    unsigned int sampleRate; 
                    unsigned int totalPacketsReceived; 
                    double receiveTimestamp; 
                    double owrd; 
                    double targetJitterQueueSize; 
                    unsigned int bandwidthEstimation; 
                    unsigned int localBurstyLoss; 
                } packetReceived; 
                struct { 
                    unsigned short sequenceNumber; 
                    bool isDuplicatePacket; 
                    bool isReceivedOnPrimary; 
                    unsigned int connectionStatsBuffer; 
                } connectionStats; 
            } feedback; 
            struct { 
                double packetLossPercentage; 
                double packetLossPercentageAudio; 
                double packetLossPercentageVideo; 
                unsigned int burstPacketLoss; 
                unsigned int roundTripTimeMilliseconds; 
                unsigned int isNetworkCongested; 
                unsigned int owrd; 
                unsigned int targetBitrate; 
                unsigned long long statisticsID; 
                unsigned int videoPacketsReceived; 
            } network; 
            struct { 
                unsigned int estimatorID; 
                bool deregisterEstimator; 
                bool isProbingSequence; 
                bool isEndOfProbingSequence; 
                unsigned int probingSequenceID; 
                unsigned int messageLength; 
                double arrivalTime; 
                unsigned int mediaTimestamp; 
                bool isPacketReceivedValid; 
                struct { 
                    int packetType; 
                    unsigned int packetId; 
                    unsigned int sampleRate; 
                    unsigned int totalPacketsReceived; 
                    double receiveTimestamp; 
                    double owrd; 
                    double targetJitterQueueSize; 
                    unsigned int bandwidthEstimation; 
                    unsigned int localBurstyLoss; 
                } packetReceived; 
            } probing; 
            struct { 
                unsigned char linkID; 
                unsigned int sendTimestamp; 
                unsigned int receiveTimestamp; 
                unsigned int totalPacketSent; 
                unsigned int totalPacketReceived; 
                unsigned int totalByteSent; 
                unsigned int totalByteReceived; 
                unsigned int serverStatsByteUsed; 
                unsigned int bandwidthSample; 
                unsigned int bandwidthEstimation; 
                double roundTripTime; 
                double owrd; 
                double packetLossRate; 
                double packetLossRateShortWindow; 
                unsigned int actualBitrate; 
                unsigned int instantBitrate; 
                unsigned int serverStatsBitrate; 
                unsigned int expectedBitrate; 
            } serverStats; 
            struct { 
                unsigned int packetId; 
                unsigned int totalPacketsSent; 
                unsigned int totalBytesSent; 
                double sendTimestamp; 
            } packetSent; 
            struct { 
                int packetType; 
                unsigned int packetId; 
                unsigned int sampleRate; 
                unsigned int totalPacketsReceived; 
                double receiveTimestamp; 
                double owrd; 
                double targetJitterQueueSize; 
                unsigned int bandwidthEstimation; 
                unsigned int localBurstyLoss; 
            } packetReceived; 
            struct { 
                unsigned int ssrc; 
                unsigned int packetLossPercentage; 
                unsigned int lastSequenceNumber; 
                unsigned int roundTripTimeMilliseconds; 
            } rtcpRR; 
            struct { 
                unsigned int mode; 
                unsigned int remoteRadioAccessTechnology; 
                unsigned int localRadioAccessTechnology; 
                unsigned int maxBitrate; 
                unsigned int minBitrate; 
                unsigned int initialBitrate; 
                bool isTrafficBursty; 
                unsigned int featureFlags; 
            } config; 
            struct { 
                unsigned int mediaEventType; 
                unsigned int additionalFlushCount; 
                unsigned int transactionID; 
                unsigned int audioStallBitrate; 
                float audioErasure; 
                bool isKeyFrame; 
                bool isTransitionToFEC; 
                double videoStallTimeDelta; 
                double videoStallTimeTotal; 
                unsigned int refreshFrameTimestamp; 
                unsigned int refreshFramePayloadType; 
                unsigned int refreshFramePacketCount; 
                unsigned long long idsParticipantID; 
            } mediaEvent; 
            struct { 
                unsigned char version; 
                unsigned char direction; 
                unsigned long long timestamp; 
                unsigned long long maxThroughputBps; 
                unsigned long long totalByteCount; 
                unsigned int flushableQueueSize; 
                unsigned int nonFlushableQueueSize; 
                unsigned int averageDelayMillisecond; 
                unsigned long long averageThroughputBps; 
                int rateTrendSuggestion; 
                unsigned int packetLossPerFrame; 
                unsigned char frequencyBand; 
                unsigned char intermittentState; 
                unsigned short estimatedIntermittentPeriod; 
                unsigned short singleOutagePeriod; 
                unsigned char btCoex; 
                unsigned char radioCoex; 
                unsigned char qualityScoreDelayRx; 
                unsigned char qualityScoreDelayTx; 
                unsigned char qualityScoreLossRx; 
                unsigned char qualityScoreLossTx; 
                unsigned char qualityScoreChannel; 
                float offChannelTimeRatio; 
                bool detectedFrequentOffChannelActivity; 
                unsigned short wlanDutyCycle; 
                unsigned int wifiObservedTxBitrate[6]; 
            } nwConnection; 
        } ; 
    }  _messageQueue;
    int  _nextMessageIndex;
    unsigned int  _queueFullCounter;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _queueMutex;
    struct _opaque_pthread_cond_t { 
        long long __sig; 
        BOOL __opaque[40]; 
    }  _queueNotEmptyCondition;
    struct _opaque_pthread_cond_t { 
        long long __sig; 
        BOOL __opaque[40]; 
    }  _queueNotFullCondition;
    unsigned int  _queueProcessWaitTimeMs;
    bool  _shouldBlockWhenFull;
    bool  _shouldProcessMessageImmediately;
    bool  _shouldProcessMessageOnExternalThread;
    struct OpaqueFigThread { } * _thread;
    struct _opaque_pthread_cond_t { 
        long long __sig; 
        BOOL __opaque[40]; 
    }  _waitCondition;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _waitMutex;
}

@property (readonly) bool isThreadRunning;
@property (copy) id /* block */ messageHandler;

- (bool)addStatisticsMessage:(struct { int x1; int x2; double x3; bool x4; bool x5; bool x6; bool x7; union { struct { unsigned int x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; unsigned int x_1_2_6; double x_1_2_7; double x_1_2_8; double x_1_2_9; double x_1_2_10; double x_1_2_11; BOOL x_1_2_12[64]; int x_1_2_13; } x_8_1_1; struct { unsigned int x_2_2_1; unsigned int x_2_2_2; unsigned int x_2_2_3; unsigned int x_2_2_4; unsigned int x_2_2_5; unsigned int x_2_2_6; unsigned int x_2_2_7; unsigned int x_2_2_8; unsigned int x_2_2_9; unsigned int x_2_2_10; unsigned int x_2_2_11; unsigned int x_2_2_12; double x_2_2_13; double x_2_2_14; unsigned int x_2_2_15; unsigned int x_2_2_16; double x_2_2_17; unsigned int x_2_2_18; bool x_2_2_19; struct { int x_20_3_1; unsigned int x_20_3_2; unsigned int x_20_3_3; unsigned int x_20_3_4; double x_20_3_5; double x_20_3_6; double x_20_3_7; unsigned int x_20_3_8; unsigned int x_20_3_9; } x_2_2_20; struct { unsigned short x_21_3_1; bool x_21_3_2; bool x_21_3_3; unsigned int x_21_3_4; } x_2_2_21; } x_8_1_2; struct { double x_3_2_1; double x_3_2_2; double x_3_2_3; unsigned int x_3_2_4; unsigned int x_3_2_5; unsigned int x_3_2_6; unsigned int x_3_2_7; unsigned int x_3_2_8; unsigned long long x_3_2_9; unsigned int x_3_2_10; } x_8_1_3; } x8; })arg1;
- (void)cancelWait;
- (void)dealloc;
- (bool)dequeue:(struct { int x1; int x2; double x3; bool x4; bool x5; bool x6; bool x7; union { struct { unsigned int x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; unsigned int x_1_2_6; double x_1_2_7; double x_1_2_8; double x_1_2_9; double x_1_2_10; double x_1_2_11; BOOL x_1_2_12[64]; int x_1_2_13; } x_8_1_1; struct { unsigned int x_2_2_1; unsigned int x_2_2_2; unsigned int x_2_2_3; unsigned int x_2_2_4; unsigned int x_2_2_5; unsigned int x_2_2_6; unsigned int x_2_2_7; unsigned int x_2_2_8; unsigned int x_2_2_9; unsigned int x_2_2_10; unsigned int x_2_2_11; unsigned int x_2_2_12; double x_2_2_13; double x_2_2_14; unsigned int x_2_2_15; unsigned int x_2_2_16; double x_2_2_17; unsigned int x_2_2_18; bool x_2_2_19; struct { int x_20_3_1; unsigned int x_20_3_2; unsigned int x_20_3_3; unsigned int x_20_3_4; double x_20_3_5; double x_20_3_6; double x_20_3_7; unsigned int x_20_3_8; unsigned int x_20_3_9; } x_2_2_20; struct { unsigned short x_21_3_1; bool x_21_3_2; bool x_21_3_3; unsigned int x_21_3_4; } x_2_2_21; } x_8_1_2; struct { double x_3_2_1; double x_3_2_2; double x_3_2_3; unsigned int x_3_2_4; unsigned int x_3_2_5; unsigned int x_3_2_6; unsigned int x_3_2_7; unsigned int x_3_2_8; unsigned long long x_3_2_9; unsigned int x_3_2_10; } x_8_1_3; } x8; }*)arg1;
- (void)drainAndProcessAllStatistics;
- (bool)enqueue:(struct { int x1; int x2; double x3; bool x4; bool x5; bool x6; bool x7; union { struct { unsigned int x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; unsigned int x_1_2_6; double x_1_2_7; double x_1_2_8; double x_1_2_9; double x_1_2_10; double x_1_2_11; BOOL x_1_2_12[64]; int x_1_2_13; } x_8_1_1; struct { unsigned int x_2_2_1; unsigned int x_2_2_2; unsigned int x_2_2_3; unsigned int x_2_2_4; unsigned int x_2_2_5; unsigned int x_2_2_6; unsigned int x_2_2_7; unsigned int x_2_2_8; unsigned int x_2_2_9; unsigned int x_2_2_10; unsigned int x_2_2_11; unsigned int x_2_2_12; double x_2_2_13; double x_2_2_14; unsigned int x_2_2_15; unsigned int x_2_2_16; double x_2_2_17; unsigned int x_2_2_18; bool x_2_2_19; struct { int x_20_3_1; unsigned int x_20_3_2; unsigned int x_20_3_3; unsigned int x_20_3_4; double x_20_3_5; double x_20_3_6; double x_20_3_7; unsigned int x_20_3_8; unsigned int x_20_3_9; } x_2_2_20; struct { unsigned short x_21_3_1; bool x_21_3_2; bool x_21_3_3; unsigned int x_21_3_4; } x_2_2_21; } x_8_1_2; struct { double x_3_2_1; double x_3_2_2; double x_3_2_3; unsigned int x_3_2_4; unsigned int x_3_2_5; unsigned int x_3_2_6; unsigned int x_3_2_7; unsigned int x_3_2_8; unsigned long long x_3_2_9; unsigned int x_3_2_10; } x_8_1_3; } x8; })arg1;
- (void)flushAllNonHighPriorityStatistics;
- (void)flushAllStatistics;
- (id)initWithQueueSize:(int)arg1 shouldBlockWhenFull:(bool)arg2 queueWaitTimeMs:(unsigned int)arg3 useExternalThread:(bool)arg4;
- (bool)isQueueFull;
- (bool)isThreadRunning;
- (id /* block */)messageHandler;
- (void)processMessage:(struct { int x1; int x2; double x3; bool x4; bool x5; bool x6; bool x7; union { struct { unsigned int x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; unsigned int x_1_2_6; double x_1_2_7; double x_1_2_8; double x_1_2_9; double x_1_2_10; double x_1_2_11; BOOL x_1_2_12[64]; int x_1_2_13; } x_8_1_1; struct { unsigned int x_2_2_1; unsigned int x_2_2_2; unsigned int x_2_2_3; unsigned int x_2_2_4; unsigned int x_2_2_5; unsigned int x_2_2_6; unsigned int x_2_2_7; unsigned int x_2_2_8; unsigned int x_2_2_9; unsigned int x_2_2_10; unsigned int x_2_2_11; unsigned int x_2_2_12; double x_2_2_13; double x_2_2_14; unsigned int x_2_2_15; unsigned int x_2_2_16; double x_2_2_17; unsigned int x_2_2_18; bool x_2_2_19; struct { int x_20_3_1; unsigned int x_20_3_2; unsigned int x_20_3_3; unsigned int x_20_3_4; double x_20_3_5; double x_20_3_6; double x_20_3_7; unsigned int x_20_3_8; unsigned int x_20_3_9; } x_2_2_20; struct { unsigned short x_21_3_1; bool x_21_3_2; bool x_21_3_3; unsigned int x_21_3_4; } x_2_2_21; } x_8_1_2; struct { double x_3_2_1; double x_3_2_2; double x_3_2_3; unsigned int x_3_2_4; unsigned int x_3_2_5; unsigned int x_3_2_6; unsigned int x_3_2_7; unsigned int x_3_2_8; unsigned long long x_3_2_9; unsigned int x_3_2_10; } x_8_1_3; } x8; })arg1;
- (int)queueSize;
- (void)setMessageHandler:(id /* block */)arg1;
- (bool)shouldFlushOldMessagesWithCurrentMessagePriority:(int)arg1 didFlushQueue:(bool*)arg2;
- (void)start;
- (void)stop;
- (void)stopThread;
- (void)waitBeforeProcessingQueue;

@end
