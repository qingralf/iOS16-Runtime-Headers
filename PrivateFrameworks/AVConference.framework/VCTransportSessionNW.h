/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
 */

@interface VCTransportSessionNW : VCTransportSession {
    bool  _didScheduleReceive;
    void * _handlerContext;
    NSObject<OS_dispatch_queue> * _handlerQueue;
    bool  _isIPv6;
    bool  _isSharedConnection;
    struct tagVCNWConnectionMonitor { } * _monitor;
    int  _networkInterfaceType;
    unsigned int  _networkMTU;
    int (* _notificationHandler;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _nwMonitorLock;
    int (* _packetEventHandler;
    NSObject<OS_nw_connection> * _rtcpConnection;
    NSString * _rtcpConnectionID;
    NSObject<OS_nw_connection> * _rtpConnection;
    NSString * _rtpConnectionID;
}

- (void)createNWConnection:(id*)arg1 forConnectionID:(id)arg2;
- (void)createNWMonitor;
- (int)createVFD:(int*)arg1 forStreamType:(unsigned int)arg2;
- (void)dealloc;
- (void)destroyNWMonitor;
- (int)dupRTCPNWConnectionBackingSocket;
- (int)dupRTPNWConnectionBackingSocket;
- (int)dupRTPNWConnectionBackingSocketForNWConnection:(id)arg1;
- (void)handleStateChanges:(int)arg1 error:(id)arg2 semaphore:(id)arg3 operationResult:(bool*)arg4;
- (id)initWithRTPNWConnectionID:(id)arg1 RTCPNWConnectionID:(id)arg2 handlerQueue:(id)arg3 context:(void*)arg4 notificationHandler:(int (*)arg5 eventHandler:(int (*)arg6;
- (void)initializeInterfaceType;
- (bool)initializeIsIPv6;
- (bool)initializeNetworkMTU;
- (bool)isIPv6;
- (int)networkInterfaceType;
- (unsigned int)networkMTU;
- (bool)setStateChangeHandlerForConnection:(id)arg1 result:(bool*)arg2 semaphore:(id)arg3;
- (bool)setupNWConnection:(id)arg1;
- (void)start;
- (void)stop;

@end
