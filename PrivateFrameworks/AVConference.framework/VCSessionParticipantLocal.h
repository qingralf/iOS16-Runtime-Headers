/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
 */

@interface VCSessionParticipantLocal : VCSessionParticipant <VCIDSStreamIDGenerator, VCMomentTransportDelegate, VCSessionParticipantLocalVideoStreamDelegate, VCVideoCaptureClient, VCVideoSink> {
    NSMutableSet * _audioPayloadTypes;
    unsigned char  _audioPriorityDecayFast;
    unsigned char  _audioPriorityDecaySlow;
    unsigned char  _audioPriorityRampUp;
    float  _audioSilencePowerAverageMultiplier;
    struct _opaque_pthread_rwlock_t { 
        long long __sig; 
        BOOL __opaque[192]; 
    }  _audioTimestampRWLock;
    float  _audioVoiceDetectionSensitivity;
    float  _averageSilenceAudioPower;
    unsigned short  _connectionStatsStreamID;
    unsigned int  _currentUplinkTargetBitrate;
    int  _currentVideoCaptureFrameRate;
    bool  _enableRedundancy;
    bool  _enableVADFiltering;
    bool  _encryptionInfoReceived;
    double  _fecRatio;
    bool  _forceMinBitrate;
    bool  _forcedAudioPriorityEnabled;
    double  _forcedAudioPriorityLastUpdateTime;
    unsigned char  _forcedAudioPriorityValue;
    NSMutableSet * _generatedSSRCs;
    NSMutableSet * _generatedStreamIDs;
    double  _initTime;
    bool  _isMixingSystemAudio;
    bool  _isRemoteOnPeace;
    bool  _isVCMediaQueueScheduled;
    unsigned char  _lastAudioPriority;
    double  _lastSentAudioHostTime;
    unsigned int  _lastSentAudioSampleTime;
    unsigned char  _lastVideoPriority;
    NSMutableSet * _localPublishedStreams;
    int  _maxSupportedMultiwayCameraFrameRate;
    long long  _maxSupportedMultiwayVideoResolution;
    unsigned int  _minBitrate;
    VCMoments * _moments;
    struct _VCSessionParticipantLocalOneToOneSettings { 
        VCRedundancyControllerAudio *audioRedundancyController; 
        VCRedundancyControllerVideo *videoRedundancyController; 
        VCSessionParticipantMediaStreamInfo *audioStreamInfo; 
        VCSessionParticipantMediaStreamInfo *videoStreamInfo; 
        VCSessionParticipantMediaStreamInfo *screenStreamInfo; 
        VCSwitchManager *switchManager; 
        unsigned int targetBitrate; 
        unsigned int rateChangeCounter; 
        bool endToEndConnectionReceived; 
    }  _oneToOneSettings;
    NSArray * _peerSubscribedStreams;
    VCAudioPowerSpectrumSource * _powerSpectrumSource;
    unsigned char  _presentationState;
    bool  _shouldResize;
    double  _spatialAudioDisabledLastUpdateTime;
    bool  _speechDetected;
    NSMutableDictionary * _streamInputIDToCaptureSourceIDMap;
    VCSystemAudioCaptureSession * _systemAudioCaptureSession;
    VCSessionUplinkBandwidthAllocator * _uplinkBandwidthAllocator;
    unsigned int  _uplinkBitrateCapCell;
    unsigned int  _uplinkBitrateCapWifi;
    int  _videoCaptureSource;
    NSMutableSet * _videoPayloadTypes;
    _Atomic unsigned char  _videoPriority;
    bool  _videoPriorityEnabled;
    VCVideoRule * _videoRule;
    struct opaqueVCVoiceDetector { } * _voiceDetector;
}

@property (nonatomic, readonly) struct __CFString { }*activeStreamKeys;
@property (nonatomic, readonly) NSSet *audioPayloadTypes;
@property (nonatomic, readonly) unsigned short connectionStatsStreamID;
@property (nonatomic, readonly) unsigned int currentUplinkTotalBitrate;
@property (nonatomic) int currentVideoCaptureFrameRate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool enableVADFiltering;
@property (nonatomic) bool encryptionInfoReceived;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isRemoteOnPeace;
@property (nonatomic, readonly) VCMoments *moments;
@property (nonatomic, readonly) struct _VCSessionParticipantLocalOneToOneSettings { id x1; id x2; id x3; id x4; id x5; id x6; unsigned int x7; unsigned int x8; bool x9; } oneToOneSettings;
@property (nonatomic, copy) NSArray *peerSubscribedStreams;
@property (readonly) Class superclass;
@property (nonatomic) unsigned int uplinkBitrateCapCell;
@property (nonatomic) unsigned int uplinkBitrateCapWifi;
@property (nonatomic, readonly) NSSet *videoPayloadTypes;

+ (bool)negotiatorCipherSuite:(unsigned int*)arg1 fromMediaStreamConfig:(id)arg2;

- (struct __CFString { }*)activeStreamKeys;
- (void)addCallInfoBlobToParticipantInfo:(id)arg1;
- (bool)applyCachedMediaStreams:(id)arg1 toMultiwayConfig:(id)arg2;
- (bool)applyCachedMediaStreamsWithStreamConfigurations:(id)arg1 mediaNegotiatorConfig:(id)arg2;
- (bool)applyCachedStreamGroupMediaStreams:(id)arg1 toMultiwayConfig:(id)arg2;
- (void)applyOneToOneAudioRedundancyPercentage:(unsigned int)arg1;
- (void)applyOneToOneVideoRedundancyPercentage:(unsigned int)arg1;
- (void)applyScreenEnabledSetting:(bool)arg1;
- (id)applyVideoEnabledSetting:(bool)arg1;
- (id)audioPayloadTypes;
- (id)audioRuleCollectionWithAudioStreamConfig:(id)arg1;
- (void)avConferencePreviewError:(id)arg1;
- (unsigned int)calculateUplinkTotalBitrateForMediaStreams:(id)arg1;
- (void)cameraAvailabilityDidChange:(bool)arg1;
- (struct CGSize { double x1; double x2; })captureEncodingSize;
- (void)captureSourceCenterStageEnabledDidChange:(bool)arg1;
- (int)captureSourceIDFromStreamGroupConfig:(id)arg1;
- (void)captureSourcePortraitBlurEnabledDidChange:(bool)arg1;
- (void)captureSourcePositionDidChange:(bool)arg1;
- (bool)checkSubscribedStreamsConsistency:(id)arg1;
- (void)cleanUpOneToOneStreams;
- (void)cleanupStreamInputs;
- (id)clientCaptureRule;
- (void)collectAudioChannelMetrics:(struct { unsigned int x1; unsigned int x2[5]; unsigned int x3; double x4; struct CGSize { double x_5_1_1; double x_5_1_2; } x5; double x6; unsigned int x7; double x8; unsigned int x9; unsigned int x10; }*)arg1;
- (void)collectVideoChannelMetrics:(struct { unsigned int x1; unsigned int x2[5]; unsigned int x3; double x4; struct CGSize { double x_5_1_1; double x_5_1_2; } x5; double x6; unsigned int x7; double x8; unsigned int x9; unsigned int x10; }*)arg1;
- (bool)completeStreamSetup:(id)arg1;
- (bool)configureAudioIOWithDeviceRole:(int)arg1 operatingMode:(int)arg2;
- (bool)configureWithOneToOneParticipantConfig:(id)arg1 shouldConfigureGFTStreams:(bool)arg2;
- (unsigned short)connectionStatsStreamID;
- (bool)containsStreamWithSSRC:(unsigned int)arg1;
- (void)createOpaqueData;
- (bool)createParticipantInfo;
- (unsigned int)currentUplinkTotalBitrate;
- (int)currentVideoCaptureFrameRate;
- (void)dealloc;
- (void)deregisterForVideoCapture;
- (void)didReceiveCustomReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned int x_1_1_1 : 5; unsigned int x_1_1_2 : 1; unsigned int x_1_1_3 : 2; unsigned int x_1_1_4 : 8; unsigned short x_1_1_5; } x1; union { struct tagSR_RTCP { unsigned int x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; unsigned int x_1_2_6; struct tagRTCP_RRB { unsigned int x_7_3_1; unsigned int x_7_3_2 : 8; unsigned int x_7_3_3 : 24; unsigned int x_7_3_4; unsigned int x_7_3_5; unsigned int x_7_3_6; unsigned int x_7_3_7; } x_1_2_7[1]; } x_2_1_1; struct tagRR_RTCP { unsigned int x_2_2_1; struct tagRTCP_RRB { unsigned int x_2_3_1; unsigned int x_2_3_2 : 8; unsigned int x_2_3_3 : 24; unsigned int x_2_3_4; unsigned int x_2_3_5; unsigned int x_2_3_6; unsigned int x_2_3_7; } x_2_2_2[1]; } x_2_1_2; struct tagSDES_RTCP { unsigned int x_3_2_1; struct tagRTCPSDES { unsigned char x_2_3_1; unsigned char x_2_3_2; BOOL x_2_3_3[258]; } x_3_2_2; } x_2_1_3; struct tagBYE_RTCP { unsigned int x_4_2_1; } x_2_1_4; struct tagRTCP_APP { unsigned int x_5_2_1; unsigned int x_5_2_2; } x_2_1_5; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x_1_3_1; unsigned int x_1_3_2; } x_6_2_1; unsigned int x_6_2_2; } x_2_1_6; } x2; }*)arg1 arrivalNTPTime:(union tagNTP { unsigned long long x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg2;
- (void)didReceiveReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned int x_1_1_1 : 5; unsigned int x_1_1_2 : 1; unsigned int x_1_1_3 : 2; unsigned int x_1_1_4 : 8; unsigned short x_1_1_5; } x1; union { struct tagSR_RTCP { unsigned int x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; unsigned int x_1_2_6; struct tagRTCP_RRB { unsigned int x_7_3_1; unsigned int x_7_3_2 : 8; unsigned int x_7_3_3 : 24; unsigned int x_7_3_4; unsigned int x_7_3_5; unsigned int x_7_3_6; unsigned int x_7_3_7; } x_1_2_7[1]; } x_2_1_1; struct tagRR_RTCP { unsigned int x_2_2_1; struct tagRTCP_RRB { unsigned int x_2_3_1; unsigned int x_2_3_2 : 8; unsigned int x_2_3_3 : 24; unsigned int x_2_3_4; unsigned int x_2_3_5; unsigned int x_2_3_6; unsigned int x_2_3_7; } x_2_2_2[1]; } x_2_1_2; struct tagSDES_RTCP { unsigned int x_3_2_1; struct tagRTCPSDES { unsigned char x_2_3_1; unsigned char x_2_3_2; BOOL x_2_3_3[258]; } x_3_2_2; } x_2_1_3; struct tagBYE_RTCP { unsigned int x_4_2_1; } x_2_1_4; struct tagRTCP_APP { unsigned int x_5_2_1; unsigned int x_5_2_2; } x_2_1_5; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x_1_3_1; unsigned int x_1_3_2; } x_6_2_1; unsigned int x_6_2_2; } x_2_1_6; } x2; }*)arg1 arrivalNTPTime:(union tagNTP { unsigned long long x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg2;
- (void)didServerDie;
- (void)dispatchedHandleActiveConnectionChangeForMultiway:(id)arg1;
- (void)dispatchedHandleActiveConnectionChangeForOneToOneMode:(id)arg1;
- (void)dispatchedUpdateOneToOneMediaStreamsWithTargetBitrate:(unsigned int)arg1 rateChangeCounter:(unsigned int)arg2;
- (void)dispatchedUpdateUplinkTargetBitrateForStreamGroups;
- (void)effectsDidApply:(bool)arg1;
- (bool)enableRedundancy:(bool)arg1;
- (bool)enableVADFiltering;
- (bool)encryptionInfoReceived;
- (id)featureListString:(id)arg1 removingPayload:(int)arg2 andPayload:(int)arg3;
- (void)frameRateIsBeingThrottled:(int)arg1 thermalLevelDidChange:(bool)arg2 powerLevelDidChange:(bool)arg3;
- (unsigned short)generateIDSStreamID;
- (void)generateKeyFrameWithStreamID:(id)arg1 firType:(int)arg2;
- (unsigned int)generateSSRC;
- (struct tagVCNetworkStreamIdentifiers { unsigned int x1; unsigned short x2; unsigned short x3; })generateSSRC:(bool)arg1 streamID:(bool)arg2 repairStreamID:(bool)arg3;
- (id)getAudioDumpName;
- (struct opaqueCMFormatDescription { }*)getAudioFormatDescriptionForStreamGroupID:(unsigned int)arg1;
- (struct opaqueCMFormatDescription { }*)getCaptionsFormatDescription;
- (void)handleActiveConnectionChange:(id)arg1;
- (id)initWithConfig:(id)arg1 delegate:(id)arg2;
- (bool)initializeMediaNegotiator;
- (void)initializeMultiwayAudioStreamGroup:(id)arg1 forLocalConfig:(id)arg2;
- (void)initializeMultiwayVideoStreamGroup:(id)arg1 forLocalConfig:(id)arg2;
- (bool)initializeStreamGroupsForLocalConfig:(id)arg1;
- (bool)isActiveMediaType:(unsigned int)arg1;
- (bool)isHighPriorityAudioWithPower:(float)arg1 voiceActive:(bool)arg2;
- (bool)isOneToOneModeEnabled;
- (bool)isRemoteOnPeace;
- (bool)isStreamGroupActive:(id)arg1;
- (void)logRemoteParticipantInfo:(id)arg1;
- (int)maxCaptureCameraFrameRate;
- (long long)maxCaptureResolution;
- (unsigned int)mediaStateForMediaType:(unsigned int)arg1;
- (id)moments;
- (void)moments:(id)arg1 shouldProcessRequest:(id)arg2 recipientID:(id)arg3;
- (id)multiwayAudioStreamNegotiatorConfigForStreamConfig:(id)arg1;
- (id)multiwayVideoStreamConfigs;
- (id)multiwayVideoStreamNegotiatorConfigForStreamConfig:(id)arg1 isSubstream:(bool)arg2;
- (int)negotiateOneToOne:(id)arg1;
- (id)newAudioSendGroupConfigWithStreamGroupID:(unsigned int)arg1 streamGroupConfiguration:(id)arg2;
- (id)newAudioStreamOneToOneConfiguration;
- (id)newAudioStreamSendGroupWithConfig:(id)arg1 streamGroupID:(unsigned int)arg2;
- (id)newMediaNegotiatorAudioConfiguration;
- (id)newScreenStreamOneToOneConfiguration;
- (id)newStreamGroupNegotiationConfigForStreamGroup:(id)arg1;
- (id)newStreamInfoWithAudioStreamWithConfiguration:(id)arg1 idsDestination:(id)arg2 isStreamGroup:(bool)arg3 streamGroupID:(unsigned int)arg4;
- (id)newStreamInfoWithAudioStreamWithConfiguration:(id)arg1 streamToken:(long long)arg2 isStreamGroup:(bool)arg3 streamGroupID:(unsigned int)arg4;
- (id)newStreamInfoWithVideoStreamWithConfiguration:(id)arg1 idsDestination:(id)arg2 groupID:(unsigned int)arg3;
- (id)newStreamInfoWithVideoStreamWithConfiguration:(id)arg1 streamGroupID:(unsigned int)arg2;
- (id)newVideoSendGroupConfigWithStreamGroupID:(unsigned int)arg1 streamGroupConfiguration:(id)arg2;
- (id)newVideoStreamOneToOneConfiguration;
- (id)newVideoStreamWithConfig:(id)arg1 groupID:(unsigned int)arg2;
- (bool)onVideoFrame:(struct opaqueCMSampleBuffer { }*)arg1 frameTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 attribute:(struct { bool x1; bool x2; int x3; bool x4; bool x5; int x6; unsigned char x7; })arg3;
- (struct _VCSessionParticipantLocalOneToOneSettings { id x1; id x2; id x3; id x4; id x5; id x6; unsigned int x7; unsigned int x8; bool x9; })oneToOneSettings;
- (id)peerSubscribedStreams;
- (id)processCachedParticipantData:(id)arg1;
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList { }*)arg1;
- (bool)reconfigureOneToOneAudioStream:(id)arg1 error:(id*)arg2;
- (void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2;
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;
- (void)redundancyController:(id)arg1 redundancyVectorDidChange:(struct { unsigned short x1; struct { unsigned char x_2_1_1; unsigned char x_2_1_2; } x2[32]; })arg2;
- (void)registerForVideoCapture:(int)arg1;
- (void)remoteScreenAttributesDidChange:(id)arg1;
- (void)resetOneToOneSettings;
- (void)resumeStreamsOnOneToOneModeSwitch;
- (void)setCellularUniqueTag:(unsigned int)arg1;
- (void)setCurrentVideoCaptureFrameRate:(int)arg1;
- (void)setEnableVADFiltering:(bool)arg1;
- (void)setEncryptionInfoReceived:(bool)arg1;
- (void)setIsRemoteOnPeace:(bool)arg1;
- (void)setMediaSuggestion:(struct VCRateControlMediaSuggestion { bool x1; bool x2; bool x3; bool x4; bool x5; bool x6; bool x7; }*)arg1;
- (void)setMuted:(bool)arg1;
- (void)setOneToOneModeEnabled:(bool)arg1;
- (void)setPeerSubscribedStreams:(id)arg1;
- (bool)setState:(unsigned int)arg1;
- (void)setUplinkBitrateCapCell:(unsigned int)arg1;
- (void)setUplinkBitrateCapWifi:(unsigned int)arg1;
- (bool)setupAudioStreamGroupWithStreamConfigs:(id)arg1 negotiatorConfig:(id)arg2 streamGroupConfiguration:(id)arg3;
- (bool)setupAudioStreamsWithStreamConfiguration:(id)arg1 streamGroupConfiguration:(id)arg2;
- (bool)setupAudioStreamsWithStreamConfigurations:(id)arg1 mediaNegotiatorConfig:(id)arg2 streamGroupConfiguration:(id)arg3;
- (bool)setupCameraStreamGroupWithStreamConfigs:(id)arg1 negotiatorConfig:(id)arg2 streamGroupConfiguration:(id)arg3;
- (bool)setupCaptionsStreamsWithStreamConfiguration:(id)arg1 streamGroupConfiguration:(id)arg2;
- (bool)setupCaptionsStreamsWithStreamConfigurations:(id)arg1 mediaNegotiatorConfig:(id)arg2 streamGroupConfiguration:(id)arg3;
- (void)setupEncodingModeWithVideoStreamConfig:(id)arg1;
- (void)setupOneToOneAudioRedundancyController;
- (void)setupOneToOneEncryptionInfoWithConfiguration:(id)arg1;
- (bool)setupOneToOneRedundancyControllers;
- (void)setupOneToOneVideoRedundancyController;
- (bool)setupOneToOneVideoStreamWithConfig:(id)arg1;
- (bool)setupScreenStreamWithConfiguration:(id)arg1 idsDestination:(id)arg2;
- (bool)setupStreamGroupMediaSync;
- (bool)setupStreamGroupWithStreamGroupConfig:(id)arg1 negotiatorConfig:(id)arg2;
- (bool)setupStreamGroupsWithConfig:(id)arg1 negotiatorConfig:(id)arg2;
- (bool)setupStreamInputsWithConfig:(id)arg1;
- (id)setupStreamRTP:(id)arg1;
- (void)setupSystemAudioCapture;
- (bool)setupVideoMediaStreamsWithStreamGroupConfiguration:(id)arg1 streamGroupConfig:(id)arg2 streamGroupID:(unsigned int)arg3 mediaType:(unsigned int)arg4;
- (bool)setupVideoStreamsWithStreamConfiguration:(id)arg1 streamGroupConfiguration:(id)arg2;
- (bool)setupVideoStreamsWithStreamConfigurations:(id)arg1 mediaNegotiatorConfig:(id)arg2 streamGroupConfiguration:(id)arg3;
- (bool)shouldSendMedia;
- (void)sourceFrameRateDidChange:(unsigned int)arg1;
- (void)start;
- (void)startSystemAudioCapture;
- (void)startVoiceActivityDetection;
- (void)stop;
- (void)stopAudioIOCompletion;
- (void)stopSystemAudioCapture;
- (void)stopVideoCaptureClient;
- (void)stopVoiceActivityDetection;
- (void)streamGroup:(id)arg1 didSuspendStreams:(bool)arg2;
- (void)streamGroupNegotiationVideoConfigForStreamGroup:(id)arg1 streamConfig:(id)arg2 mediaConfig:(id)arg3;
- (id)supportedAudioRules;
- (void)suspendStreamsOnOneToOneModeSwitch;
- (void)thermalLevelDidChange:(int)arg1;
- (void)updateActiveVoiceOnly;
- (void)updateAudioPriorityWithSampleBuffer:(struct opaqueVCAudioBufferList { }*)arg1;
- (void)updateAudioSpectrumState;
- (void)updateBandwithAllocationTable:(id)arg1 mediaType:(unsigned int)arg2 streamGroupID:(unsigned int)arg3 encoderGroupID:(unsigned int)arg4 minNetworkBitrate:(unsigned int)arg5 maxNetworkBitrate:(unsigned int)arg6;
- (void)updateMediaSettingsWithConfig:(id)arg1;
- (void)updateMomentsCapabillities:(unsigned int)arg1 imageType:(int)arg2 videoCodec:(int)arg3;
- (void)updatePayloadTypesWithAudioConfigs:(id)arg1;
- (void)updatePayloadTypesWithVideoConfigs:(id)arg1;
- (void)updateSupportedAudioRules:(id)arg1;
- (void)updateTargetBitrateBasedOnCurrentOneToOneSettings;
- (void)updateTargetBitrateOneToOne:(unsigned int)arg1 rateChangeCounter:(unsigned int)arg2;
- (void)updateUplinkTargetBitrate:(unsigned int)arg1;
- (void)updateUplinkTargetBitrateForStreamGroups;
- (void)updateVideoOneToOneBitrate;
- (void)updateVideoPaused:(bool)arg1;
- (void)updateWindowState:(int)arg1 isLocal:(bool)arg2 windowRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (unsigned int)uplinkBitrateCapCell;
- (unsigned int)uplinkBitrateCapWifi;
- (id)videoPayloadTypes;

@end
