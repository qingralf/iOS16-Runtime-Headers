/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
 */

@interface VCAudioStreamSendGroup : VCMediaStreamSendGroup <VCAudioStreamGroup, VCRedundancyControllerDelegate> {
    struct tagVCAudioDucker { } * _audioDucker;
    struct opaqueCMSimpleQueue { } * _audioRedundancyChangeEventQueue;
    struct tagVCMemoryPool { struct { void *x_1_1_1; long long x_1_1_2; } x1; unsigned long long x2; } * _audioRedundancyEventPool;
    struct opaqueCMSimpleQueue { } * _audioStreamUpdateEventQueue;
    struct tagVCMemoryPool { struct { void *x_1_1_1; long long x_1_1_2; } x1; unsigned long long x2; } * _audioStreamUpdatePool;
    float  _averageInputPower;
    AVCBasebandCongestionDetector * _basebandCongestionDetector;
    unsigned int  _cellularUniqueTag;
    VCAudioStreamGroupCommon * _common;
    bool  _forcedAudioPriorityEnabled;
    double  _forcedAudioPriorityLastUpdateTime;
    unsigned char  _forcedAudioPriorityValue;
    bool  _isCurrentDTXEnabled;
    bool  _isVADFilteringEnabled;
    unsigned char  _lastAudioPriority;
    bool  _lastEnqueuedStreamUpdateEventWasEmpty;
    struct tagVCMediaQueue { } * _mediaQueue;
    VCRedundancyControllerAudio * _redundancyController;
    bool  _shouldScheduleMediaQueue;
    VCSystemAudioCaptureSession * _systemAudioCaptureSession;
    struct opaqueVCVoiceDetector { } * _voiceDetector;
}

@property (nonatomic, retain) AVCBasebandCongestionDetector *basebandCongestionDetector;
@property (nonatomic) unsigned int cellularUniqueTag;
@property (nonatomic, readonly) int deviceRole;
@property (setter=setCurrentDTXEnabled:, nonatomic) bool isCurrentDTXEnabled;
@property (setter=setMuted:, nonatomic) bool isMuted;
@property (setter=setPowerSpectrumEnabled:) bool isPowerSpectrumEnabled;
@property (setter=setVADFilteringEnabled:, nonatomic) bool isVADFilteringEnabled;

- (id)activeStreamKeys;
- (bool)addSyncDestination:(id)arg1;
- (id)basebandCongestionDetector;
- (unsigned int)cellularUniqueTag;
- (id)checkStreamsForAudioOptIn:(id)arg1;
- (void)cleanupIOEventQueues;
- (void)collectAndLogChannelMetrics:(struct { unsigned int x1; unsigned int x2[5]; unsigned int x3; double x4; struct CGSize { double x_5_1_1; double x_5_1_2; } x5; double x6; unsigned int x7; double x8; unsigned int x9; unsigned int x10; }*)arg1;
- (bool)configureStreams;
- (bool)createIOEventQueues;
- (void)dealloc;
- (int)deviceRole;
- (void)didStop;
- (void)flushAudioEventQueue;
- (void)flushAudioRedundancyEventQueue;
- (id)initWithConfig:(id)arg1;
- (bool)isCurrentDTXEnabled;
- (bool)isMuted;
- (bool)isPowerSpectrumEnabled;
- (bool)isVADFilteringEnabled;
- (void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2;
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;
- (void)redundancyController:(id)arg1 redundancyVectorDidChange:(struct { unsigned short x1; struct { unsigned char x_2_1_1; unsigned char x_2_1_2; } x2[32]; })arg2;
- (bool)removeSyncDestination:(id)arg1;
- (void)setBasebandCongestionDetector:(id)arg1;
- (void)setCellularUniqueTag:(unsigned int)arg1;
- (void)setCurrentDTXEnabled:(bool)arg1;
- (bool)setDeviceRole:(int)arg1 operatingMode:(int)arg2;
- (void)setMuteOnStreams;
- (void)setMuted:(bool)arg1;
- (void)setPeerSubscribedStreams:(id)arg1;
- (void)setPowerSpectrumEnabled:(bool)arg1;
- (void)setReportingAgent:(struct opaqueRTCReporting { }*)arg1;
- (void)setVADFilteringEnabled:(bool)arg1;
- (id)setupRedundancyController;
- (id)startCapture;
- (void)startDynamicDucker;
- (void)startVoiceActivityDetection;
- (id)stopCapture;
- (void)stopDynamicDucker;
- (void)stopVoiceActivityDetection;
- (void)updateActiveMediaStreamIDs:(id)arg1 withTargetBitrate:(unsigned int)arg2 mediaBitrates:(id)arg3;
- (void)updateActiveVoiceOnly:(bool)arg1;
- (id)willStart;

@end
