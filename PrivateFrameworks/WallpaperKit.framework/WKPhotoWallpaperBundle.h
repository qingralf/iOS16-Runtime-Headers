/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WallpaperKit.framework/WallpaperKit
 */

@interface WKPhotoWallpaperBundle : NSObject <NAIdentifiable, WKWallpaperRepresenting> {
    WKPhotoAssetWallpaper * __wallpaper;
    bool  _disableParallax;
    NSURL * _thumbnailImageURL;
}

@property (nonatomic, retain) WKPhotoAssetWallpaper *_wallpaper;
@property (getter=isAppearanceAware, nonatomic, readonly) bool appearanceAware;
@property (nonatomic, readonly) unsigned long long contentSource;
@property (nonatomic, readonly) NSDate *creationDate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool disableParallax;
@property (getter=hasDistinctWallpapersForLocations, nonatomic, readonly) bool distinctWallpapersForLocations;
@property (getter=isDynamicWallpaperBundle, nonatomic, readonly) bool dynamicWallpaperBundle;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSUUID *identifier;
@property (nonatomic, readonly, copy) NSString *identifierString;
@property (nonatomic, readonly, copy) NSString *logicalScreenClass;
@property (nonatomic, readonly, copy) NSString *name;
@property (getter=isOffloaded, nonatomic, readonly) bool offloaded;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsCopying;
@property (nonatomic, readonly) UIImage *thumbnailImage;
@property (nonatomic, readonly, copy) NSURL *thumbnailImageURL;

+ (id)na_identity;

- (void).cxx_destruct;
- (id)_wallpaper;
- (unsigned long long)contentSource;
- (id)copyWallpaperRepresentingToDestinationDirectoryURL:(id)arg1 error:(id*)arg2;
- (id)creationDate;
- (bool)disableParallax;
- (id)fileBasedWallpaperForLocation:(id)arg1;
- (id)fileBasedWallpaperForLocation:(id)arg1 andAppearance:(id)arg2;
- (bool)hasDistinctWallpapersForLocations;
- (unsigned long long)hash;
- (id)identifier;
- (id)identifierString;
- (id)initWithPhotosAsset:(id)arg1;
- (bool)isAppearanceAware;
- (bool)isDynamicWallpaperBundle;
- (bool)isEqual:(id)arg1;
- (bool)isOffloaded;
- (id)logicalScreenClass;
- (id)name;
- (void)set_wallpaper:(id)arg1;
- (bool)supportsCopying;
- (id)thumbnailImageURL;
- (id)thumbnailRepresentableForLocation:(id)arg1;
- (id)thumbnailRepresentableForLocation:(id)arg1 andAppearance:(id)arg2;
- (id)valueBasedWallpaperForLocation:(id)arg1;
- (id)valueBasedWallpaperForLocation:(id)arg1 andAppearance:(id)arg2;
- (unsigned long long)wallpaperBackingTypeForLocation:(id)arg1;

@end
