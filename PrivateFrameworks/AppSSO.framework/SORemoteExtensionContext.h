/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppSSO.framework/AppSSO
 */

@interface SORemoteExtensionContext : NSExtensionContext <SOExtensionContext, SORemoteExtensionContextProtocol> {
    ASAuthorizationProviderExtensionAuthorizationRequest * _extensionAuthorizationRequest;
    <ASAuthorizationProviderExtensionAuthorizationRequestHandler><POExtensionRegistrationProtocol> * _extensionAuthorizationRequestHandler;
    SOExtensionServiceConnection * _extensionServiceConnection;
    id /* block */  _finishAuthorizationCompletion;
    SOExtensionViewService * _viewService;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) ASAuthorizationProviderExtensionAuthorizationRequest *extensionAuthorizationRequest;
@property (nonatomic, readonly) <ASAuthorizationProviderExtensionAuthorizationRequestHandler> *extensionViewController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property SOExtensionViewService *viewService;

+ (id)_extensionAuxiliaryHostProtocol;
+ (id)_extensionAuxiliaryVendorProtocol;

- (void).cxx_destruct;
- (void)_disableAppSSOInCFNetwork;
- (id)authorizationRequestHandlerWithRequestParameters:(id)arg1 error:(id*)arg2;
- (void)beginAuthorizationWithRequestParameters:(id)arg1 completion:(id /* block */)arg2;
- (void)beginAuthorizationWithServiceXPCEndpoint:(id)arg1 completion:(id /* block */)arg2;
- (void)beginDeviceRegistrationUsingOptions:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)beginUserRegistrationUsingUserName:(id)arg1 authenticationMethod:(int)arg2 options:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (bool)canOpenURL:(id)arg1;
- (void)cancelAuthorizationWithCompletion:(id /* block */)arg1;
- (void)completeFinishAuthorizationWithError:(id)arg1;
- (id)extensionAuthorizationRequest;
- (id)extensionAuthorizationRequestHandlerWithError:(id*)arg1;
- (id)extensionViewController;
- (void)finishAuthorizationWithCompletion:(id /* block */)arg1;
- (id)hostContextWithError:(id*)arg1;
- (void)openURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)registrationDidComplete;
- (void)setViewService:(id)arg1;
- (id)synchronousHostContextWithError:(id*)arg1;
- (id)viewService;

@end
