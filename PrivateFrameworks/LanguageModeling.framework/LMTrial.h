/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/LanguageModeling.framework/LanguageModeling
 */

@interface LMTrial : NSObject {
    <LMTrialDataSource> * _dataSource;
    struct map<std::string, std::optional<LM::TrialParameters>, std::less<std::string>, std::allocator<std::pair<const std::string, std::optional<LM::TrialParameters>>>> { 
        struct __tree<std::__value_type<std::string, std::optional<LM::TrialParameters>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::optional<LM::TrialParameters>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::optional<LM::TrialParameters>>>> { 
            void *__begin_node_; 
            struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::optional<LM::TrialParameters>>, void *>>> { 
                struct __tree_end_node<std::__tree_node_base<void *> *> { 
                    void *__left_; 
                } __value_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::optional<LM::TrialParameters>>, std::less<std::string>, true>> { 
                unsigned long long __value_; 
            } __pair3_; 
        } __tree_; 
    }  trialParametersByLocaleIdentifier;
}

@property (readonly) <LMTrialDataSource> *dataSource;

+ (id)encodeTrialParameters:(struct optional<LM::TrialParameters> { union { BOOL x_1_1_1; struct TrialParameters { struct path { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x_1_8_1; unsigned long long x_1_8_2; unsigned long long x_1_8_3; } x_1_7_1; struct __short { BOOL x_2_8_1[23]; struct { unsigned char x_2_9_1; } x_2_8_2; } x_1_7_2; struct __raw { unsigned long long x_3_8_1[3]; } x_1_7_3; } x_1_6_1; } x_1_5_1; } x_1_4_1; } x_1_3_1; } x_2_2_1; struct map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>> { struct __tree<std::__value_type<std::string, std::string>, std::__map_value_compare<std::string, std::__value_type<std::string, std::string>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::string>>> { void *x_1_4_1; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::string>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x_1_6_1; } x_2_5_1; } x_1_4_2; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::string>, std::less<std::string>, true>> { unsigned long long x_3_5_1; } x_1_4_3; } x_2_3_1; } x_2_2_2; } x_1_1_2; } x1; })arg1;
+ (id)sharedInstance;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)dataSource;
- (id)encodedTrialParametersForLocale:(id)arg1;
- (void)handleUpdatedTrialParameters:(struct optional<LM::TrialParameters> { union { BOOL x_1_1_1; struct TrialParameters { struct path { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x_1_8_1; unsigned long long x_1_8_2; unsigned long long x_1_8_3; } x_1_7_1; struct __short { BOOL x_2_8_1[23]; struct { unsigned char x_2_9_1; } x_2_8_2; } x_1_7_2; struct __raw { unsigned long long x_3_8_1[3]; } x_1_7_3; } x_1_6_1; } x_1_5_1; } x_1_4_1; } x_1_3_1; } x_2_2_1; struct map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>> { struct __tree<std::__value_type<std::string, std::string>, std::__map_value_compare<std::string, std::__value_type<std::string, std::string>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::string>>> { void *x_1_4_1; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::string>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x_1_6_1; } x_2_5_1; } x_1_4_2; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::string>, std::less<std::string>, true>> { unsigned long long x_3_5_1; } x_1_4_3; } x_2_3_1; } x_2_2_2; } x_1_1_2; } x1; })arg1 forLocaleIdentifier:(const void*)arg2;
- (id)init;
- (id)initWithDataSource:(id)arg1;
- (void)start;

@end
