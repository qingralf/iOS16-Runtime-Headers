/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation
 */

@interface IDSQuickRelaySessionInfo : NSObject {
    NSArray * _allParticipantIDs;
    NSString * _allocateRequestID;
    double  _allocateTime;
    long long  _allocateType;
    NSData * _avcDataBlob;
    NSUUID * _defaultDeviceLocalCBUUID;
    NSUUID * _defaultDeviceRemoteCBUUID;
    unsigned int  _generationCounter;
    NSString * _groupID;
    struct sockaddr_storage { 
        unsigned char ss_len; 
        unsigned char ss_family; 
        BOOL __ss_pad1[6]; 
        long long __ss_align; 
        BOOL __ss_pad2[112]; 
    }  _highPriorityServerAddress;
    struct sockaddr_storage { 
        unsigned char ss_len; 
        unsigned char ss_family; 
        BOOL __ss_pad1[6]; 
        long long __ss_align; 
        BOOL __ss_pad2[112]; 
    }  _highPriorityServerAddressIPv6;
    NSString * _idsSessionID;
    NSSet * _initialServerDesiredMaterial;
    id /* block */  _initialServerDesiredMaterialSigner;
    unsigned char  _ipPreference;
    bool  _isInitiator;
    bool  _isInternal;
    long long  _linkProtocol;
    unsigned char  _linkScore;
    unsigned char  _linkSuggestion;
    unsigned char  _maxConcurrentStreams;
    long long  _participantID;
    unsigned char  _protocolVersion;
    NSArray * _publishedStreams;
    long long  _relayServerProviderType;
    NSString * _relaySessionID;
    NSData * _relaySessionKey;
    NSData * _relaySessionToken;
    NSString * _reportingDataBlob;
    struct sockaddr_storage { 
        unsigned char ss_len; 
        unsigned char ss_family; 
        BOOL __ss_pad1[6]; 
        long long __ss_align; 
        BOOL __ss_pad2[112]; 
    }  _serverAddress;
    struct sockaddr_storage { 
        unsigned char ss_len; 
        unsigned char ss_family; 
        BOOL __ss_pad1[6]; 
        long long __ss_align; 
        BOOL __ss_pad2[112]; 
    }  _serverAddressIPv6;
    NSData * _softwareData;
    NSString * _stableGroupID;
    NSArray * _subscribedStreams;
}

@property (readonly) NSArray *allParticipantIDs;
@property (readonly) NSString *allocateRequestID;
@property (readonly) double allocateTime;
@property (readonly) long long allocateType;
@property (readonly) NSData *avcDataBlob;
@property (readonly) NSUUID *defaultDeviceLocalCBUUID;
@property (readonly) NSUUID *defaultDeviceRemoteCBUUID;
@property (readonly) unsigned int generationCounter;
@property (readonly) NSString *groupID;
@property (readonly) NSString *idsSessionID;
@property (readonly) NSSet *initialServerDesiredMaterial;
@property (readonly) id /* block */ initialServerDesiredMaterialSigner;
@property (readonly) unsigned char ipPreference;
@property (readonly) bool isInitiator;
@property (readonly) bool isInternal;
@property (readonly) long long linkProtocol;
@property (readonly) unsigned char linkScore;
@property (readonly) unsigned char linkSuggestion;
@property (readonly) unsigned char maxConcurrentStreams;
@property (readonly) long long participantID;
@property (readonly) unsigned char protocolVersion;
@property (readonly) NSArray *publishedStreams;
@property (readonly) long long relayServerProviderType;
@property (readonly) NSString *relaySessionID;
@property (readonly) NSData *relaySessionKey;
@property (readonly) NSData *relaySessionToken;
@property (readonly) NSString *reportingDataBlob;
@property (readonly) const struct sockaddr_storage { unsigned char x1; unsigned char x2; BOOL x3[6]; long long x4; BOOL x5[112]; }*serverAddress;
@property (readonly) const struct sockaddr_storage { unsigned char x1; unsigned char x2; BOOL x3[6]; long long x4; BOOL x5[112]; }*serverAddressIPv6;
@property (readonly) NSData *softwareData;
@property (readonly) NSString *stableGroupID;
@property (readonly) NSArray *subscribedStreams;

- (void).cxx_destruct;
- (id)allParticipantIDs;
- (id)allocateRequestID;
- (double)allocateTime;
- (long long)allocateType;
- (id)avcDataBlob;
- (id)defaultDeviceLocalCBUUID;
- (id)defaultDeviceRemoteCBUUID;
- (unsigned int)generationCounter;
- (id)groupID;
- (const struct sockaddr_storage { unsigned char x1; unsigned char x2; BOOL x3[6]; long long x4; BOOL x5[112]; }*)highPriorityServerAddress;
- (const struct sockaddr_storage { unsigned char x1; unsigned char x2; BOOL x3[6]; long long x4; BOOL x5[112]; }*)highPriorityServerAddressIPv6;
- (id)idsSessionID;
- (id)initialServerDesiredMaterial;
- (id /* block */)initialServerDesiredMaterialSigner;
- (unsigned char)ipPreference;
- (bool)isInitiator;
- (bool)isInternal;
- (long long)linkProtocol;
- (unsigned char)linkScore;
- (unsigned char)linkSuggestion;
- (unsigned char)maxConcurrentStreams;
- (long long)parseSessionInfo:(id)arg1;
- (long long)participantID;
- (unsigned char)protocolVersion;
- (id)publishedStreams;
- (long long)relayServerProviderType;
- (id)relaySessionID;
- (id)relaySessionKey;
- (id)relaySessionToken;
- (id)reportingDataBlob;
- (const struct sockaddr_storage { unsigned char x1; unsigned char x2; BOOL x3[6]; long long x4; BOOL x5[112]; }*)serverAddress;
- (const struct sockaddr_storage { unsigned char x1; unsigned char x2; BOOL x3[6]; long long x4; BOOL x5[112]; }*)serverAddressIPv6;
- (id)softwareData;
- (id)stableGroupID;
- (id)subscribedStreams;

@end
