/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HearingUtilities.framework/HearingUtilities
 */

@interface HUNearbyHearingAidController : HUDeviceController {
    <HUNearbyHearingAidControllerDelegate> * _delegate;
    bool  _holdingMediaForConnection;
    bool  _holdingPhoneForConnection;
    AXRemoteHearingAidDevice * _localDevice;
    NSObject<OS_dispatch_queue> * _mediaQueue;
    AXDispatchTimer * _sendConnectionToCompanionTimer;
    long long  _state;
}

@property (nonatomic) <HUNearbyHearingAidControllerDelegate> *delegate;
@property (nonatomic) bool holdingMediaForConnection;
@property (nonatomic) bool holdingPhoneForConnection;
@property (nonatomic, retain) AXRemoteHearingAidDevice *localDevice;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *mediaQueue;
@property (nonatomic, retain) AXDispatchTimer *sendConnectionToCompanionTimer;
@property (nonatomic) long long state;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (id)availableDevices;
- (void)callStatusDidChange:(id)arg1;
- (void)checkConnectionPeers:(id /* block */)arg1;
- (void)checkConnectionToHearingDevice:(id /* block */)arg1;
- (void)checkPairedPeerExists:(id /* block */)arg1;
- (id)connectedPeer;
- (id)delegate;
- (id)device:(id)arg1 didReceiveMessage:(id)arg2;
- (void)getConnectedPeer:(id /* block */)arg1;
- (bool)hasConnectionToHearingDevice;
- (id)hearingAidForDeviceID:(id)arg1;
- (id)hearingDevice;
- (bool)holdingMediaForConnection;
- (bool)holdingPhoneForConnection;
- (id)init;
- (id)localDevice;
- (void)mediaPlaybackDidChange:(id)arg1;
- (id)mediaQueue;
- (void)mediaServerDied;
- (void)registerMediaNotifications;
- (void)relinquishConnectionForReason:(long long)arg1;
- (bool)representsLocalDevices;
- (void)requestConnectionForReason:(long long)arg1;
- (void)requestHandoffForMedia;
- (void)routesDidChange:(id)arg1;
- (void)sendConnectionToCompanionIfPossible;
- (void)sendConnectionToCompanionIfPossible:(bool)arg1;
- (id)sendConnectionToCompanionTimer;
- (void)sendConnectionUpdateToPeers;
- (void)sendMessage:(id)arg1 toDevices:(id)arg2;
- (void)sendMessageToAllDevices:(id)arg1;
- (void)sendWrite:(id)arg1 toDevices:(id)arg2;
- (void)sendWriteToAllDevices:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHoldingMediaForConnection:(bool)arg1;
- (void)setHoldingPhoneForConnection:(bool)arg1;
- (void)setLocalDevice:(id)arg1;
- (void)setMediaQueue:(id)arg1;
- (void)setSendConnectionToCompanionTimer:(id)arg1;
- (void)setState:(long long)arg1;
- (bool)shouldRelinquishConnectionForReason:(long long)arg1;
- (void)shouldRequestAudioConnectionForCall:(bool)arg1 withCompletion:(id /* block */)arg2;
- (void)start;
- (long long)state;
- (void)stop;
- (void)unregisterMediaNotifications;
- (void)updateProperty:(unsigned long long)arg1 forDeviceID:(id)arg2;
- (void)updateState;
- (void)updateStateOnDeviceQueue;
- (void)writeValue:(id)arg1 forProperty:(unsigned long long)arg2 andDeviceID:(id)arg3;
- (void)writeValue:(id)arg1 forProperty:(unsigned long long)arg2 andDeviceID:(id)arg3 toDevices:(id)arg4;

@end
