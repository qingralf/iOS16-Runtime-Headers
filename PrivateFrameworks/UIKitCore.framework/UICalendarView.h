/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UICalendarView : UIView <UICollectionViewDelegate, _UICalendarHeaderViewDelegate, _UICalendarMonthYearSelectorDelegate> {
    NSDateFormatter * _cellFormatter;
    UICollectionView * _collectionView;
    double  _collectionViewAspectRatio;
    double  _collectionViewDecorationsTotalHeight;
    UIView * _contentView;
    _UICalendarDataModel * _dataModel;
    UICollectionViewDiffableDataSource * _dataSource;
    _UICalendarViewDataSourceController * _dataSourceController;
    _UIDatePickerLinkedLabel * _daySizingLabel;
    _UICalendarViewDecorationSystem * _decorationSystem;
    <UICalendarViewDelegate> * _delegate;
    struct { 
        unsigned int needsCollectionViewSelectionUpdate : 1; 
        unsigned int needsCollectionViewScrollPositionUpdate : 1; 
        unsigned int needsUpdateSizing : 1; 
        unsigned int isIgnoringScrollCallbacks : 1; 
        unsigned int renderOverhangDays : 1; 
        unsigned int implementsDecorationDelegate : 1; 
        unsigned int implementsDecorationDelegateSPI : 1; 
        unsigned int hasDecorations : 1; 
    }  _flags;
    struct CGPoint { 
        double x; 
        double y; 
    }  _frozenContentOffset;
    _UICalendarHeaderView * _headerView;
    struct CGSize { 
        double width; 
        double height; 
    }  _lastKnownSize;
    double  _lastWeekdayLabelWidth;
    _UICalendarMonthYearSelector * _monthYearSelector;
    UICalendarSelection * _selectionBehavior;
    long long  _stateUpdatesInFlight;
    long long  _viewState;
    _UICalendarWeekdayView * _weekdayView;
}

@property (nonatomic, copy) NSDateInterval *availableDateRange;
@property (nonatomic, copy) NSCalendar *calendar;
@property (nonatomic, retain) UICollectionView *collectionView;
@property (nonatomic, retain) UIView *contentView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) _UICalendarViewDecorationSystem *decorationSystem;
@property (nonatomic) <UICalendarViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *fontDesign;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) _UICalendarHeaderView *headerView;
@property (nonatomic, retain) NSLocale *locale;
@property (nonatomic, copy) NSDate *maximumDate;
@property (nonatomic, copy) NSDateComponents *maximumDateComponents;
@property (nonatomic, copy) NSDate *minimumDate;
@property (nonatomic, copy) NSDateComponents *minimumDateComponents;
@property (nonatomic, retain) UICalendarSelection *selection;
@property (nonatomic, retain) UICalendarSelection *selectionBehavior;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSTimeZone *timeZone;
@property (nonatomic, copy) NSDateComponents *visibleDateComponents;
@property (nonatomic) bool wantsDateDecorations;
@property (nonatomic, retain) _UICalendarWeekdayView *weekdayView;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

- (void).cxx_destruct;
- (double)__dayAndWeekdayLabelWidth;
- (unsigned long long)_axesForDerivingIntrinsicContentSizeFromLayoutSize;
- (bool)_canSelectItemAtIndexPath:(id)arg1 forSelection:(bool)arg2;
- (void)_cleanupDataIfNecessary;
- (void)_configureMonthYearSelector;
- (id)_contentSizeCategoryForContentWidth:(double)arg1;
- (id)_dataModel;
- (id)_delegateDecorationForDay:(id)arg1;
- (void)_deselectDates:(id)arg1 animated:(bool)arg2;
- (void)_destroyMonthYearSelector;
- (void)_freezeContentOffset;
- (bool)_hasCellDecorations;
- (struct CGSize { double x1; double x2; })_intrinsicSizeWithinSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_notifyDelegateAboutVisibilityChange;
- (void)_performIfNotIgnoringScrollCallbacks:(id /* block */)arg1;
- (void)_performIgnoringScrollCallbacks:(id /* block */)arg1;
- (double)_preferredCollectionViewHeightForWidth:(double)arg1;
- (void)_reconfigureVisibleItems;
- (void)_reload;
- (void)_reloadCollectionViewLayout;
- (void)_reloadDataSourceController;
- (void)_reloadDateFormatters;
- (void)_reloadPossibleDayValues;
- (void)_reloadVisibleMonthIfNeeded;
- (void)_restoreContentOffsetWithPageOffset:(long long)arg1;
- (void)_selectDates:(id)arg1 animated:(bool)arg2;
- (void)_setNeedsCollectionViewScrollPositionUpdate;
- (void)_setNeedsCollectionViewSelectionUpdate;
- (void)_setNeedsUpdateSizing;
- (void)_setVisibleMonth:(id)arg1;
- (void)_setVisibleMonth:(id)arg1 animated:(bool)arg2;
- (void)_setupInitialValues;
- (void)_shouldDifferentiateWithoutColorUpdated:(id)arg1;
- (bool)_shouldUpdateDateViewForVisibleMonth:(id)arg1;
- (void)_updateCollectionViewContentInsets;
- (void)_updateCollectionViewScrollPosition:(bool)arg1;
- (void)_updateCollectionViewSelection:(bool)arg1;
- (void)_updateContentSizeLimitations;
- (void)_updateDateViewForVisibleMonth:(id)arg1 animated:(bool)arg2;
- (void)_updateSizing;
- (void)_updateViewState:(long long)arg1 animated:(bool)arg2;
- (void)_updateVisibleMonth:(id)arg1 animated:(bool)arg2;
- (void)_updateVisibleMonthIfNecessary;

// Image: /System/Library/AccessibilityBundles/UIKit.axbundle/UIKit

+ (Class)safeCategoryBaseClass;

- (id)_accessibilityFuzzyHitTestElements;
- (bool)_accessibilityHitTestShouldFallbackToNearestChild;
- (void)_accessibilityLoadAccessibilityInformation;
- (void)_accessibilityUpdateVisibleMonth;
- (id)_configuedCellForCollectionView:(id)arg1 indexPath:(id)arg2 day:(id)arg3;
- (void)_setVisibleMonth:(id)arg1 animated:(bool)arg2 updateDataSource:(bool)arg3 updateCollectionView:(bool)arg4 notifyDelegate:(bool)arg5;
- (void)_setupViewHierarchy;

// Image: /usr/lib/libMainThreadChecker.dylib

- (bool)allowsMultipleSelection;
- (id)availableDateRange;
- (id)calendar;
- (id)collectionView;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 shouldDeselectItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (id)contentView;
- (id)decorationSystem;
- (id)delegate;
- (id)fontDesign;
- (id)headerView;
- (void)headerViewDidSelect:(id)arg1;
- (void)headerViewDidStepBackward:(id)arg1;
- (void)headerViewDidStepForward:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutMarginsDidChange;
- (void)layoutSubviews;
- (id)locale;
- (id)maximumDate;
- (id)maximumDateComponents;
- (id)minimumDate;
- (id)minimumDateComponents;
- (void)monthYearSelector:(id)arg1 didSelectMonth:(id)arg2;
- (void)reloadDecorationsForDateComponents:(id)arg1 animated:(bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (id)selection;
- (id)selectionBehavior;
- (void)setAllowsMultipleSelection:(bool)arg1;
- (void)setAvailableDateRange:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCalendar:(id)arg1;
- (void)setCollectionView:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setDecorationSystem:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFontDesign:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHeaderView:(id)arg1;
- (void)setLocale:(id)arg1;
- (void)setMaximumDate:(id)arg1;
- (void)setMaximumDateComponents:(id)arg1;
- (void)setMinimumDate:(id)arg1;
- (void)setMinimumDateComponents:(id)arg1;
- (void)setSelection:(id)arg1;
- (void)setSelectionBehavior:(id)arg1;
- (void)setTimeZone:(id)arg1;
- (void)setVisibleDateComponents:(id)arg1;
- (void)setVisibleDateComponents:(id)arg1 animated:(bool)arg2;
- (void)setWantsDateDecorations:(bool)arg1;
- (void)setWeekdayView:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)timeZone;
- (void)traitCollectionDidChange:(id)arg1;
- (id)visibleDateComponents;
- (bool)wantsDateDecorations;
- (id)weekdayView;

@end
