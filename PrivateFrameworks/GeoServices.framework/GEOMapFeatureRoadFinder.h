/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOMapFeatureRoadFinder : GEOMapFeatureAccessFinder {
    bool  _flipNegativeTravelDirectionRoads;
    bool  _joinAllRoadsByMuid;
    GEOMapFeatureMultiSegmentRoadFinder * _multiSegmentRoadFinder;
    bool  _visitDoubleTravelDirectionRoadsTwice;
}

@property (nonatomic) bool flipNegativeTravelDirectionRoads;
@property (nonatomic) bool joinAllRoadsByMuid;
@property (nonatomic) bool visitDoubleTravelDirectionRoadsTwice;

- (void).cxx_destruct;
- (id)_findUnjoinedRoadsNear:(struct { double x1; double x2; })arg1 radius:(double)arg2 handler:(id /* block */)arg3;
- (id)_findUnjoinedRoadsNear:(struct { double x1; double x2; })arg1 radius:(double)arg2 handler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (id)_multiSegmentRoadFinder;
- (id)findRoadWithID:(unsigned long long)arg1 handler:(id /* block */)arg2 completionHandler:(id /* block */)arg3;
- (id)findRoadWithMuid:(unsigned long long)arg1 nearCoordinate:(struct { double x1; double x2; })arg2 handler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (id)findRoadsNear:(struct { double x1; double x2; })arg1 radius:(double)arg2 handler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (bool)flipNegativeTravelDirectionRoads;
- (bool)joinAllRoadsByMuid;
- (void)setFlipNegativeTravelDirectionRoads:(bool)arg1;
- (void)setJoinAllRoadsByMuid:(bool)arg1;
- (void)setVisitDoubleTravelDirectionRoadsTwice:(bool)arg1;
- (bool)visitDoubleTravelDirectionRoadsTwice;

@end
