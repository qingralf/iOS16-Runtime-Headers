/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMCapture.framework/CMCapture
 */

@interface BWAdaptiveCorrectionPreviewRegistrationTuningParameters : NSObject {
    struct AdaptiveCorrectionConfig { 
        double epErrorLimitWidePix_FirstPass; 
        double epErrorLimitWidePix_SecondPass; 
        double rangePFL_T; 
        double rangePFL_W; 
        double rangeOCxT; 
        double rangeOCxW; 
        double rangeOCyW; 
        double intermediateMacroDistMM; 
        double extremeMacroDistMM; 
        int minPointsForAdjustment; 
        double errorVal_GreaterThanInf; 
        double errorVal_LessThanExtremeMacro; 
        double errorVal_BetweenIntermediate_ExtremeMacro; 
        bool runAnalyticalPreconditioning; 
        double spgEpsilon; 
        float temporalFilteringStrength; 
        float temporalFilteringStrengthParallel; 
    }  _adaptiveCorrectionConfigs;
    const struct AdaptiveCorrectionConfig { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; int x10; double x11; double x12; double x13; bool x14; double x15; float x16; float x17; } * _adaptiveCorrectionConfigsPtr;
    unsigned int  _configuredNumKeypoints;
    double  _epipolarWeightFalloffDistance;
    float  _keypointsMinSelectionScore;
    double  _macroDepthWeightFalloffDistance;
    struct BWAdaptiveCorrectionPreviewRegistrationRegToolBoxConfig { 
        unsigned int numPyrLevels; 
        unsigned int imageWidth; 
        unsigned int imageHeight; 
        unsigned int keypointGridWidth; 
        unsigned int keypointGridHeight; 
        unsigned int keypointsTemplateRadius; 
        unsigned int keypointsSearchRadius; 
        float keypointsMinNccScore; 
    }  _regToolBoxConfig;
}

@property (nonatomic, readonly) const struct AdaptiveCorrectionConfig { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; int x10; double x11; double x12; double x13; bool x14; double x15; float x16; float x17; }*adaptiveCorrectionConfigsPtr;
@property (nonatomic, readonly) unsigned int configuredNumKeypoints;
@property (nonatomic, readonly) double epipolarWeightFalloffDistance;
@property (nonatomic, readonly) float keypointsMinSelectionScore;
@property (nonatomic, readonly) double macroDepthWeightFalloffDistance;
@property (nonatomic, readonly) struct BWAdaptiveCorrectionPreviewRegistrationRegToolBoxConfig { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; float x8; } regToolBoxConfig;

+ (void)initialize;

- (const struct AdaptiveCorrectionConfig { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; int x10; double x11; double x12; double x13; bool x14; double x15; float x16; float x17; }*)adaptiveCorrectionConfigsPtr;
- (unsigned int)configuredNumKeypoints;
- (double)epipolarWeightFalloffDistance;
- (id)init;
- (id)initWithTuningDictionary:(id)arg1;
- (float)keypointsMinSelectionScore;
- (double)macroDepthWeightFalloffDistance;
- (struct BWAdaptiveCorrectionPreviewRegistrationRegToolBoxConfig { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; float x8; })regToolBoxConfig;

@end
