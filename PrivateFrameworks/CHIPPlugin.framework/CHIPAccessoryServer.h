/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CHIPPlugin.framework/CHIPPlugin
 */

@interface CHIPAccessoryServer : HAPAccessoryServer <HMFLogging, HMFTimerDelegate, MTRDevicePairingDelegate> {
    MTRAttributeCacheContainer * _attributeCacheContainer;
    CHIPAccessoryServerBrowser * _browser;
    NSOperationQueue * _characteristicsOperationQueue;
    <CHIPAccessoryServerDelegate> * _chipDelegate;
    MTRDeviceController * _chipDeviceController;
    id /* block */  _chipReportHandler;
    CHIPPluginPairing * _currentPairingInfo;
    NSNumber * _discriminator;
    NSNumber * _fabricIndex;
    bool  _isReenumeratingHAPServices;
    NSData * _latestSubscriptionToken;
    unsigned int  _networkProvisioningFailures;
    NSNumber * _nodeID;
    long long  _pairedState;
    unsigned long long  _pairingProgress;
    HMFTimer * _pairingTimer;
    HAPAccessory * _primaryAccessory;
    NSNumber * _productID;
    CHIPPluginAccessoryReachabilityManager * _reachabilityManager;
    NSNumber * _setUpPINCode;
    id /* block */  _stageCompletion;
    CHIPPluginStorage * _storage;
    bool  _storageUpdatePending;
    unsigned long long  _subscriptionAttemptCount;
    HMFTimer * _subscriptionRetryTimer;
    NSNumber * _vendorID;
}

@property (nonatomic, retain) MTRAttributeCacheContainer *attributeCacheContainer;
@property (nonatomic) CHIPAccessoryServerBrowser *browser;
@property (readonly) NSOperationQueue *characteristicsOperationQueue;
@property (nonatomic) <CHIPAccessoryServerDelegate> *chipDelegate;
@property (nonatomic, retain) MTRDeviceController *chipDeviceController;
@property (copy) id /* block */ chipReportHandler;
@property (nonatomic, readonly) CHIPPluginPairing *currentPairing;
@property (nonatomic, retain) CHIPPluginPairing *currentPairingInfo;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSNumber *discriminator;
@property (nonatomic, retain) NSNumber *fabricIndex;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isReenumeratingHAPServices;
@property (nonatomic, retain) NSData *latestSubscriptionToken;
@property unsigned int networkProvisioningFailures;
@property (nonatomic, retain) NSNumber *nodeID;
@property (nonatomic) long long pairedState;
@property (nonatomic) unsigned long long pairingProgress;
@property (nonatomic, retain) HMFTimer *pairingTimer;
@property (nonatomic, retain) HAPAccessory *primaryAccessory;
@property (nonatomic, readonly) HAPAccessory *primaryAccessoryForServer;
@property (nonatomic, retain) NSNumber *productID;
@property (nonatomic, retain) CHIPPluginAccessoryReachabilityManager *reachabilityManager;
@property (nonatomic, retain) NSNumber *setUpPINCode;
@property (nonatomic, copy) id /* block */ stageCompletion;
@property (nonatomic) CHIPPluginStorage *storage;
@property (nonatomic) bool storageUpdatePending;
@property unsigned long long subscriptionAttemptCount;
@property (nonatomic, retain) HMFTimer *subscriptionRetryTimer;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSNumber *vendorID;

+ (id)logCategory;
+ (id)shortDescription;

- (void).cxx_destruct;
- (void)_buildBridgedAccesoriesForServiceDescriptions:(id)arg1;
- (void)_buildServicesForServiceDescriptions:(id)arg1;
- (id)_categoryFromAccessoryInfo:(id)arg1 endpoint:(id)arg2;
- (id)_categoryFromTopology:(id)arg1 endpoint:(id)arg2;
- (void)_collectNetworkCredentials;
- (id)_createBridgedHAPAccessory:(id)arg1 instanceId:(id)arg2 endpointID:(id)arg3;
- (void)_createHAPServicesFromServiceDescriptions:(id)arg1 services:(out id)arg2 startingServiceInstanceID:(inout long long*)arg3 setAccessory:(bool)arg4;
- (bool)_delegateRespondsToSelector:(SEL)arg1;
- (void)_deleteAccessoryServerData;
- (void)_disconnectWithError:(id)arg1;
- (id)_endPointFromServiceDescriptions:(id)arg1;
- (void)_fetchCurrentPairingWithCompletionHandler:(id /* block */)arg1;
- (void)_finalizePairing;
- (void)_handleCHIPRemoteRequest:(id)arg1 device:(id)arg2;
- (void)_handlePairingFailureWithError:(id)arg1;
- (void)_handlePartsListChanged:(id)arg1 storage:(id)arg2 endpoints:(id)arg3;
- (bool)_handleUnmappedAttributeReport:(id)arg1;
- (void)_initAccessoriesForServer;
- (id)_matterCredentialsFromTHCredentials:(id)arg1;
- (void)_onUnpairFinishedWithError:(id)arg1 queue:(id)arg2 completion:(id /* block */)arg3;
- (void)_pairingComplete:(id)arg1;
- (void)_persistAccessoryServerData;
- (void)_populateServiceForCharacteristic:(id)arg1;
- (void)_populateThreadCredentials:(id)arg1 completion:(id /* block */)arg2;
- (void)_populateWifiCredentials:(id)arg1 completion:(id /* block */)arg2;
- (void)_readCharacteristicValueFromCacheWithCharacteristic:(id)arg1 responseHandler:(id /* block */)arg2;
- (void)_readCharacteristicValues:(id)arg1 forFailedResponses:(id)arg2 atIndexes:(id)arg3 device:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)_readCharacteristicValues:(id)arg1 forFailedResponses:(id)arg2 dispatchGroup:(id)arg3 errorHandler:(id /* block */)arg4;
- (void)_rebuildHAPServicesFromCHIPWithCompletionHandler:(id /* block */)arg1;
- (void)_receiveReport:(id)arg1;
- (void)_setCategoryForPrimaryAccessory:(id)arg1;
- (void)_startPairingWithError:(id*)arg1;
- (void)_startSubscriptionWithDevice:(id)arg1 endpointId:(unsigned long long)arg2 clusterId:(unsigned long long)arg3 attributeId:(unsigned long long)arg4 minInterval:(unsigned long long)arg5 maxInterval:(unsigned long long)arg6 establishedHandler:(id /* block */)arg7;
- (void)_unpair:(id)arg1 completion:(id /* block */)arg2;
- (void)_updatedCharacteristicsForAttributeReport:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_updatedCharacteristicsForEventReport:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_writeCharacteristicValues:(id)arg1 device:(id)arg2 responseTuples:(id)arg3 completionQueue:(id)arg4 complethionHandler:(id /* block */)arg5;
- (void)addPairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)attributeCacheContainer;
- (id)attributeDescriptions;
- (id)browser;
- (id)characteristicsOperationQueue;
- (id)chipDelegate;
- (id)chipDeviceController;
- (id)chipNodeId;
- (id /* block */)chipReportHandler;
- (void)commitStagedPairing;
- (long long)communicationProtocol;
- (id)currentPairing;
- (id)currentPairingInfo;
- (id)deviceID;
- (void)didUpdateReachability:(bool)arg1;
- (void)disable;
- (void)disconnect;
- (void)disconnectWithError:(id)arg1;
- (void)discoverAccessories;
- (id)discriminator;
- (void)enableEvents:(bool)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(id /* block */)arg3 queue:(id)arg4;
- (void)enumerateHAPServices:(id /* block */)arg1;
- (id)fabricIndex;
- (void)fetchPairingsWithCompletionHandler:(id /* block */)arg1;
- (void)finishPairing;
- (void)handleCHIPRemoteRequest:(id)arg1;
- (void)handleUpdatesForCharacteristics:(id)arg1 stateNumber:(id)arg2;
- (bool)hasNetworkProvisioningFailed:(unsigned int)arg1;
- (unsigned long long)hash;
- (void)identifyWithCompletion:(id /* block */)arg1;
- (id)initWithKeystore:(id)arg1;
- (id)initWithKeystore:(id)arg1 browser:(id)arg2;
- (bool)isDisabled;
- (bool)isEqual:(id)arg1;
- (bool)isPaired;
- (bool)isReenumeratingHAPServices;
- (bool)isStaged;
- (id)latestSubscriptionToken;
- (long long)linkType;
- (void)listPairingsWithCompletionQueue:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)logIdentifier;
- (bool)matchesSetupID:(id)arg1;
- (bool)matchesSetupID:(id)arg1 serverIdentifier:(id)arg2;
- (unsigned int)networkProvisioningFailures;
- (id)nodeID;
- (void)onCommissioningComplete:(id)arg1;
- (void)onPairingComplete:(id)arg1;
- (void)onPairingDeleted:(id)arg1;
- (void)onStatusUpdate:(unsigned long long)arg1;
- (void)openPairingWindowForDuration:(double)arg1 completionHandler:(id /* block */)arg2;
- (void)openPairingWindowWithPINForDuration:(double)arg1 completionHandler:(id /* block */)arg2;
- (long long)pairedState;
- (unsigned long long)pairingProgress;
- (id)pairingTimer;
- (bool)pingSupported;
- (id)primaryAccessory;
- (id)primaryAccessoryForServer;
- (id)privateDescription;
- (id)productID;
- (id)reachabilityChangedReason;
- (id)reachabilityManager;
- (void)readCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)removeAllPairingsWithCompletionHandler:(id /* block */)arg1;
- (void)removePairing:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removePairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)removePairingForCurrentControllerOnQueue:(id)arg1 completion:(id /* block */)arg2;
- (void)setAttributeCacheContainer:(id)arg1;
- (void)setBrowser:(id)arg1;
- (void)setCHIPReportHandler:(id /* block */)arg1;
- (void)setChipDelegate:(id)arg1;
- (void)setChipDeviceController:(id)arg1;
- (void)setChipReportHandler:(id /* block */)arg1;
- (void)setCurrentPairingInfo:(id)arg1;
- (void)setDiscriminator:(id)arg1;
- (void)setFabricIndex:(id)arg1;
- (void)setIsReenumeratingHAPServices:(bool)arg1;
- (void)setLatestSubscriptionToken:(id)arg1;
- (void)setNetworkProvisioningFailures:(unsigned int)arg1;
- (void)setNodeID:(id)arg1;
- (void)setPairedState:(long long)arg1;
- (void)setPairingProgress:(unsigned long long)arg1;
- (void)setPairingTimer:(id)arg1;
- (void)setPrimaryAccessory:(id)arg1;
- (void)setProductID:(id)arg1;
- (void)setReachabilityManager:(id)arg1;
- (void)setSetUpPINCode:(id)arg1;
- (void)setStageCompletion:(id /* block */)arg1;
- (void)setStorage:(id)arg1;
- (void)setStorageUpdatePending:(bool)arg1;
- (void)setSubscriptionAttemptCount:(unsigned long long)arg1;
- (void)setSubscriptionRetryTimer:(id)arg1;
- (id)setUpPINCode;
- (void)setVendorID:(id)arg1;
- (void)setupReporting;
- (id /* block */)stageCompletion;
- (void)startPairingWithRequest:(id)arg1;
- (void)startStagedPairingWithCompletion:(id /* block */)arg1;
- (bool)stopPairingWithError:(id*)arg1;
- (id)storage;
- (bool)storageUpdatePending;
- (unsigned long long)subscriptionAttemptCount;
- (id)subscriptionRetryTimer;
- (void)timerDidFire:(id)arg1;
- (bool)tryPairingPassword:(id)arg1 error:(id*)arg2;
- (void)updateFabricLabel:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)vendorID;
- (void)writeCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;

@end
