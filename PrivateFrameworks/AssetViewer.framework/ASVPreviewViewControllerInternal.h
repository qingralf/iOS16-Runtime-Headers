/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AssetViewer.framework/AssetViewer
 */

@interface ASVPreviewViewControllerInternal : QLCustomItemViewController <ARCoachingOverlayViewDelegate, ARInternalSessionObserver, ARQLInlineService3, QLPreviewingController, QLPreviewingController_Private> {
    void $__lazy_storage_$_arAnchorTrackedStateUpdater;
    void $__lazy_storage_$_coachingOverlayView;
    void $__lazy_storage_$_overlayController;
    void $__lazy_storage_$_replayObserver;
    void $__lazy_storage_$_viewportScanner;
    void allowShowTriggerAffordanceTime;
    void allowsARMode;
    void analyticsARModeDuration;
    void analyticsARObjectWasLevitated;
    void analyticsDidCloseByTappingOnCheckout;
    void analyticsFileWantsRealWorldPhysics;
    void analyticsLastDimensionsString;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  analyticsLastDisplayModeToggledDate;
    void analyticsLongestDuration;
    void analyticsObjectModeDuration;
    void analyticsTimeInObjectModeBeforeFirstTapARMode;
    void analyticsTimesAnchoredToImage;
    void analyticsTimesAnchoredToObject;
    void analyticsTimesAnimationScrubbed;
    void analyticsTimesPlayPauseButtonPressed;
    void analyticsTimesWentIntoARMode;
    void analyticsTimesWentIntoObjectMode;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  analyticsViewDidAppearDate;
    void animationComponents;
    void backlightController;
    void coachingOverlayViewDidDeactivateCompletionBlock;
    void configuration;
    void currentDetectionImages;
    void currentDetectionObjects;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  customizationOptions;
    void debugActionsState;
    void defaultARConfiguration;
    void defaultGravity;
    void delayBeforeShowingTriggerAffordance;
    void didPlaceFirstEntityInARWorld;
    void didReceiveFirstARFrame;
    void entityControllerToTouchesMapping;
    void entityToInteractionsMapping;
    void faceTrackingConfiguration;
    void fallbackTapGestureEntityController;
    void gravity;
    void hasPlacedModelInWorldAlready;
    void hideLozengeTimer;
    void interactionsShownState;
    void interfaceState;
    void isAutoFocusEnabled;
    void isDismissing;
    void isWindowFullscreen;
    void isWindowFullscreenCancellable;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastPlacedAnchoringComponentTarget;
    void lastScaledEntityController;
    void lastTriggerAffordanceUpdateTime;
    void lozengeLabel;
    void lozengeSafezone;
    void modelController;
    void onStartInteractionTriggered;
    void placeModelTimer;
    void playbackViewController;
    void previewCompletionHandler;
    void previewDidAppearCalled;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  previewType;
    void shareSheetReplyBlock;
    void singleTapScreenPoint;
    void touchToEntityControllerMapping;
    void uuid;
    void videoInput;
    void videoWriter;
    void viewportDebugView;
    void worldRaycastStrategy;
}

@property (nonatomic, readonly) UIView *accessibilityARView;
@property (nonatomic, readonly) NSArray *accessibilityEntityControllers;
@property (nonatomic, readonly) _TtC11AssetViewer16EntityController *accessibilityRootEntityController;
@property (nonatomic, readonly) bool currentlyDisallowsUnifiedGestureRecognizerAction;
@property (nonatomic, retain) _TtC11AssetViewer28ARQuickLookOverlayController *overlayController;
@property (nonatomic, readonly) bool prefersHomeIndicatorAutoHidden;
@property (nonatomic, readonly) bool prefersStatusBarHidden;

// Image: /System/Library/PrivateFrameworks/AssetViewer.framework/AssetViewer

- (void).cxx_destruct;
- (id)accessibilityARView;
- (float)accessibilityDistanceInMetersFromEntityController:(id)arg1;
- (id)accessibilityEntityControllers;
- (id)accessibilityRootEntityController;
- (void)accessibilityShowControls;
- (void)activateCoachingView;
- (void)activateCoachingViewWithDelay;
- (void)coachingOverlayViewDidDeactivate:(id)arg1;
- (void)createInlinePreviewWithUUID:(id)arg1 initialBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 contextIdReply:(id /* block */)arg3;
- (bool)currentlyDisallowsUnifiedGestureRecognizerAction;
- (void)dealloc;
- (void)didBecomeActive;
- (void)didDismissActivityViewController;
- (void)dismissButtonPressed;
- (void)dismissPreviewController;
- (void)hideLozengeAnimated;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)inlinePreview:(id)arg1 setCameraYaw:(float)arg2 pitch:(float)arg3 scale:(float)arg4 options:(id)arg5;
- (void)inlinePreview:(id)arg1 setCurrentTime:(double)arg2;
- (void)inlinePreview:(id)arg1 setEnableGradientBackground:(bool)arg2;
- (void)inlinePreview:(id)arg1 setEnableShadows:(bool)arg2;
- (void)inlinePreview:(id)arg1 setIsLooping:(bool)arg2;
- (void)inlinePreview:(id)arg1 setIsMuted:(bool)arg2;
- (void)inlinePreview:(id)arg1 setIsPlaying:(bool)arg2;
- (void)inlinePreview:(id)arg1 setRuntimeStateObserver:(id /* block */)arg2;
- (void)observeReturnedToInlineForUUID:(id)arg1 fenceHandleCompletion:(id /* block */)arg2;
- (id)overlayController;
- (bool)prefersHomeIndicatorAutoHidden;
- (bool)prefersStatusBarHidden;
- (void)prepareFullscreenPreview:(id)arg1 initialFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 previewOptions:(id)arg3 fenceHandleCompletion:(id /* block */)arg4;
- (void)prepareInlinePreviewWithData:(id)arg1 forUUID:(id)arg2 completion:(id /* block */)arg3;
- (void)prepareInlinePreviewWithScopedURLWrapperAttributes:(id)arg1 forUUID:(id)arg2 completion:(id /* block */)arg3;
- (void)preparePreviewOfFileAtURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)presentationModeDidChange:(unsigned long long)arg1 animated:(bool)arg2;
- (void)previewDidAppear:(bool)arg1;
- (void)previewDidDisappear:(bool)arg1;
- (void)previewWillAppear:(bool)arg1;
- (void)previewWillDisappear:(bool)arg1;
- (void)sendARQLEvent:(id)arg1 forUUID:(id)arg2 completion:(id /* block */)arg3;
- (void)session:(id)arg1 cameraDidChangeTrackingState:(id)arg2;
- (void)session:(id)arg1 didAddAnchors:(id)arg2;
- (void)session:(id)arg1 didFailWithError:(id)arg2;
- (void)session:(id)arg1 didRemoveAnchors:(id)arg2;
- (void)session:(id)arg1 didUpdateAnchors:(id)arg2;
- (void)session:(id)arg1 didUpdateFrame:(id)arg2;
- (void)sessionInterruptionEnded:(id)arg1;
- (void)sessionWasInterrupted:(id)arg1;
- (void)setOverlayController:(id)arg1;
- (void)shareButtonPressed;
- (bool)shouldDisableGestures;
- (void)teardownInlinePreviewWithUUID:(id)arg1 completion:(id /* block */)arg2;
- (void)touchesBegan:(id)arg1 forUUID:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 forUUID:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 forUUID:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 forUUID:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)triggerOnInteractionsAndReEnablePhysicsWithDelay;
- (void)triggerTapToRadar;
- (void)tryPlaceModelOrRescheduleTimer;
- (void)updateBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forUUID:(id)arg2 fenceHandleCompletion:(id /* block */)arg3;
- (void)updateIsWindowFullscreenWithFuncString:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;

// Image: /System/Library/AccessibilityBundles/AssetViewer.axbundle/AssetViewer

+ (Class)safeCategoryBaseClass;

- (void)_accessibilityLoadAccessibilityInformation;
- (id)_axARModeControls;
- (id)_axARModeControlsForEntityController:(id)arg1 isRTL:(bool)arg2;
- (id)_axARView;
- (bool)_axActivateForEntityController:(id)arg1 deltaYaw:(float)arg2 deltaPitch:(float)arg3;
- (void)_axAdjustScaleByMultiplier:(float)arg1 entityController:(id)arg2;
- (void)_axAnnotateAsControl:(id)arg1;
- (float)_axAssetScaleForAnnouncementsForEntityController:(id)arg1;
- (float)_axAssetScaleForEntityController:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_axBoundingRectForEntityController:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_axBoundingRectForEntityWrapper:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_axBoundsForControls;
- (void)_axCheckForAppearanceOfObjectsWithTimer:(id)arg1;
- (id)_axControlForRotationWithDeltaYaw:(float)arg1 deltaPitch:(float)arg2 nameFormat:(id)arg3 hintFormat:(id)arg4 shouldUseArrows:(bool)arg5 entityController:(id)arg6;
- (id)_axControlForScalingForEntityController:(id)arg1;
- (id)_axControlForTranslationForLevitation:(void *)arg1 delta:(void *)arg2 nameFormat:(void *)arg3 entityController:(void *)arg4; // needs 4 arg types, found 3: bool, id, id
- (id)_axControlsViewStack;
- (id)_axCreateAssetElementForEntityController:(id)arg1;
- (id)_axDescriptionForCurrentPitchForEntityController:(id)arg1;
- (id)_axDescriptionForCurrentPositionForEntityController:(id)arg1;
- (id)_axDescriptionForCurrentRotationForEntityController:(id)arg1;
- (id)_axDescriptionForPitchInDegrees:(long long)arg1;
- (id)_axDescriptionForRotationInDegrees:(long long)arg1;
- (void)_axDidToggleAXSetting:(id)arg1;
- (long long)_axEmitterMode;
- (id)_axEntityControllers;
- (id)_axEntityElementsForEntityController:(id)arg1;
- (id)_axEntityIdentifiersToOffScreenState;
- (id)_axEntityWrappersForEntityController:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_axFrameForEntityController:(id)arg1;
- (void)_axGetAccessibilityFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 path:(id*)arg2 forArrowTowardsEdge:(unsigned long long)arg3 isDoubleArrow:(bool)arg4;
- (void)_axGetAccessibilityFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 path:(id*)arg2 forRotationControlClockwise:(bool)arg3;
- (bool)_axHasHandledLoadAX;
- (id)_axIdentifierForEntityWrapper:(id)arg1;
- (bool)_axIsAccessibilityElementForEntityController:(id)arg1;
- (bool)_axIsFirstVisibilityAnnouncement;
- (bool)_axIsOffScreenForEntityController:(id)arg1;
- (bool)_axIsOffScreenForEntityWrapper:(id)arg1;
- (id)_axLabelForEntityController:(id)arg1;
- (float)_axLevitationHeightForEntityController:(id)arg1;
- (id)_axNameForEntityController:(id)arg1;
- (id)_axNameForEntityWrapper:(id)arg1;
- (id)_axObjectModeControls;
- (id)_axObjectModeControlsForEntityController:(id)arg1 isRTL:(bool)arg2;
- (id)_axOverlayController;
- (void)_axResetToInitialScaleForEntityAction:(id)arg1;
- (id)_axRootEntityController;
- (id)_axRootEntityWrapperForEntityController:(id)arg1;
- (void)_axSetARModeControls:(id)arg1;
- (void)_axSetEntityIdentifiersToOffScreenState:(id)arg1;
- (void)_axSetHasHandledLoadAX:(bool)arg1;
- (void)_axSetIsFirstVisibilityAnnouncement:(bool)arg1;
- (void)_axSetObjectModeControls:(id)arg1;
- (void)_axSetOffScreen:(bool)arg1 forEntityController:(id)arg2;
- (void)_axSetOffScreen:(bool)arg1 forEntityWrapper:(id)arg2;
- (void)_axSetTimerForVisibilityAnnouncements:(id)arg1;
- (bool)_axShouldExposeControls;
- (id)_axTimerForVisibilityAnnouncements;
- (void)_axToggleVisibilityAnnouncementsIfNeeded;
- (bool)_axTranslateForLevitation:(void *)arg1 delta:(void *)arg2 entityController:(void *)arg3; // needs 3 arg types, found 2: bool, id
- (id)_axUnifiedGestureRecognizerForEntityController:(id)arg1;
- (void)_axUpdateARViewAccessibilityElements;
- (void)_axUpdateForAXSettings;
- (void)_axUpdateForOldEmitterMode:(long long)arg1;
- (void)accessibilityDidSetUpEntityControllers;
- (void)entityController:(id)arg1 doubleTappedAt:(struct CGPoint { double x1; double x2; })arg2;
- (void)handleTapAtPointWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)updateInterfaceState;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;

@end
