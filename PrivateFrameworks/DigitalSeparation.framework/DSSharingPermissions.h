/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation
 */

@interface DSSharingPermissions : NSObject {
    NSObject<OS_dispatch_queue> * _dataUsageQueue;
    NSOrderedSet * _filteredPeople;
    NSOrderedSet * _filteredSharingTypes;
    DSMe * _me;
    NSMutableOrderedSet * _people;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _permissionsLock;
    NSMutableOrderedSet * _publicSharingTypes;
    DSSourceRepository * _repo;
    NSMutableOrderedSet * _sharingTypes;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, readonly, copy) NSArray *allPeople;
@property (nonatomic, readonly, copy) NSArray *allPublicSharingTypes;
@property (nonatomic, readonly, copy) NSArray *allSharingTypes;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dataUsageQueue;
@property (nonatomic, retain) NSOrderedSet *filteredPeople;
@property (nonatomic, retain) NSOrderedSet *filteredSharingTypes;
@property (nonatomic, retain) DSMe *me;
@property (nonatomic, retain) NSMutableOrderedSet *people;
@property (nonatomic, retain) NSMutableOrderedSet *publicSharingTypes;
@property (nonatomic, readonly) long long publicSharingTypesCount;
@property (nonatomic, retain) DSSourceRepository *repo;
@property (nonatomic, retain) NSMutableOrderedSet *sharingTypes;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (void)initialize;

- (void).cxx_destruct;
- (void)_trackResourceForPublicAccess:(id)arg1 source:(id)arg2;
- (void)addParticipant:(id)arg1 forSource:(id)arg2 sharedResource:(id)arg3 deviceOwnerRole:(long long)arg4;
- (id)allPeople;
- (id)allPublicSharingTypes;
- (id)allSharingTypes;
- (id)dataUsageQueue;
- (void)fetchPermissionsFromSources:(id)arg1 includingErrors:(id)arg2 queue:(id)arg3 completion:(id /* block */)arg4;
- (void)fetchPermissionsOnQueue:(id)arg1 completion:(id /* block */)arg2;
- (void)filterPeopleWithPredicate:(id)arg1;
- (void)filterSharingTypesWithPredicate:(id)arg1;
- (id)filteredPeople;
- (id)filteredSharingTypes;
- (id)init;
- (id)me;
- (id)people;
- (long long)peopleCountWithFilter:(bool)arg1;
- (id)person:(long long)arg1 withFilter:(bool)arg2;
- (id)publicSharingType:(long long)arg1;
- (id)publicSharingTypes;
- (long long)publicSharingTypesCount;
- (void)removePerson:(id)arg1;
- (void)removePerson:(id)arg1 sources:(id)arg2;
- (void)removePublicSharingType:(id)arg1;
- (void)removeSharingType:(id)arg1;
- (void)removeSharingType:(id)arg1 people:(id)arg2;
- (id)repo;
- (void)setDataUsageQueue:(id)arg1;
- (void)setFilteredPeople:(id)arg1;
- (void)setFilteredSharingTypes:(id)arg1;
- (void)setMe:(id)arg1;
- (void)setPeople:(id)arg1;
- (void)setPublicSharingTypes:(id)arg1;
- (void)setRepo:(id)arg1;
- (void)setSharingTypes:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (id)sharingType:(long long)arg1 withFilter:(bool)arg2;
- (id)sharingTypes;
- (long long)sharingTypesCountWithFilter:(bool)arg1;
- (void)sort;
- (void)stopAllSharingOnQueue:(id)arg1 completion:(id /* block */)arg2;
- (void)verifyDataUsagePoliciesForSources:(id)arg1 completion:(id /* block */)arg2;
- (id)workQueue;

@end
