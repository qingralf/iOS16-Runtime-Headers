/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Message.framework/Message
 */

@interface MFLibraryStore : MFMessageStore <MFMailMessageStore> {
    MailAccount * _account;
    MFMessageCriterion * _criterion;
    unsigned long long  _deletedMessageCount;
    unsigned long long  _deletedMessagesSize;
    NSDate * _earliestReceivedDate;
    unsigned long long  _fetchWindow;
    struct { 
        unsigned int isReadOnly : 1; 
        unsigned int hasUnsavedChangesToMessageData : 1; 
        unsigned int haveOpenLockFile : 1; 
        unsigned int compacting : 1; 
        unsigned int cancelInvalidation : 1; 
        unsigned int forceInvalidation : 1; 
        unsigned int isWritingChangesToDisk : 1; 
        unsigned int isTryingToClose : 1; 
        unsigned int compactOnClose : 1; 
        unsigned int reserved : 23; 
    }  _flags;
    unsigned long long  _generationNumber;
    unsigned long long  _lastFetchCount;
    MFMailMessageLibrary * _library;
    MFMailboxUid * _mailbox;
    unsigned long long  _state;
}

@property (nonatomic, readonly) NSString *URLString;
@property (nonatomic, readonly) MailAccount *account;
@property (nonatomic, retain) NSDate *earliestReceivedDate;
@property (nonatomic, retain) MFMailMessageLibrary *library;
@property (nonatomic, readonly) MFMailboxUid *mailbox;
@property (nonatomic, readonly) MFMailboxUid *mailboxUid;

+ (Class)classForMimePart;
+ (unsigned int)defaultLoadOptions;
+ (Class)headersClass;
+ (id)sharedInstance;
+ (id)sharedInstanceIfExists;
+ (id)storeWithMailbox:(id)arg1;

- (void).cxx_destruct;
- (id)URLString;
- (void)_addInvocationToQueue:(id)arg1;
- (id)_cachedBodyDataContainerForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedBodyForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedHeaderDataForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedHeadersForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (unsigned long long)_calculateFetchWindowWithAdditionalMultiple:(bool)arg1;
- (id)_copyDataFromMimePart:(id)arg1 threshold:(unsigned int)arg2 downloadIfNecessary:(bool)arg3;
- (id)_fetchBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id*)arg2 downloadIfNecessary:(bool)arg3 partial:(bool*)arg4;
- (bool)_fetchDataForMimePart:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 isComplete:(bool*)arg3 consumer:(id)arg4;
- (id)_fetchFullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id*)arg2 downloadIfNecessary:(bool)arg3 didDownload:(bool*)arg4;
- (id)_fetchHeaderDataForMessage:(id)arg1 downloadIfNecessary:(bool)arg2;
- (unsigned long long)_fetchWindowMinimum;
- (unsigned long long)_fetchWindowMultiple;
- (void)_flushAllMessageData;
- (void)_handleFlagsChangedForMessages:(id)arg1 flags:(id)arg2 oldFlagsByMessage:(id)arg3;
- (id)_memberMessagesWithCompactionNotification:(id)arg1;
- (void)_queueMessageFlagsChanged:(id)arg1;
- (void)_queueMessagesAdded:(id)arg1;
- (void)_queueMessagesWereCompacted:(id)arg1;
- (void)_queueMessagesWillBeCompacted:(id)arg1;
- (void)_setNeedsAutosave;
- (id)_setOrGetBody:(id)arg1 forMessage:(id)arg2 updateFlags:(bool)arg3;
- (id)account;
- (void)addCountsForMessages:(id)arg1 shouldUpdateUnreadCount:(bool)arg2;
- (void)allMessageFlagsDidChange:(id)arg1;
- (unsigned long long)allNonDeletedCountIncludingServerSearch:(bool)arg1 andThreadSearch:(bool)arg2;
- (bool)allowsAppend;
- (int)archiveDestination;
- (id)bodyDataForMessage:(id)arg1 isComplete:(bool*)arg2 isPartial:(bool*)arg3 downloadIfNecessary:(bool)arg4;
- (bool)bodyFetchRequiresNetworkActivity;
- (bool)canCompact;
- (bool)canFetchMessageIDs;
- (bool)canFetchSearchResults;
- (void)close;
- (void)compactMessages:(id)arg1;
- (id)copyMessagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2;
- (id)copyMessagesWithRemoteIDs:(id)arg1 options:(unsigned int)arg2 inMailbox:(id)arg3;
- (id)copyOfAllMessages;
- (id)copyOfAllMessagesWithOptions:(unsigned int)arg1;
- (id)copyOfMessagesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 options:(unsigned int)arg2;
- (id)copyOfMessagesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 options:(unsigned int)arg2 generation:(unsigned long long*)arg3;
- (id)criterion;
- (id)dataForMimePart:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 isComplete:(bool*)arg3 downloadIfNecessary:(bool)arg4 didDownload:(bool*)arg5;
- (bool)dataForMimePart:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 isComplete:(bool*)arg3 withConsumer:(id)arg4 downloadIfNecessary:(bool)arg5 didDownload:(bool*)arg6;
- (id)dataPathForMessage:(id)arg1 part:(id)arg2;
- (id)dateOfOldestNonIndexedNonSearchResultMessage;
- (void)dealloc;
- (void)deleteMessages:(id)arg1 moveToTrash:(bool)arg2;
- (void)deleteMessagesOlderThanNumberOfDays:(int)arg1 compact:(bool)arg2;
- (id)description;
- (void)doCompact;
- (id)earliestReceivedDate;
- (long long)fetchMessagesWithMessageIDs:(id)arg1 andSetFlags:(unsigned long long)arg2;
- (long long)fetchMobileSynchronously:(unsigned long long)arg1;
- (long long)fetchMobileSynchronously:(unsigned long long)arg1 preservingUID:(id)arg2 options:(unsigned long long)arg3;
- (long long)fetchNumMessages:(unsigned long long)arg1 preservingUID:(id)arg2 options:(unsigned long long)arg3;
- (unsigned long long)fetchWindow;
- (unsigned long long)fetchWindowCap;
- (id)filterMessagesByMembership:(id)arg1;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id*)arg2 isComplete:(bool*)arg3 downloadIfNecessary:(bool)arg4 didDownload:(bool*)arg5;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id*)arg2 isComplete:(bool*)arg3 downloadIfNecessary:(bool)arg4 usePartDatas:(bool)arg5 didDownload:(bool*)arg6;
- (unsigned long long)growFetchWindow;
- (void)handleMessageFlagsChanged:(id)arg1;
- (void)handleMessagesAdded:(id)arg1 earliestReceivedDate:(id)arg2;
- (void)handleMessagesCompacted:(id)arg1;
- (void)handleMessagesWillBeCompacted:(id)arg1;
- (bool)hasCompleteDataForMimePart:(id)arg1;
- (bool)hasMessageForAccount:(id)arg1;
- (bool)hasMoreFetchableMessages;
- (id)headerDataForMessage:(id)arg1 downloadIfNecessary:(bool)arg2;
- (id)initWithCriterion:(id)arg1 mailbox:(id)arg2 readOnly:(bool)arg3;
- (id)initWithMailbox:(id)arg1;
- (id)initWithMailbox:(id)arg1 readOnly:(bool)arg2;
- (void)invalidateFetchWindow;
- (bool)isOpened;
- (id)library;
- (id)loadMeetingDataForMessage:(id)arg1;
- (id)loadMeetingExternalIDForMessage:(id)arg1;
- (id)loadMeetingMetadataForMessage:(id)arg1;
- (id)mailbox;
- (id)mailboxUid;
- (void)messageFlagsDidChange:(id)arg1 flags:(id)arg2;
- (id)messageForMessageID:(id)arg1 options:(unsigned int)arg2;
- (id)messageForRemoteID:(id)arg1;
- (id)messageForRemoteID:(id)arg1 inMailbox:(id)arg2;
- (id)messageIdRollCall:(id)arg1;
- (void)messagesWereAdded:(id)arg1;
- (void)messagesWereAdded:(id)arg1 earliestReceivedDate:(id)arg2;
- (void)messagesWereCompacted:(id)arg1;
- (void)messagesWereDeleted:(id)arg1;
- (void)messagesWillBeCompacted:(id)arg1;
- (id)newObjectCache;
- (void)openSynchronously;
- (void)purgeMessages:(id)arg1;
- (void)purgeMessagesBeyondLimit:(unsigned long long)arg1;
- (unsigned long long)serverMessageCount;
- (id)serverSearchResults;
- (unsigned long long)serverUnreadOnlyOnServerCount;
- (void)setEarliestReceivedDate:(id)arg1;
- (void)setFlag:(id)arg1 state:(bool)arg2 forMessages:(id)arg3;
- (id)setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)setFlagsLocallyFromDictionary:(id)arg1 forMessages:(id)arg2;
- (void)setLibrary:(id)arg1;
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(bool)arg2 isEncrypted:(bool)arg3 forMessage:(id)arg4;
- (bool)shouldArchive;
- (bool)shouldCancel;
- (bool)shouldDeleteInPlace;
- (bool)shouldDownloadBodyDataForMessage:(id)arg1;
- (bool)shouldGrowFetchWindow;
- (id)storageLocationForAttachment:(id)arg1 withMessage:(id)arg2;
- (id)storeData:(id)arg1 forMimePart:(id)arg2 isComplete:(bool)arg3;
- (id)storeSearchResultMatchingCriterion:(id)arg1 limit:(unsigned int)arg2 offset:(id)arg3 error:(id*)arg4;
- (id)storeSearchResultMatchingSearchText:(id)arg1 criterion:(id)arg2 limit:(unsigned int)arg3 offset:(id)arg4 error:(id*)arg5;
- (unsigned long long)totalCount;
- (unsigned long long)unreadCount;
- (void)updateMetadata;
- (void)updateServerUnreadCountClosingConnection:(bool)arg1;
- (void)willFetchMessages;

@end
