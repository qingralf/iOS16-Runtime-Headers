/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Message.framework/Message
 */

@interface MFNetworkController : NSObject <CXCallObserverDelegate, RadiosPreferencesDelegate> {
    unsigned long long  _activeCalls;
    CXCallObserver * _callObserver;
    bool  _callObserverInitialized;
    bool  _cellularDataAvailable;
    CoreTelephonyClient * _ctc;
    int  _dataIndicator;
    bool  _dataStatusInitialized;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _dataStatusInitializerLock;
    NSObject<OS_dispatch_queue> * _dataStatusQueue;
    unsigned int  _flags;
    bool  _hasCellDataCapability;
    bool  _hasDNS;
    bool  _hasWiFiCapability;
    bool  _isRoamingAllowed;
    bool  _isWiFiEnabled;
    MFLock * _lock;
    NSObject<OS_dispatch_queue> * _prefsQueue;
    RadiosPreferences * _radiosPreferences;
    struct __SCNetworkReachability { } * _reachability;
    struct __CFRunLoop { } * _rl;
    <EFCancelable> * _stateCancelable;
    struct __SCDynamicStore { } * _store;
    struct __CFRunLoopSource { } * _store_source;
    int  _symptomsToken;
    struct __SCPreferences { } * _wiFiPreferences;
}

@property (nonatomic, readonly) AWDMailNetworkDiagnosticsReport *awdNetworkDiagnosticReport;
@property (readonly) int dataIndicator;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) bool inAirplaneMode;
@property (readonly) bool is3GConnection;
@property (readonly) bool is4GConnection;
@property (readonly) bool isDataAvailable;
@property (readonly) bool isFatPipe;
@property (readonly) bool isNetworkUp;
@property (readonly) bool isOnWWAN;
@property (nonatomic, readonly) EFObservable *networkObservable;
@property (readonly) Class superclass;
@property (readonly) long long transportType;
@property (nonatomic, readonly) EFObservable *wifiObservable;

+ (id)addNetworkObserverBlock:(id /* block */)arg1 queue:(id)arg2;
+ (id)networkAssertionWithIdentifier:(id)arg1;
+ (id)observers;
+ (void)performExecuteOnObservers;
+ (void)removeNetworkObserver:(id)arg1;
+ (id)sharedInstance;
+ (id)signpostLog;

- (void).cxx_destruct;
- (void)_carrierBundleDidChange;
- (void)_checkKeys:(id)arg1 forStore:(struct __SCDynamicStore { }*)arg2;
- (void)_handleWiFiNotification:(unsigned int)arg1;
- (void)_initializeDataStatus;
- (bool)_isNetworkUp_nts;
- (id)_networkAssertionWithIdentifier:(id)arg1;
- (void)_registerStateCaptureHandler;
- (void)_resetDataStatusInitialized;
- (void)_setDataStatus_nts:(id)arg1;
- (void)_setFlags:(unsigned int)arg1 forReachability:(struct __SCNetworkReachability { }*)arg2;
- (void)_setupSymptoms;
- (bool)_simulationOverrideForType:(unsigned long long)arg1 actualValue:(bool)arg2;
- (void)_updateActiveCalls;
- (void)airplaneModeChanged;
- (id)awdNetworkDiagnosticReport;
- (void)callObserver:(id)arg1 callChanged:(id)arg2;
- (void)connectionActivationError:(id)arg1 connection:(int)arg2 error:(int)arg3;
- (id)copyCarrierBundleValue:(id)arg1;
- (int)dataIndicator;
- (int)dataStatus;
- (void)dataStatus:(id)arg1 dataStatusInfo:(id)arg2;
- (void)dealloc;
- (bool)inAirplaneMode;
- (id)init;
- (bool)is3GConnection;
- (bool)is4GConnection;
- (bool)isDataAvailable;
- (bool)isFatPipe;
- (bool)isNetworkUp;
- (bool)isOnWWAN;
- (id)networkObservable;
- (void)preferredDataSimChanged:(id)arg1;
- (unsigned long long)signpostID;
- (void)simStatusDidChange:(id)arg1 status:(id)arg2;
- (long long)transportType;
- (id)wifiObservable;

@end
