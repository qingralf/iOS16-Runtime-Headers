/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CMContinuityCaptureCore.framework/CMContinuityCaptureCore
 */

@interface CMContinuityCaptureRemoteAudioDevice : NSObject <AVCaptureAudioDataOutputSampleBufferDelegate, CMContinuityCaptureRemoteDevice> {
    long long  _audioBufferDropCounter;
    long long  _audioBufferOutputCounter;
    unsigned int  _audioBytesPerSample;
    bool  _audioClockIsSynchronized;
    AVCaptureAudioDataOutput * _audioDataOutput;
    AVCaptureDevice * _audioDevice;
    AVCaptureDeviceInput * _audioDeviceInput;
    double  _audioSampleRate;
    bool  _avCaptureSessionStarted;
    bool  _avcActive;
    AVCAudioStream * _avcAudioStream;
    AVCStreamInput * _avcStreamInput;
    AVCMediaStreamNegotiator * _avcStreamNegotiator;
    id /* block */  _bufferFailureCheckBlock;
    CMContinuityCaptureDeviceCapabilities * _capabilities;
    CMContinuityCaptureRemoteClient * _client;
    CMContinuityCaptureRemoteCompositeDevice * _compositeDevice;
    NSData * _currentAnswer;
    bool  _disableBufferBlockSizeCheck;
    long long  _entity;
    unsigned long long  _lastAudioSynchronizationNetworkSampleTime;
    NSString * _lastStreamStartTime;
    NSString * _lastStreamStopTime;
    unsigned long long  _networkAudioSampleTime;
    unsigned long long  _numberOfAVCFramesDropped;
    NSObject<OS_dispatch_group> * _pendingAVCActivationGroup;
    NSObject<OS_dispatch_group> * _pendingAVCNegotiationGroup;
    NSObject<OS_dispatch_group> * _pendingAVCTeardownGroup;
    NSObject<OS_dispatch_queue> * _queue;
    NSData * _remainingAudioDataFromPreviousSbuf;
    unsigned int  _requiredAudioSampleCountPerBuffer;
    bool  _streaming;
}

@property (readonly, retain) AVCaptureDevice *audioDevice;
@property (readonly, retain) CMContinuityCaptureDeviceCapabilities *capabilities;
@property (readonly, retain) CMContinuityCaptureRemoteClient *client;
@property (readonly) CMContinuityCaptureRemoteCompositeDevice *compositeDevice;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) long long entity;
@property (readonly) unsigned long long hash;
@property (readonly, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_abort:(id /* block */)arg1;
- (struct opaqueCMSampleBuffer { }*)_createSampleBufferForAudioData:(id)arg1 dataRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 pts:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 formatDescription:(struct opaqueCMFormatDescription { }*)arg4;
- (void)_dispatchAudioFrame:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)_postEvent:(id)arg1 entity:(long long)arg2;
- (void)_processIncomingAudioBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_resetNetworkSampleTime;
- (bool)_shouldPrintDroppedSampleBufferLog:(long long)arg1;
- (bool)_shouldPrintSampleBufferLog:(long long)arg1;
- (void)_startStream:(id)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)_stopStream:(long long)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)_terminateAVCSession:(id /* block */)arg1;
- (void)abort:(id /* block */)arg1;
- (id)audioDevice;
- (id)capabilities;
- (void)captureOutput:(id)arg1 didDropSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 fromConnection:(id)arg3;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 fromConnection:(id)arg3;
- (void)clearAVCArtifacts;
- (id)client;
- (id)compositeDevice;
- (id)createAVCAudioStreamForSidecarStream:(id)arg1;
- (void)debugInfo:(id /* block */)arg1;
- (id)description;
- (void)didStartStreamInput:(id)arg1;
- (void)didStopStreamInput:(id)arg1;
- (void)dispatchFrame:(struct opaqueCMSampleBuffer { }*)arg1 entity:(long long)arg2 completion:(id /* block */)arg3;
- (long long)entity;
- (void)handleAVCNegotiation:(long long)arg1 data:(id)arg2;
- (void)handleSynchronizeAudioClockCompletion;
- (id)initWithCompositeDevice:(id)arg1 entity:(long long)arg2 capabilities:(id)arg3 client:(id)arg4;
- (id)newAudioStreamConfigWithIsWired:(bool)arg1 key:(id)arg2 streamInputID:(long long)arg3 networkClock:(id)arg4;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)postEvent:(id)arg1 entity:(long long)arg2;
- (id)queue;
- (void)resetClient:(id)arg1;
- (void)resetClientComplete:(id)arg1;
- (void)setValueForControl:(id)arg1 completion:(id /* block */)arg2;
- (void)startAVCInputForConfiguration:(id)arg1 completion:(id /* block */)arg2;
- (void)startStream:(id)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)stopAVCInput:(id /* block */)arg1 option:(unsigned long long)arg2;
- (void)stopStream:(long long)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)stream:(id)arg1 didStart:(bool)arg2 error:(id)arg3;
- (void)streamDidRTCPTimeOut:(id)arg1;
- (void)streamDidRTPTimeOut:(id)arg1;
- (void)streamDidServerDie:(id)arg1;
- (void)streamDidStop:(id)arg1;
- (void)terminateAVCSession:(id /* block */)arg1;

@end
