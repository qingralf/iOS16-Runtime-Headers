/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AVFCapture.framework/AVFCapture
 */

@interface AVCaptureFigVideoDevice : AVCaptureDevice <MCProfileConnectionObserver> {
    bool  _HDRSceneDetectedForPhotoOutput;
    float  _ISOKVO;
    long long  _activeColorSpace;
    AVCaptureDeviceFormat * _activeDepthDataFormat;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _activeDepthDataMinFrameDuration;
    AVCaptureDeviceFormat * _activeFormat;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _activeMaxExposureDuration;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _activeMaxExposureDurationClientOverride;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _activeMaxFrameDuration;
    bool  _activeMaxFrameDurationSetByClient;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _activeMinFrameDuration;
    bool  _activeMinFrameDurationSetByClient;
    AVCaptureDevice * _activePrimaryConstituentDevice;
    unsigned long long  _activePrimaryConstituentDeviceRestrictedSwitchingBehaviorConditions;
    long long  _activePrimaryConstituentDeviceSwitchingBehavior;
    NSString * _activeSessionPreset;
    bool  _adjustingExposure;
    bool  _adjustingFocus;
    bool  _adjustingWB;
    long long  _autoFocusRangeRestriction;
    bool  _automaticallyAdjustsFaceDrivenAutoExposureEnabled;
    bool  _automaticallyAdjustsFaceDrivenAutoFocusEnabled;
    bool  _automaticallyAdjustsImageControlMode;
    bool  _automaticallyAdjustsVideoHDREnabled;
    NSArray * _availableBoxedMetadataFormatDescriptions;
    bool  _avcaptureDeviceAutoFlashEnabled;
    bool  _backgroundBlurActive;
    bool  _backgroundBlurAllowedByClient;
    bool  _backgroundBlurSupported;
    bool  _batteryPackDegradesCaptureQuality;
    AVCaptureDeviceControlRequestQueue * _biasedExposureControlRequests;
    NSMutableDictionary * _cachedFigCaptureSourceProperties;
    bool  _cachesFigCaptureSourceConfigurationChanges;
    bool  _cameraCalibrationDataDeliveryEnabled;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cameraFaceResult29;
    bool  _cameraFaceResult30;
    bool  _cameraOption10;
    bool  _cameraOption9;
    NSData * _cameraPoseMatrix;
    NSMutableArray * _captureSourceSupportedMetadata;
    bool  _centerStageActive;
    bool  _centerStageAllowedByClient;
    bool  _centerStageSupported;
    unsigned long long  _degradedCaptureQualityFactors;
    bool  _degradedCaptureQualityFactorsNeedInitialization;
    bool  _depthDataDeliveryEnabled;
    long long  _deskViewCameraMode;
    NSObject<OS_dispatch_queue> * _devicePropsQueue;
    struct { 
        float redGain; 
        float greenGain; 
        float blueGain; 
    }  _deviceWhiteBalanceGainsKVO;
    long long  _digitalFlashMode;
    NSDictionary * _digitalFlashSceneForPhotoOutput;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _exposureDurationKVO;
    long long  _exposureMode;
    struct CGPoint { 
        double x; 
        double y; 
    }  _exposurePointOfInterest;
    float  _exposureTargetBias;
    float  _exposureTargetOffsetKVO;
    bool  _eyeClosedDetectionEnabled;
    bool  _eyeDetectionEnabled;
    int  _faceDrivenAEAFMode;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _faceRectangle;
    int  _faceRectangleAngle;
    NSArray * _fallbackPrimaryConstituentDevices;
    struct OpaqueFigCaptureSource { } * _fcs;
    NSDictionary * _fcsAttributes;
    NSObject<OS_dispatch_queue> * _fcsQueue;
    NSString * _fcsUID;
    bool  _flashActive;
    bool  _flashAvailable;
    long long  _flashMode;
    bool  _flashSceneDetectedForPhotoOutput;
    long long  _focusMode;
    struct CGPoint { 
        double x; 
        double y; 
    }  _focusPointOfInterest;
    bool  _focusedAtMacro;
    NSArray * _formats;
    bool  _geometricDistortionCorrectionEnabled;
    bool  _globalToneMappingEnabled;
    struct { 
        float redGain; 
        float greenGain; 
        float blueGain; 
    }  _grayWorldDeviceWhiteBalanceGainsKVO;
    NSDictionary * _h264EncoderLimitations;
    NSDictionary * _hevcEncoderSettings;
    int  _highestSystemPressureLevelEncountered;
    long long  _imageControlMode;
    bool  _isConnected;
    bool  _isStillImageStabilizationScene;
    bool  _isSuspended;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastCustomExposureDuration;
    float  _lastCustomExposureISO;
    float  _lensPositionKVO;
    NSString * _localizedName;
    bool  _lowLightVideoCaptureEnabled;
    AVCaptureDeviceControlRequestQueue * _manualExposureControlRequests;
    AVCaptureDeviceControlRequestQueue * _manualFocusControlRequests;
    AVCaptureDeviceControlRequestQueue * _manualWhiteBalanceControlRequests;
    double  _maxAvailableVideoZoomFactor;
    double  _minAvailableVideoZoomFactor;
    long long  _nonDestructiveCropAspectRatio;
    bool  _nonDestructiveCropEnabled;
    NSObject<OS_dispatch_queue> * _observedHighFrequencyPropertiesQueue;
    NSMutableDictionary * _observedHighFrequencyPropertyCounts;
    bool  _photoOutputFlashSceneEnabled;
    long long  _portraitEffectStudioLightQuality;
    long long  _position;
    AVCaptureDevice * _preferredPrimaryConstituentDevice;
    unsigned long long  _primaryConstituentDeviceRestrictedSwitchingBehaviorConditions;
    long long  _primaryConstituentDeviceSwitchingBehavior;
    NSMutableDictionary * _propertyToFigCaptureSourcePropertyMap;
    bool  _providesStortorgetMetadata;
    NSObject<OS_dispatch_semaphore> * _serverConnectionDiedSemaphore;
    NSDictionary * _sessionPresetCompressionSettings;
    long long  _shallowDepthOfFieldEffectStatus;
    bool  _smileDetectionEnabled;
    bool  _smoothAutoFocusEnabled;
    bool  _spatialOverCaptureEnabled;
    bool  _studioLightingActive;
    bool  _studioLightingAllowedByClient;
    bool  _studioLightingSupported;
    bool  _subjectMonitoringEnabled;
    NSArray * _supportedFallbackPrimaryConstituentDevices;
    NSDictionary * _supportedOptionalFaceDetectionFeatures;
    AVCaptureSystemPressureState * _systemPressureState;
    long long  _timeOfFlightProjectorMode;
    bool  _torchActive;
    bool  _torchAvailable;
    float  _torchLevel;
    long long  _torchMode;
    bool  _variableFrameRateVideoCaptureEnabled;
    bool  _videoHDREnabled;
    bool  _videoHDRSuspended;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _videoMinFrameDurationOverride;
    id  _videoMinFrameDurationOverrideOwner;
    long long  _videoStabilizationStrength;
    float  _videoZoomFactor;
    float  _videoZoomRampAcceleration;
    int  _videoZoomRampCounter;
    float  _videoZoomRampTarget;
    bool  _waitingForExposureAdjustmentBeforeLocking;
    bool  _walletDegradesCaptureQuality;
    unsigned long long  _wbCalibrationCount;
    double ** _wbCalibrationMatrices;
    struct { float x1; float x2; } * _wbCalibrationTemperatures;
    double  _wbLastPredictedTemp;
    long long  _wbMode;
    bool  _wbSeedEnabled;
    double  _wbSeedTemp;
    unsigned long long  _wbTemperatureIterations;
    AVWeakReference * _weakReference;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (bool)_cameraAccessIsEnabled;
+ (id)_devices;
+ (id)_devicesWithPriorRegisteredDevices:(id)arg1;
+ (id)_newFigCaptureSources;
+ (void)_reconnectDevices:(id)arg1;
+ (bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)initialize;

- (id)AVVideoSettingsForSessionPreset:(id)arg1;
- (float)ISO;
- (float)ISODigitalThreshold;
- (void)_checkTCCAccess;
- (struct { float x1; float x2; })_chromaticityValuesForDeviceWhiteBalanceGains:(struct { float x1; float x2; float x3; })arg1 atMix:(double)arg2;
- (id)_copyFigCaptureSourceProperty:(struct __CFString { }*)arg1;
- (id)_copyFormatsArray;
- (void)_decrementObserverCountForHighFrequencyProperty:(id)arg1;
- (struct { float x1; float x2; float x3; })_deviceWhiteBalanceGainsForChromaticityValues:(struct { float x1; float x2; })arg1 temperature:(double)arg2;
- (id)_digitalFlashExposureTimes;
- (long long)_digitalFlashStatus;
- (void)_drainManualControlRequestQueue:(id)arg1;
- (void)_drainManualControlRequestQueues;
- (bool)_ensureWhiteBalanceCalibrationUnpacked;
- (id)_faceDetectionConfigurationDictionary;
- (id)_getFigCaptureSourceProperty:(struct __CFString { }*)arg1;
- (void)_handleManualControlCompletionForRequestQueue:(id)arg1 withPayload:(id)arg2;
- (void)_handleNotification:(struct __CFString { }*)arg1 payload:(id)arg2;
- (bool)_hasKeyValueObserversForHighFrequencyProperty:(id)arg1;
- (void)_incrementObserverCountForHighFrequencyProperty:(id)arg1;
- (void)_initDegradedCaptureQualityFactors;
- (id)_initWithFigCaptureSource:(struct OpaqueFigCaptureSource { }*)arg1;
- (bool)_isAppleManufacturer;
- (bool)_isBackgroundBlurActiveForEnabled:(bool)arg1;
- (bool)_isBravoVariant;
- (bool)_isCenterStageActiveForEnabled:(bool)arg1;
- (bool)_isDepthDataDeliveryEnabled;
- (bool)_isFlashScene;
- (bool)_isHighDynamicRangeScene;
- (bool)_isStillImageStabilizationScene;
- (bool)_isStudioLightingActiveForEnabled:(bool)arg1;
- (bool)_isWBSeedEnabled;
- (int)_orderInDevicesArray;
- (void)_performBlockOnMainThread:(id /* block */)arg1;
- (void)_populateSupportedFallbackPrimaryConstituentDevices;
- (double)_predictedTempForGains:(struct { float x1; float x2; float x3; })arg1;
- (void)_rampToVideoZoomFactor:(double)arg1 withRate:(float)arg2 duration:(double)arg3 rampType:(int)arg4 rampTuning:(int)arg5;
- (id)_recommendedFrameRateRangeForVideoFormat:(id)arg1 depthFormat:(id)arg2 figSystemPressureLevel:(int)arg3;
- (void)_reconnectToFigCaptureSource:(struct OpaqueFigCaptureSource { }*)arg1;
- (void)_resetVideoHDRSuspended;
- (void)_restoreFigCaptureSourceProperties;
- (void)_setActiveFormat:(id)arg1 resetVideoZoomFactorAndMinMaxFrameDurations:(bool)arg2 sessionPreset:(id)arg3;
- (void)_setActivePrimaryConstituentDeviceSwitchingBehavior:(long long)arg1 restrictedSwitchingBehaviorConditions:(unsigned long long)arg2;
- (void)_setActiveVideoMaxFrameDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (int)_setActiveVideoMaxFrameDurationInternal:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_setActiveVideoMinFrameDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (int)_setActiveVideoMinFrameDurationInternal:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_setAdjustingExposure:(bool)arg1;
- (void)_setAdjustingFocus:(bool)arg1;
- (void)_setAdjustingWhiteBalance:(bool)arg1;
- (void)_setBackgroundBlurAllowed:(bool)arg1;
- (void)_setCameraCalibrationDataDeliveryEnabled:(bool)arg1;
- (void)_setCenterStageAllowed:(bool)arg1;
- (void)_setDepthDataDeliveryEnabled:(bool)arg1;
- (void)_setDigitalFlashModeInternal:(long long)arg1;
- (void)_setDigitalFlashSceneForPhotoOutput:(id)arg1;
- (int)_setExposureWithMode:(long long)arg1 duration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 ISO:(float)arg3 requestID:(int)arg4 newMaxFrameDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg5;
- (int)_setFaceDetectionFeatureEnabled:(bool)arg1 enabledState:(bool*)arg2;
- (void)_setFigCaptureSource:(struct OpaqueFigCaptureSource { }*)arg1 allowSendingWorkToMainThread:(bool)arg2;
- (int)_setFigCaptureSourceProperty:(struct __CFString { }*)arg1 withValue:(id)arg2;
- (int)_setFigCaptureSourceProperty:(struct __CFString { }*)arg1 withValue:(id)arg2 cacheOnly:(bool)arg3;
- (void)_setFlashActive:(bool)arg1;
- (void)_setFlashAvailable:(bool)arg1;
- (void)_setFlashSceneDetectedForPhotoOutput:(bool)arg1;
- (int)_setFocusWithMode:(long long)arg1 lensPosition:(float)arg2 requestID:(int)arg3;
- (void)_setGlobalToneMappingEnabledInternal:(bool)arg1;
- (void)_setHDRSceneDetectedForPhotoOutput:(bool)arg1;
- (void)_setImageControlMode:(long long)arg1;
- (void)_setIsStillImageStabilizationScene:(bool)arg1;
- (void)_setMaxAvailableVideoZoomFactor:(double)arg1;
- (void)_setMinAvailableVideoZoomFactor:(double)arg1;
- (void)_setPhotoSettingsForSceneMonitoring:(id)arg1;
- (void)_setShallowDepthOfFieldEffectStatus:(long long)arg1;
- (void)_setStillImageStabilizationAutomaticallyEnabled:(bool)arg1;
- (void)_setStudioLightingAllowed:(bool)arg1;
- (void)_setTorchActive:(bool)arg1;
- (void)_setTorchAvailable:(bool)arg1;
- (void)_setTorchLevel:(float)arg1;
- (int)_setTorchMode:(long long)arg1 withLevel:(float)arg2;
- (void)_setVideoHDREnabled:(bool)arg1 forceResetVideoHDRSuspended:(bool)arg2;
- (void)_setVideoZoomFactor:(double)arg1;
- (void)_setWBSeedEnabled:(bool)arg1;
- (int)_setWhiteBalanceWithMode:(long long)arg1 gains:(struct { float x1; float x2; float x3; })arg2 requestID:(int)arg3;
- (id)_supportedOptionalFaceDetectionFeaturesDictionary;
- (void)_updateBackgroundBlurActiveForEnabled:(bool)arg1;
- (void)_updateCenterStageActiveForEnabled:(bool)arg1 updateDependentProperties:(bool)arg2;
- (void)_updateFigCaptureSourceObserverCounts;
- (void)_updatePortraitEffectStudioLightQuality:(long long)arg1;
- (void)_updateStudioLightingActiveForEnabled:(bool)arg1;
- (unsigned long long)_wbTemperatureIterations;
- (double)_whiteBalanceMixingFactorForTemperature:(double)arg1;
- (double)_whiteBalanceTemperatureForMixingFactor:(double)arg1;
- (long long)activeColorSpace;
- (id)activeDepthDataFormat;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })activeDepthDataMinFrameDuration;
- (id)activeFormat;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })activeMaxExposureDuration;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })activeMaxExposureDurationClientOverride;
- (id)activePrimaryConstituentDevice;
- (unsigned long long)activePrimaryConstituentDeviceRestrictedSwitchingBehaviorConditions;
- (long long)activePrimaryConstituentDeviceSwitchingBehavior;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })activeVideoMaxFrameDuration;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })activeVideoMinFrameDuration;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void*)arg4;
- (bool)appliesSessionPresetMaxIntegrationTimeOverrideToActiveFormat;
- (long long)autoFocusRangeRestriction;
- (bool)automaticallyAdjustsFaceDrivenAutoExposureEnabled;
- (bool)automaticallyAdjustsFaceDrivenAutoFocusEnabled;
- (bool)automaticallyAdjustsImageControlMode;
- (bool)automaticallyAdjustsVideoHDREnabled;
- (id)availableBoxedMetadataFormatDescriptions;
- (id)bravoCameraSelectionBehavior;
- (bool)cachesFigCaptureSourceConfigurationChanges;
- (id)cameraPoseMatrix;
- (void)cancelVideoZoomRamp;
- (struct { float x1; float x2; })chromaticityValuesForDeviceWhiteBalanceGains:(struct { float x1; float x2; float x3; })arg1;
- (id)companionDeskViewCamera;
- (id)constituentDeviceWithDeviceType:(id)arg1;
- (id)currentPrimaryConstituentDevice;
- (void)dealloc;
- (unsigned long long)degradedCaptureQualityFactors;
- (long long)deskViewCameraMode;
- (struct OpaqueCMClock { }*)deviceClock;
- (id)deviceFormatForSessionPreset:(id)arg1 videoFormat:(unsigned int)arg2;
- (id)deviceType;
- (struct { float x1; float x2; float x3; })deviceWhiteBalanceGains;
- (struct { float x1; float x2; float x3; })deviceWhiteBalanceGainsForChromaticityValues:(struct { float x1; float x2; })arg1;
- (struct { float x1; float x2; float x3; })deviceWhiteBalanceGainsForTemperatureAndTintValues:(struct { float x1; float x2; })arg1;
- (long long)digitalFlashMode;
- (id)digitalFlashSceneForPhotoOutput;
- (double)dualCameraSwitchOverVideoZoomFactor;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })exposureDuration;
- (long long)exposureMode;
- (struct CGPoint { double x1; double x2; })exposurePointOfInterest;
- (float)exposureTargetBias;
- (float)exposureTargetOffset;
- (bool)eyeClosedDetectionEnabled;
- (bool)eyeDetectionEnabled;
- (int)faceDrivenAEAFMode;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })faceRectangle;
- (int)faceRectangleAngle;
- (id)fallbackPrimaryConstituentDevices;
- (struct OpaqueFigCaptureSource { }*)figCaptureSource;
- (int)figCaptureSourceDeviceType;
- (long long)flashMode;
- (float)focalLength;
- (long long)focusMode;
- (struct CGPoint { double x1; double x2; })focusPointOfInterest;
- (id)formats;
- (struct { float x1; float x2; float x3; })grayWorldDeviceWhiteBalanceGains;
- (bool)hasFlash;
- (bool)hasMediaType:(id)arg1;
- (bool)hasTorch;
- (bool)hevcAllowBFramesForHighCTUCount;
- (int)hevcTurboModeVersion;
- (long long)imageControlMode;
- (id)init;
- (bool)isActiveVideoMaxFrameDurationSet;
- (bool)isActiveVideoMinFrameDurationSet;
- (bool)isAdjustingExposure;
- (bool)isAdjustingFocus;
- (bool)isAdjustingWhiteBalance;
- (bool)isAutoFocusRangeRestrictionSupported;
- (bool)isAutoRedEyeReductionSupported;
- (bool)isBackgroundBlurActive;
- (bool)isCameraIntrinsicMatrixDeliverySupported;
- (bool)isCenterStageActive;
- (bool)isCinematicFramingActive;
- (bool)isCinematicVideoFocusAtPointSupported;
- (bool)isConnected;
- (bool)isConstituentPhotoCalibrationDataSupported;
- (bool)isContinuityCamera;
- (bool)isDeskViewCameraModeSupported:(long long)arg1;
- (bool)isDiagnosticsTestSupported:(id)arg1;
- (bool)isExposureModeSupported:(long long)arg1;
- (bool)isExposurePointOfInterestSupported;
- (bool)isEyeClosedDetectionSupported;
- (bool)isEyeDetectionSupported;
- (bool)isFaceDetectionDrivenImageProcessingEnabled;
- (bool)isFaceDetectionDuringVideoPreviewSupported;
- (bool)isFaceDetectionSupported;
- (bool)isFaceDrivenAutoExposureEnabled;
- (bool)isFaceDrivenAutoFocusEnabled;
- (bool)isFlashActive;
- (bool)isFlashAvailable;
- (bool)isFlashModeSupported:(long long)arg1;
- (bool)isFlashSceneDetectedForPhotoOutput;
- (bool)isFocusModeSupported:(long long)arg1;
- (bool)isFocusPointOfInterestSupported;
- (bool)isFocusedAtMacro;
- (bool)isGeometricDistortionCorrectionEnabled;
- (bool)isGeometricDistortionCorrectionSupported;
- (bool)isGlobalToneMappingEnabled;
- (bool)isHDRSceneDetectedForPhotoOutput;
- (bool)isHEIFSupported;
- (bool)isHEVCPreferred;
- (bool)isHEVCRelaxedAverageBitRateTargetSupported;
- (bool)isHEVCSupported;
- (bool)isImageControlModeSupported:(long long)arg1;
- (bool)isLensStabilizationSupported;
- (bool)isLockedForConfiguration;
- (bool)isLockingFocusWithCustomLensPositionSupported;
- (bool)isLockingWhiteBalanceWithCustomDeviceGainsSupported;
- (bool)isLowLightVideoCaptureEnabled;
- (bool)isMachineReadableCodeDetectionSupported;
- (bool)isNonDestructiveCropEnabled;
- (bool)isObjectDetectionSupported;
- (bool)isOverheadCameraModeSupported:(long long)arg1;
- (bool)isPortraitEffectActive;
- (bool)isPreviewQualityAdjustedPhotoFilterRenderingSupported;
- (bool)isProResSupported;
- (bool)isRampingVideoZoom;
- (bool)isSISSupported;
- (bool)isSmileDetectionSupported;
- (bool)isSmoothAutoFocusEnabled;
- (bool)isSmoothAutoFocusSupported;
- (bool)isSpatialOverCaptureEnabled;
- (bool)isStillImageStabilizationScene;
- (bool)isStudioLightActive;
- (bool)isStudioLightingActive;
- (bool)isSubjectAreaChangeMonitoringEnabled;
- (bool)isTimeOfFlightProjectorModeSupported:(long long)arg1;
- (bool)isTorchActive;
- (bool)isTorchAvailable;
- (bool)isTorchModeSupported:(long long)arg1;
- (bool)isVariableFrameRateVideoCaptureEnabled;
- (bool)isVideoHDREnabled;
- (bool)isVideoHDRSuspended;
- (bool)isVideoStabilizationSupported;
- (bool)isVideoZoomSmoothingSupported;
- (bool)isWhiteBalanceModeSupported:(long long)arg1;
- (bool)isWideColorSupported;
- (float)lensAperture;
- (float)lensPosition;
- (id)localizedName;
- (bool)lockForConfiguration:(id*)arg1;
- (id)manufacturer;
- (double)maxAvailableVideoZoomFactor;
- (float)maxExposureTargetBias;
- (struct { int x1; int x2; })maxH264PhotoDimensions;
- (struct { int x1; int x2; })maxH264VideoDimensions;
- (float)maxWhiteBalanceGain;
- (double)minAvailableVideoZoomFactor;
- (float)minExposureTargetBias;
- (int)minMacroblocksForHighProfileAbove30fps;
- (int)minMacroblocksForHighProfileUpTo30fps;
- (long long)minimumFocusDistance;
- (id)modelID;
- (long long)nonDestructiveCropAspectRatio;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (long long)overheadCameraMode;
- (long long)position;
- (int)powerConsumptionAt30FPSForOISMode:(int)arg1;
- (id)preferredPrimaryConstituentDevice;
- (unsigned long long)primaryConstituentDeviceRestrictedSwitchingBehaviorConditions;
- (long long)primaryConstituentDeviceSwitchingBehavior;
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;
- (bool)providesStortorgetMetadata;
- (void)rampExponentiallyToVideoZoomFactor:(float)arg1 withDuration:(double)arg2;
- (void)rampToVideoZoomFactor:(double)arg1 withRate:(float)arg2;
- (void)rampToVideoZoomFactor:(float)arg1 withTuning:(long long)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void*)arg3;
- (void)resetVideoMinFrameDurationOverrideForOwner:(id)arg1;
- (id)runDiagnosticsWithTestType:(id)arg1;
- (void)setActiveColorSpace:(long long)arg1;
- (void)setActiveDepthDataFormat:(id)arg1;
- (void)setActiveDepthDataMinFrameDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setActiveFormat:(id)arg1;
- (void)setActiveMaxExposureDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setActiveVideoMaxFrameDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setActiveVideoMinFrameDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setAutoFocusRangeRestriction:(long long)arg1;
- (void)setAutomaticallyAdjustsFaceDrivenAutoExposureEnabled:(bool)arg1;
- (void)setAutomaticallyAdjustsFaceDrivenAutoFocusEnabled:(bool)arg1;
- (void)setAutomaticallyAdjustsImageControlMode:(bool)arg1;
- (void)setAutomaticallyAdjustsVideoHDREnabled:(bool)arg1;
- (void)setCachesFigCaptureSourceConfigurationChanges:(bool)arg1;
- (void)setCinematicVideoFocusAtPoint:(struct CGPoint { double x1; double x2; })arg1 objectID:(long long)arg2 isHardFocus:(bool)arg3 isFixedPlaneFocus:(bool)arg4;
- (void)setDeskViewCameraMode:(long long)arg1;
- (void)setDigitalFlashMode:(long long)arg1;
- (void)setExposureMode:(long long)arg1;
- (void)setExposureModeCustomWithDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 ISO:(float)arg2 completionHandler:(id /* block */)arg3;
- (void)setExposurePointOfInterest:(struct CGPoint { double x1; double x2; })arg1;
- (void)setExposureTargetBias:(float)arg1 completionHandler:(id /* block */)arg2;
- (void)setEyeClosedDetectionEnabled:(bool)arg1;
- (void)setEyeDetectionEnabled:(bool)arg1;
- (void)setFaceDetectionDrivenImageProcessingEnabled:(bool)arg1;
- (void)setFaceDrivenAutoExposureEnabled:(bool)arg1;
- (void)setFaceDrivenAutoFocusEnabled:(bool)arg1;
- (void)setFallbackPrimaryConstituentDevices:(id)arg1;
- (void)setFlashMode:(long long)arg1;
- (void)setFocusMode:(long long)arg1;
- (void)setFocusModeLockedWithLensPosition:(float)arg1 completionHandler:(id /* block */)arg2;
- (void)setFocusPointOfInterest:(struct CGPoint { double x1; double x2; })arg1;
- (void)setGeometricDistortionCorrectionEnabled:(bool)arg1;
- (void)setGlobalToneMappingEnabled:(bool)arg1;
- (void)setImageControlMode:(long long)arg1;
- (void)setLowLightVideoCaptureEnabled:(bool)arg1;
- (void)setNonDestructiveCropAspectRatio:(long long)arg1;
- (void)setNonDestructiveCropEnabled:(bool)arg1;
- (void)setOverheadCameraMode:(long long)arg1;
- (void)setPrimaryConstituentDeviceSwitchingBehavior:(long long)arg1 restrictedSwitchingBehaviorConditions:(unsigned long long)arg2;
- (void)setProvidesStortorgetMetadata:(bool)arg1;
- (void)setSmileDetectionEnabled:(bool)arg1;
- (void)setSmoothAutoFocusEnabled:(bool)arg1;
- (void)setSpatialOverCaptureEnabled:(bool)arg1;
- (void)setSubjectAreaChangeMonitoringEnabled:(bool)arg1;
- (void)setTimeLapseCaptureRate:(float)arg1;
- (void)setTimeOfFlightProjectorMode:(long long)arg1;
- (void)setTorchMode:(long long)arg1;
- (bool)setTorchModeOnWithLevel:(float)arg1 error:(id*)arg2;
- (void)setVariableFrameRateVideoCaptureEnabled:(bool)arg1;
- (void)setVideoHDREnabled:(bool)arg1;
- (void)setVideoHDRSuspended:(bool)arg1;
- (void)setVideoMinFrameDurationOverride:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forOwner:(id)arg2;
- (void)setVideoStabilizationStrength:(long long)arg1;
- (void)setVideoZoomFactor:(double)arg1;
- (void)setVideoZoomRampAcceleration:(float)arg1;
- (void)setWhiteBalanceMode:(long long)arg1;
- (void)setWhiteBalanceModeLockedWithDeviceWhiteBalanceGains:(struct { float x1; float x2; float x3; })arg1 completionHandler:(id /* block */)arg2;
- (long long)shallowDepthOfFieldEffectStatus;
- (bool)smileDetectionEnabled;
- (id)supportedFallbackPrimaryConstituentDevices;
- (id)supportedMetadataObjectIdentifiers;
- (id)supportedVisionDataProperties;
- (bool)supportsAVCaptureSessionPreset:(id)arg1;
- (bool)supportsMultiCamCaptureWithDevice:(id)arg1;
- (id)systemPressureState;
- (struct { float x1; float x2; })temperatureAndTintValuesForDeviceWhiteBalanceGains:(struct { float x1; float x2; float x3; })arg1;
- (float)timeLapseCaptureRate;
- (long long)timeOfFlightBankCount;
- (long long)timeOfFlightProjectorMode;
- (float)torchLevel;
- (long long)torchMode;
- (id)uniqueID;
- (void)unlockForConfiguration;
- (bool)usesQuantizationScalingMatrix_H264_Steep_16_48;
- (long long)videoStabilizationStrength;
- (double)videoZoomFactor;
- (float)videoZoomRampAcceleration;
- (id)virtualDeviceSwitchOverVideoZoomFactors;
- (long long)whiteBalanceMode;
- (bool)wideAngleCameraSourcesFromUltraWide;

@end
