/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VFX.framework/VFX
 */

@interface VFXSceneLoadOptions : NSObject {
    void allowLoadingFromFuture;
    void automaticallyPrepareScene;
    void clientID;
    void commandQueue;
    void device;
    void enableParallelDecoding;
    void enableRuntimeScriptCompilation;
    void loadBindingsMetadata;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  metalLibraryURL;
    void setupAsTemplate;
    void setupAsyncRuntime;
    void setupRenderer;
    void systemRegistrationOptions;
}

@property (nonatomic) bool allowLoadingFromFuture;
@property (nonatomic) bool automaticallyPrepareScene;
@property (nonatomic, copy) NSString *clientID;
@property (nonatomic, retain) <MTLCommandQueue> *commandQueue;
@property (nonatomic, retain) <MTLDevice> *device;
@property (nonatomic) bool enableParallelDecoding;
@property (nonatomic) bool enableRuntimeScriptCompilation;
@property (nonatomic) bool loadBindingsMetadata;
@property (nonatomic, copy) NSURL *metalLibraryURL;
@property (nonatomic) bool setupAsTemplate;
@property (nonatomic) bool setupAsyncRuntime;
@property (nonatomic) bool setupRenderer;

- (void).cxx_destruct;
- (bool)allowLoadingFromFuture;
- (bool)automaticallyPrepareScene;
- (id)clientID;
- (id)commandQueue;
- (id)device;
- (bool)enableParallelDecoding;
- (bool)enableRuntimeScriptCompilation;
- (id)init;
- (bool)loadBindingsMetadata;
- (id)metalLibraryURL;
- (void)setAllowLoadingFromFuture:(bool)arg1;
- (void)setAutomaticallyPrepareScene:(bool)arg1;
- (void)setClientID:(id)arg1;
- (void)setCommandQueue:(id)arg1;
- (void)setDevice:(id)arg1;
- (void)setEnableParallelDecoding:(bool)arg1;
- (void)setEnableRuntimeScriptCompilation:(bool)arg1;
- (void)setLoadBindingsMetadata:(bool)arg1;
- (void)setMetalLibraryURL:(id)arg1;
- (void)setSetupAsTemplate:(bool)arg1;
- (void)setSetupAsyncRuntime:(bool)arg1;
- (void)setSetupRenderer:(bool)arg1;
- (bool)setupAsTemplate;
- (bool)setupAsyncRuntime;
- (bool)setupRenderer;

@end
